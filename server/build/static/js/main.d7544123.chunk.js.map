{"version":3,"sources":["Components/ProjectStatsScreen/ProjectStatsScreen.module.css","Components/ProjectScreen/ProjectScreen.module.css","Components/SearchScreen/SearchScreen.module.css","Components/HandOverScreen/HandOverScreen.module.css","Components/SearchScreen/SearchString/SearchString.module.css","Components/WorkScreen/Choosen/ChoosenString/ChoosenString.module.css","Components/WorkScreen/WorkScreen.module.css","Components/WorkScreen/Choosen/Choosen.module.css","Components/UserStatsScreen/UserStatsScreen.module.css","Components/UserStatScreen/UserStatScreen.module.css","Components/Header/Header.module.css","Components/WorkScreen/CaseString/CaseString.module.css","Components/ProjectStatsScreen/Cell/Cell.module.css","Components/UserStatScreen/switchButton/SwitchButton.module.css","Components/Header/HeaderLink/HeaderLink.module.css","App.module.css","Components/AuthScreen/AuthScreen.module.css","Components/WorkScreen/addButton/AddButton.module.css","Components/UserStatsScreen/switchButton/SwitchButton.module.css","Components/UserStatScreen/Cell/Cell.module.css","img/logo.png","Components/WorkScreen/Choosen/PulseNumber/PulseNumber.module.css","Global/Functions.js","Global/Actions.js","Global/reducers/main_reducer.js","Global/redux-store.js","serviceWorker.js","Components/Header/HeaderLink/HeaderLink.js","Components/Header/Header.js","Components/WorkScreen/addButton/AddButton.js","Components/WorkScreen/CaseString/CaseString.js","Components/WorkScreen/Choosen/ChoosenString/ChoosenString.js","Components/WorkScreen/Choosen/PulseNumber/PulseNumber.js","Components/WorkScreen/Choosen/Choosen.js","Components/WorkScreen/WorkScreen.js","Components/AuthScreen/AuthScreen.js","Components/UserStatsScreen/switchButton/SwitchButton.js","Components/UserStatsScreen/UserStatsScreen.js","Components/ProjectScreen/ProjectScreen.js","Components/SearchScreen/SearchString/SearchString.js","Components/SearchScreen/SearchScreen.js","Components/HandOverScreen/HandOverScreen.js","Components/ProjectStatsScreen/Cell/Cell.js","Components/ProjectStatsScreen/ProjectStatsScreen.js","Components/UserStatScreen/switchButton/SwitchButton.js","Components/UserStatScreen/Cell/Cell.js","Components/UserStatScreen/UserStatScreen.js","App.js","index.js"],"names":["module","exports","moment","require","request_operator_cases","userhash","a","fetch","method","headers","response","ok","json","requestedData","alert","status","post_case_changes","changedCases","casesWithNoCirillic","map","el","street","adress","JSON","stringify","undefined","change_admin_operation","newOperation","applyFilters","filters","filtredElement","value","index","toLowerCase","fullAdress","indexOf","adressFilter","Number","id","idFilter","act","actFilter","stitcher","scaner","jointer","stitcherFilter","scanerFilter","isDone","jointerFilter","isDoneFilter","request_casesForSearch","post_done_cases","caseList","reset_userstats","request_projectStats","request_userStats","getMomentFromDateString","dateString","splitDate","split","stringDay","day","parseInt","replace","month","year","finishDate","date","startOf","getCaseFromServer","caseToChange","getOperationStats","statsOperation","choose_case_action","type","set_filter_index_action","set_filter_adress_action","set_filter_act_action","set_filter_id_action","switchViewMode_action","initialState","operator_cases","isFetching","data","casesForSearch","casesForHandOver","choosen_cases","projectStats","viewMode","currentNav","userInfo","isAdmin","newUser","name","operation","userToDelete","dateUsersStats","hardChangeToCase","incomeDate","expectedPages","stitchDate","scanDateStart","scanDateFinish","pages","scanNumber","jointDate","comment","isDoneDate","projectStats_pagesVisible","main_reducer","state","action","nav","then","casesForUser","choosen","store","dispatch","find","choosen_el","push","console","log","filter","length","format","forEach","scanDate","setDateToChoosen","existCase","wrongCaseList","usersStats","xhr","XMLHttpRequest","open","setRequestHeader","send","onload","post_new_user","deleteUser","requestedCase","hardChangeCase","postHardChange","reducers","combineReducers","main","createStore","Boolean","window","location","hostname","match","HeaderLink","props","className","s","buttonWrapper","curClass","activeLink","headerButton","onlyAdmin","invisible","defineClass","onClick","text","Header","header_wrapper","header_container","header_leftSide","icon","hoverElement","src","headerIcon","headerText","navbar","AddButton","wrapper","square","event","CaseString","datacase","wrapperOnScan","cell","user","ChoosenString","deleteChoosenString","smallcell","cancelButton","input","onChange","target","PulseNumber","pulseNumber","Choosen","header","body","key","footer","hideButton","postButton","placeholder","WorkScreen","casesToView","filtredCasesCount","changeAdminOperation","getAttribute","change_admin_operation_action","bigText","midText","changeOperation","adminWindow","caseList_header","topSide","bottomSide","autoFocus","searchInput","onKeyDown","preventDefault","content","i","arr","AuthScreen","onKeyPress","SwitchButton","clicked","active","UserStatsScreen","userTotal","userDays","cases","m_date","isSame","dateObj","userKey","tableHeader","headerCell","operatorsString","headerStitcher","headerScaner","headerJointer","createOperatorsString","tableBody","dateStrings","usersString","createDateStrings","tableFooter","totals","createTotalString","avarages","toFixed","createAvarageString","ProjectScreen","container","container_header","smallCell","select","greenButton","button","onDoubleClick","SearchString","indexIsWrong","wrapper_new","wraper_stitch","wrapper_scanStart","wrapper_scanFinish","wrapper_joined","wrapper_isDone","defineClassString","bigcell","factPages","wrongIndex","SearchScreen","maxCounter","suitableWithFilters","side","Array","isArray","caseToCheck","actsWithEmptyFactPages","actNumber","sameScanNumberExist","anyCase","scanNumberInvalidChecker","HandOverScreen","handOverCaseListLength","handOver","Cell","visible","wrapper_2floor","inner","ProjectStatsScreen","total","checkbox","wrapper_line","actStats","segment_header","segment_body","allActs","allActsStats","strings","actName","new","onScan","string","actString","stringcell","startDate","stitch","scan","joint","done","actsStat","allDates","allDatesStats","dateStat","classString","stitchColor","field","displayNone","UserStatScreen","dateStats","neededMonth","m_neededMonth","currentMonthDates","getCurrentMonth","users","monthInput","allUsers","existUser","sort","content_header","headerString","usersTotal","content_body","allStrings","stringSum","userObj","bodyString","content_body_creator","content_footer","footerString","totalSum","footerCell","content_footer_creator","bodyTable","App","bg_image","render","ReactDOM","StrictMode","bind","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d7544123.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProjectStatsScreen_wrapper__v7RXj\",\"checkbox\":\"ProjectStatsScreen_checkbox__29CGr\",\"wrapper_line\":\"ProjectStatsScreen_wrapper_line__1Y7yn\",\"actStats\":\"ProjectStatsScreen_actStats__31tHM\",\"segment_header\":\"ProjectStatsScreen_segment_header__3KJjs\",\"cell\":\"ProjectStatsScreen_cell__1Pxqc\",\"placeholder\":\"ProjectStatsScreen_placeholder____sHY\",\"segment_body\":\"ProjectStatsScreen_segment_body__3YIIy\",\"actString\":\"ProjectStatsScreen_actString__2_Jqu\",\"stringcell\":\"ProjectStatsScreen_stringcell__3omIu\",\"new\":\"ProjectStatsScreen_new__33lMB\",\"stitch\":\"ProjectStatsScreen_stitch__Zqdo3\",\"onScan\":\"ProjectStatsScreen_onScan__2voWN\",\"scan\":\"ProjectStatsScreen_scan__PXTNT\",\"joint\":\"ProjectStatsScreen_joint__2Qlno\",\"done\":\"ProjectStatsScreen_done__3id9F\",\"footer\":\"ProjectStatsScreen_footer__Ih1Wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProjectScreen_wrapper__2JV3f\",\"button\":\"ProjectScreen_button__-MvCF\",\"container\":\"ProjectScreen_container__1XLKP\",\"container_header\":\"ProjectScreen_container_header__16via\",\"cell\":\"ProjectScreen_cell__3jnyF\",\"smallCell\":\"ProjectScreen_smallCell__3UXca\",\"greenButton\":\"ProjectScreen_greenButton__1O8a6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchScreen_wrapper__2r3zS\",\"header\":\"SearchScreen_header__15gAs\",\"side\":\"SearchScreen_side__XKzSI\",\"bigcell\":\"SearchScreen_bigcell__2tSFC\",\"cell\":\"SearchScreen_cell__3UMPB\",\"input\":\"SearchScreen_input__2dUyE\",\"body\":\"SearchScreen_body__2CO1J\",\"footer\":\"SearchScreen_footer__3TI9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HandOverScreen_wrapper__1MEcb\",\"header\":\"HandOverScreen_header__2ca4b\",\"side\":\"HandOverScreen_side__sX6rY\",\"bigcell\":\"HandOverScreen_bigcell__WiAXo\",\"cell\":\"HandOverScreen_cell__1wbEH\",\"body\":\"HandOverScreen_body__396iR\",\"footer\":\"HandOverScreen_footer__L_Y_u\",\"handOver\":\"HandOverScreen_handOver__3oFMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_new\":\"SearchString_wrapper_new__3-WFS\",\"wraper_stitch\":\"SearchString_wraper_stitch__KREQW\",\"wrapper_scanStart\":\"SearchString_wrapper_scanStart__1dCeE\",\"wrapper_scanFinish\":\"SearchString_wrapper_scanFinish__1oLo4\",\"wrapper_joined\":\"SearchString_wrapper_joined__2qBWS\",\"wrapper_isDone\":\"SearchString_wrapper_isDone__3z3xS\",\"bigcell\":\"SearchString_bigcell__30sLd\",\"visualize\":\"SearchString_visualize__3i1CM\",\"cell\":\"SearchString_cell__2ssUJ\",\"indexIsWrong\":\"SearchString_indexIsWrong__JJcZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChoosenString_wrapper__U0xCf\",\"visualize\":\"ChoosenString_visualize__2XeBL\",\"cell\":\"ChoosenString_cell__3zbgB\",\"smallcell\":\"ChoosenString_smallcell__1_lYx\",\"cancelButton\":\"ChoosenString_cancelButton__38qqj\",\"input\":\"ChoosenString_input__2UotN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WorkScreen_wrapper__QPO5A\",\"header\":\"WorkScreen_header__VRcwm\",\"bigText\":\"WorkScreen_bigText__17g7L\",\"midText\":\"WorkScreen_midText__2K1YO\",\"body\":\"WorkScreen_body__2Zt4G\",\"caseList\":\"WorkScreen_caseList__30lrf\",\"caseList_header\":\"WorkScreen_caseList_header___Bv4b\",\"topSide\":\"WorkScreen_topSide__5IgxE\",\"searchInput\":\"WorkScreen_searchInput__bAZDK\",\"bottomSide\":\"WorkScreen_bottomSide__2avjT\",\"cell\":\"WorkScreen_cell__17XZj\",\"content\":\"WorkScreen_content__1gDeb\",\"footer\":\"WorkScreen_footer__3yODp\",\"choosen\":\"WorkScreen_choosen__S_zQF\",\"changeOperation\":\"WorkScreen_changeOperation__1sKIW\",\"IndexInput\":\"WorkScreen_IndexInput__2BL-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Choosen_wrapper__3dgCa\",\"header\":\"Choosen_header__2RL_J\",\"body\":\"Choosen_body__2wagS\",\"smallcell\":\"Choosen_smallcell__3vmgi\",\"cell\":\"Choosen_cell__ppDDM\",\"footer\":\"Choosen_footer__nMIgL\",\"input\":\"Choosen_input__8p_H5\",\"postButton\":\"Choosen_postButton__2TCRo\",\"hideButton\":\"Choosen_hideButton__11Rq_\",\"pulseNumber\":\"Choosen_pulseNumber__2f3d_\",\"pulsing\":\"Choosen_pulsing__VR1jc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserStatsScreen_wrapper__3U-TT\",\"header\":\"UserStatsScreen_header__21nXi\",\"button\":\"UserStatsScreen_button__1YhKq\",\"body\":\"UserStatsScreen_body__d5tF9\",\"tableHeader\":\"UserStatsScreen_tableHeader__18UHw\",\"headerCell\":\"UserStatsScreen_headerCell__3WWks\",\"headerStitcher\":\"UserStatsScreen_headerStitcher__26mS-\",\"headerScaner\":\"UserStatsScreen_headerScaner__2mnCN\",\"headerJointer\":\"UserStatsScreen_headerJointer__3EeZZ\",\"tableBody\":\"UserStatsScreen_tableBody__2rcna\",\"usersString\":\"UserStatsScreen_usersString__3MFcd\",\"cell\":\"UserStatsScreen_cell__80hY6\",\"stitcher\":\"UserStatsScreen_stitcher___UwKp\",\"scaner\":\"UserStatsScreen_scaner__3OgsH\",\"jointer\":\"UserStatsScreen_jointer__2vpIR\",\"tableFooter\":\"UserStatsScreen_tableFooter__pixN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserStatScreen_wrapper__2SVGQ\",\"header\":\"UserStatScreen_header__OP0Lc\",\"button\":\"UserStatScreen_button__3Muvv\",\"body\":\"UserStatScreen_body__1B3Wc\",\"tableHeader\":\"UserStatScreen_tableHeader__3o2KV\",\"headerString\":\"UserStatScreen_headerString__1j-cA\",\"headerCell\":\"UserStatScreen_headerCell__35mF9\",\"bodyString\":\"UserStatScreen_bodyString__3Geyw\",\"cell\":\"UserStatScreen_cell__1W2ds\",\"footerCell\":\"UserStatScreen_footerCell__3LXd3\",\"footerString\":\"UserStatScreen_footerString__3pli-\",\"totalCell\":\"UserStatScreen_totalCell__30idT\",\"incell\":\"UserStatScreen_incell__YI-zU\",\"checkbox\":\"UserStatScreen_checkbox__3JQnK\",\"bodyTable\":\"UserStatScreen_bodyTable__2DxSW\",\"monthInput\":\"UserStatScreen_monthInput__RFx8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrapper\":\"Header_header_wrapper__1wfMg\",\"header_container\":\"Header_header_container__rwffk\",\"header_leftSide\":\"Header_header_leftSide__2roA-\",\"icon\":\"Header_icon__1OpK5\",\"headerText\":\"Header_headerText__e8nYw\",\"text\":\"Header_text__1fvw-\",\"hoverElement\":\"Header_hoverElement__221wf\",\"navbar\":\"Header_navbar__2Qn7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CaseString_wrapper__1xeRB\",\"visualize\":\"CaseString_visualize__3bZsH\",\"wrapperOnScan\":\"CaseString_wrapperOnScan__1y20V\",\"cell\":\"CaseString_cell__j5uB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_2floor\":\"Cell_wrapper_2floor__pNvhm\",\"wrapper\":\"Cell_wrapper__3W2Vs\",\"inner\":\"Cell_inner__3JncX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clicked\":\"SwitchButton_clicked__E8KU9\",\"active\":\"SwitchButton_active__3daUy\",\"stitcher\":\"SwitchButton_stitcher__2SZXr\",\"scaner\":\"SwitchButton_scaner__385Ks\",\"jointer\":\"SwitchButton_jointer__15Ebf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"HeaderLink_buttonWrapper__On1Ar\",\"headerButton\":\"HeaderLink_headerButton__2slyd\",\"activeLink\":\"HeaderLink_activeLink__2fudc\",\"invisible\":\"HeaderLink_invisible__3_J6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3jLxJ\",\"wrapper\":\"App_wrapper__3V8Zx\",\"bg_image\":\"App_bg_image__z3AnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AuthScreen_wrapper__FCst_\",\"window\":\"AuthScreen_window__37Nyq\",\"input\":\"AuthScreen_input__1ySJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddButton_wrapper__54AaM\",\"square\":\"AddButton_square__DqGpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clicked\":\"SwitchButton_clicked__2h4t6\",\"active\":\"SwitchButton_active__3BIvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_2floor\":\"Cell_wrapper_2floor__1UXBN\",\"wrapper\":\"Cell_wrapper__1XqXU\",\"displayNone\":\"Cell_displayNone__1viPt\",\"inner\":\"Cell_inner__3bMaL\"};","module.exports = __webpack_public_path__ + \"static/media/logo.99e7c92e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pulseNumber\":\"PulseNumber_pulseNumber__1hDtQ\",\"pulsing\":\"PulseNumber_pulsing___IM9V\"};","const serverURL = '';                      //'http://localhost:3001/'          //switch to empty string to build\r\nconst moment = require(\"moment\");\r\nexport const request_operator_cases = async function (userhash) {\r\n\r\n    let response = await fetch(`${serverURL}getCases`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\n\r\nexport const post_case_changes = async function (userhash, changedCases) {\r\n    let casesWithNoCirillic = changedCases.map((el) => {\r\n        delete el.street;\r\n        delete el.adress;\r\n        return el;\r\n    })\r\n    let response = await fetch(`${serverURL}postChangedCases`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-Type': 'charset=utf-8',\r\n            \"userhash\": userhash,\r\n            \"changedCases\": JSON.stringify(casesWithNoCirillic),\r\n        },\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status + 'не удалось отправить данные на сервер')\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const change_admin_operation = async function (userhash, newOperation) {\r\n    let response = await fetch(`${serverURL}changeAdminOperation`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-Type': 'charset=utf-8',\r\n            \"userhash\": userhash,\r\n            \"newOperation\": newOperation,\r\n        },\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status + 'не удалось отправить данные на сервер')\r\n        return undefined\r\n    }\r\n}\r\n\r\n\r\nexport const indexFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === el.index) {\r\n        return el\r\n    }\r\n}\r\nexport const adressFilter = function (value, el) {\r\n    if (el) {\r\n        value = value.toLowerCase();\r\n        let fullAdress = (el.street + ' ' + el.adress).toLowerCase()\r\n        if (value === '') {\r\n            return el\r\n        } else if (fullAdress.indexOf(value) !== -1) {\r\n            return el\r\n        }\r\n    }\r\n}\r\nexport const actFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && Number(value) === Number(el.act)) {\r\n        return el\r\n    }\r\n}\r\nexport const idFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && Number(value) === Number(el.id)) {\r\n        return el\r\n    }\r\n}\r\nexport const stitcherFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === el.stitcher) {\r\n        return el\r\n    } else if (el && value === '0' && el.stitcher && el.scaner === '' && el.jointer === '') {\r\n        return el\r\n    } else if (el && value === '-1' && el.stitcher === '') {\r\n        return el\r\n    }\r\n}\r\nexport const scanerFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === el.scaner) {\r\n        return el\r\n    } else if (el && value === '0' && el.scaner && el.jointer === '') {\r\n        return el\r\n    } else if (el && value === '-1' && el.scaner === '') {\r\n        return el\r\n    }\r\n}\r\nexport const jointerFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === el.jointer) {\r\n        return el\r\n    } else if (el && value === '0' && el.jointer !== ''&&el.isDone===false) {\r\n        return el\r\n    } else if (el && value === '-1' && el.jointer === '') {\r\n        return el\r\n    }\r\n}\r\nexport const isDoneFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === '0' && el.isDone) {\r\n        return el\r\n    } else if (el && value === '-1' && el.isDone === false) {\r\n        return el\r\n    }\r\n}\r\n\r\nexport const applyFilters = function (filters, filtredElement) {\r\n    filtredElement = indexFilter(filters.index, filtredElement);\r\n    filtredElement = adressFilter(filters.adress, filtredElement);\r\n    filtredElement = idFilter(filters.id, filtredElement);\r\n    filtredElement = actFilter(filters.act, filtredElement);\r\n    filtredElement = stitcherFilter(filters.stitcher, filtredElement);\r\n    filtredElement = scanerFilter(filters.scaner, filtredElement);\r\n    filtredElement = jointerFilter(filters.jointer, filtredElement);\r\n    filtredElement = isDoneFilter(filters.isDone, filtredElement);\r\n    return filtredElement\r\n}\r\nexport const setDateToChoosen = function (choosen_cases, operation, date) {\r\n    choosen_cases.forEach((el) => {\r\n        if (operation === \"stitcher\") {\r\n            el.stitchDate = date;\r\n        } else if (operation === \"scaner\") {\r\n            el.scanDate = date;\r\n        } else if (operation === \"jointer\") {\r\n            el.jointDate = date;\r\n        }\r\n    })\r\n}\r\nexport const request_casesForSearch = async function (userhash) {\r\n\r\n    let response = await fetch(`${serverURL}casesForSearch`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\nexport const post_done_cases = async function (userhash, caseList) {\r\n    let casesWithNoCirillic = caseList.map((el) => {\r\n        delete el.street;\r\n        delete el.adress;\r\n        return el;\r\n    })\r\n    let response = await fetch(`${serverURL}handOverCases`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n            \"changedCases\": JSON.stringify(casesWithNoCirillic),\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        return await response.json()\r\n    } else {\r\n        alert(response.status + 'не удалось отправить данные на сервер')\r\n        return undefined\r\n    }\r\n}\r\nexport const reset_userstats = async function (userhash) {\r\n    let response = await fetch(`${serverURL}resetUserStats`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        return response.json()\r\n    } else {\r\n        alert(response.status + 'не удалось отправить данные на сервер')\r\n    }\r\n}\r\n\r\nexport const request_projectStats = async function (userhash) {\r\n\r\n    let response = await fetch(`${serverURL}projectStats`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\nexport const request_userStats = async function (userhash) {\r\n\r\n    let response = await fetch(`${serverURL}getUsersStats`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\nexport const getMomentFromDateString = function (dateString) {\r\n    let splitDate = dateString.split(' ')\r\n    let stringDay = splitDate[1];\r\n    let day = parseInt(stringDay.replace(/[^\\d]/g, ''))\r\n    let month = splitDate[0]\r\n    let year = splitDate[2]\r\n    let finishDate = moment().date(day)\r\n    finishDate.month(month)\r\n    finishDate.year(Number(20 + '' + year));\r\n    finishDate.startOf(\"day\");\r\n    return finishDate\r\n}\r\nexport const post_new_user = function (userhash, newUser) {\r\n    if (newUser.id !== '' && newUser.userhash !== '' && newUser.name !== '') {\r\n        let xhr = new XMLHttpRequest(); // 2. Настраиваем его: GET-запрос по URL /article/.../load\r\n\r\n        xhr.open('POST', `${serverURL}createNewUser`, true);\r\n        xhr.setRequestHeader(\"userhash\", userhash);\r\n        xhr.setRequestHeader('Content-type', 'application/json');\r\n        xhr.send(JSON.stringify(newUser))\r\n        xhr.onload = function() {\r\n            alert(`ОТВЕТ:  ${xhr.response}`);\r\n        };\r\n    } else {\r\n        alert(\"заполните все необходимые поля\")\r\n    }\r\n}\r\nexport const deleteUser=  function(userhash,userToDelete){\r\n    if (userToDelete!== '' ) {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('GET', `${serverURL}deleteUser`, true);\r\n        xhr.setRequestHeader(\"userhash\", userhash);\r\n        xhr.setRequestHeader(\"userToDelete\",userToDelete);\r\n        xhr.send();\r\n        xhr.onload = function() {\r\n            alert(`ОТВЕТ:  ${xhr.response}`);\r\n        };\r\n    } else {\r\n        alert(\"заполните все необходимые поля\")\r\n    }\r\n}\r\nexport const getCaseFromServer=async function(userhash,caseToChange){\r\n\r\n    let response = await fetch(`${serverURL}getCaseToHardChange`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n            \"caseToChange\":caseToChange,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\n\r\nexport const postHardChange = function (userhash, hardChangeCase) {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('POST', `${serverURL}postHardChangeCase`, true);\r\n    xhr.setRequestHeader(\"userhash\", userhash);\r\n    xhr.setRequestHeader('Content-type', 'application/json');\r\n    xhr.send(JSON.stringify(hardChangeCase))\r\n    xhr.onload = function () {\r\n        alert(`ОТВЕТ:  ${xhr.response}`);\r\n    };\r\n}\r\nexport const getOperationStats=async function(userhash,statsOperation){\r\n    let response = await fetch(`${serverURL}getUsersStats2`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n            \"statsOperation\":statsOperation,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\n\r\nexport const getCurrentMonth = function (dateStats,neededMonth){\r\n    let m_neededMonth = moment().month(Number(neededMonth)-1);\r\n\r\n    let currentMonthDates = {};\r\n    for (let day in dateStats) {\r\n        let date = getMomentFromDateString(day)\r\n        if(m_neededMonth.isSame(date, 'month')){\r\n            currentMonthDates[day]=dateStats[day]\r\n        }\r\n    }\r\n    return currentMonthDates\r\n}\r\n","const SET_CURRENT_NAV = 'SET_CURRENT_NAV';\r\nconst SET_USERHASH = 'SET_USERHASH';\r\nconst USERHASH_REQUEST = \"USERHASH_REQUEST\";\r\nconst USERHASH_RESPONSE = 'USERHASH_RESPONSE';\r\nconst CHOOSE_CASE = 'CHOOSE_CASE';\r\nconst POST_CHANGES = 'POST_CHANGES';\r\nconst UNCHOOSE_CASE = 'UNCHOOSE_CASE';\r\nconst SET_SCAN_NUMBER = 'SET_SCAN_NUMBER';\r\nconst SET_SCAN_PAGES = 'SET_SCAN_PAGES';\r\nconst SET_FILTER_INDEX = 'SET_FILTER_INDEX';\r\nconst SET_FILTER_ADRESS = 'SET_FILTER_ADRESS';\r\nconst SET_FILTER_ACT = 'SET_FILTER_ACT';\r\nconst SET_FILTER_ID = 'SET_FILTER_ID';\r\nconst CHANGE_ADMIN_OPERATION = 'CHANGE_ADMIN_OPERATION';\r\nconst SET_DATE_DAY = 'SET_DATE_DAY';\r\nconst GET_CASESFORSEARCH = 'GET_CASESFORSEARCH';\r\nconst PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST = 'PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST';\r\nconst POST_ISDONE_CASES = 'POST_ISDONE_CASES';\r\nconst SET_FILTER_STITCHER = 'SET_FILTER_STITCHER';\r\nconst SET_FILTER_SCANER = 'SET_FILTER_SCANER';\r\nconst SET_FILTER_JOINTER = 'SET_FILTER_JOINTER';\r\nconst RESET_USERSTATS = 'RESET_USERSTATS';\r\nconst SET_FILTER_ISDONE='SET_FILTER_ISDONE';\r\nconst GET_PROJECT_STATS='GET_PROJECT_STATS';\r\nconst GET_USERSTATS = 'GET_USERSTATS';\r\nconst SWITCH_VIEW_MODE='SWITCH_VIEW_MODE';\r\nconst SET_NEWUSER_NAME='SET_NEWUSER_NAME';\r\nconst SET_NEWUSER_USERHASH='SET_NEWUSER_USERHASH';\r\nconst SET_NEWUSER_ID='SET_NEWUSER_ID';\r\nconst SET_NEWUSER_OPERATION='SET_NEWUSER_OPERATION';\r\nconst SET_NEWUSER_ISADMIN='SET_NEWUSER_ISADMIN';\r\nconst POST_NEWUSER='POST_NEWUSER';\r\nconst SET_USER_TODELETE='SET_USER_TODELETE';\r\nconst POST_USER_DELETE='POST_USER_DELETE';\r\nconst GET_CASEFROMSERVER='GET_CASEFROMSERVER';\r\nconst SET_CASETOGET='SET_CASETOGET';\r\nconst SET_HARDCHANGE_JOINTER='SET_HARDCHANGE_JOINTER';\r\nconst SET_HARDCHANGE_STITCHER='SET_HARDCHANGE_STITCHER';\r\nconst SET_HARDCHANGE_SCANER='SET_HARDCHANGE_SCANER';\r\nconst POST_HARDCHANGE='POST_HARDCHANGE';\r\nconst GET_USERSTATS2='GET_USERSTATS2';\r\nconst SWITCH_STATSOPERATION='SWITCH_STATSOPERATION';\r\nconst PROJECT_STATS_SET_PAGES_VISIBLE='PROJECT_STATS_SET_PAGES_VISIBLE'\r\n\r\nexport const setCurrentNav_action = (button_nav) => ({\r\n    type: SET_CURRENT_NAV,\r\n    nav: button_nav,\r\n})\r\nexport const set_userhash_action = (userhash) => ({\r\n    type: SET_USERHASH,\r\n    userhash: userhash,\r\n})\r\nexport const userHash_request_action = () => ({\r\n    type: USERHASH_REQUEST,\r\n})\r\nexport const userHash_response_action = () => ({\r\n    type: USERHASH_RESPONSE,\r\n})\r\nexport const choose_case_action = (index) => ({\r\n    type: CHOOSE_CASE,\r\n    index: index,\r\n})\r\nexport const unchoose_case_action = (index) => ({\r\n    type: UNCHOOSE_CASE,\r\n    index: index,\r\n})\r\nexport const post_changes_action = () => ({\r\n    type: POST_CHANGES,\r\n})\r\nexport const set_scan_number_action = (index, value) => ({\r\n    type: SET_SCAN_NUMBER,\r\n    value: value,\r\n    index: index,\r\n})\r\nexport const set_scan_pages_action = (index, value) => ({\r\n    type: SET_SCAN_PAGES,\r\n    value: value,\r\n    index: index,\r\n})\r\nexport const set_filter_index_action = (value) => ({\r\n    type: SET_FILTER_INDEX,\r\n    value: value,\r\n})\r\nexport const set_filter_adress_action = (value) => ({\r\n    type: SET_FILTER_ADRESS,\r\n    value: value,\r\n})\r\nexport const set_filter_act_action = (value) => ({\r\n    type: SET_FILTER_ACT,\r\n    value: value,\r\n})\r\nexport const set_filter_id_action = (value) => ({\r\n    type: SET_FILTER_ID,\r\n    value: value,\r\n})\r\nexport const set_filter_stitcher_action=(value)=>({\r\n    type:SET_FILTER_STITCHER,\r\n    value:value,\r\n})\r\nexport const set_filter_scaner_action=(value)=>({\r\n    type:SET_FILTER_SCANER,\r\n    value:value,\r\n})\r\nexport const set_filter_jointer_action=(value)=>({\r\n    type:SET_FILTER_JOINTER,\r\n    value:value,\r\n})\r\nexport const set_filter_isDone_action=(value)=>({\r\n    type: SET_FILTER_ISDONE,\r\n    value:value,\r\n})\r\nexport const change_admin_operation_action=(value)=>({\r\n    type: CHANGE_ADMIN_OPERATION,\r\n    value:value,\r\n})\r\nexport const set_date_day_action=(value)=>({\r\n    type: SET_DATE_DAY,\r\n    value:value,\r\n})\r\nexport const get_casesForSearch_action=()=>({\r\n    type: GET_CASESFORSEARCH,\r\n});\r\nexport const push_filtredByIndex_to_handOverCasesList_action=()=>({\r\n    type: PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST,\r\n})\r\nexport const post_done_cases_action=()=>({\r\n    type:POST_ISDONE_CASES,\r\n})\r\nexport const reset_userStats_action=()=>({\r\n    type: RESET_USERSTATS,\r\n})\r\nexport const get_projectStats_action=()=>({\r\n   type: GET_PROJECT_STATS,\r\n});\r\nexport const get_userStats_action=()=>({\r\n    type: GET_USERSTATS,\r\n})\r\nexport const switchViewMode_action=(value)=>({\r\n    type: SWITCH_VIEW_MODE,\r\n    value: value,\r\n})\r\nexport const set_newUser_name_action=(value)=>({\r\n    type: SET_NEWUSER_NAME,\r\n    value: value,\r\n\r\n})\r\nexport const set_newUser_userhash_action=(value)=>({\r\n    type: SET_NEWUSER_USERHASH,\r\n    value:value,\r\n})\r\nexport const set_newUser_id_action=(value)=>({\r\n    type: SET_NEWUSER_ID,\r\n    value:value,\r\n})\r\nexport const set_newUser_operation_action=(value)=>({\r\n    type: SET_NEWUSER_OPERATION,\r\n    value: value,\r\n})\r\nexport const set_newUser_isAdmin_action=(value)=>({\r\n    type: SET_NEWUSER_ISADMIN,\r\n    value:value,\r\n})\r\nexport const post_newUser_action=()=>({\r\n    type: POST_NEWUSER,\r\n})\r\nexport const set_userToDelete_action=(value)=>({\r\n    type: SET_USER_TODELETE,\r\n    value: value\r\n})\r\nexport const post_deleteUser_action=()=>({\r\n    type: POST_USER_DELETE,\r\n})\r\nexport const get_caseFromServer_action=()=>({\r\n    type: GET_CASEFROMSERVER,\r\n})\r\nexport const set_caseToGet_action=(value)=>({\r\n    type: SET_CASETOGET,\r\n    value:value,\r\n})\r\nexport const set_hardChange_scaner_action=(value)=>({\r\n    type: SET_HARDCHANGE_SCANER,\r\n    value:value,\r\n})\r\nexport const set_hardChange_stitcher_action=(value)=>({\r\n    type: SET_HARDCHANGE_STITCHER,\r\n    value:value,\r\n})\r\nexport const set_hardChange_jointer_action=(value)=>({\r\n    type: SET_HARDCHANGE_JOINTER,\r\n    value:value,\r\n})\r\nexport const post_hardChange_action=()=>({\r\n    type: POST_HARDCHANGE,\r\n})\r\nexport const get_userStats2_action=(value)=>({\r\n    type: GET_USERSTATS2,\r\n    value: value,\r\n})\r\nexport const switchStatsOperation_action=(value)=>({\r\n    type: SWITCH_STATSOPERATION,\r\n    value: value\r\n})\r\nexport const setPagesVisible_action=()=>({\r\n    type: PROJECT_STATS_SET_PAGES_VISIBLE\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    change_admin_operation,\r\n    dayJoiner, deleteUser, getCaseFromServer, getOperationStats,\r\n    post_case_changes, post_done_cases, post_new_user, postHardChange, request_casesForSearch,\r\n    request_operator_cases, request_projectStats, request_userStats, reset_userstats,\r\n    setDateToChoosen\r\n} from \"../Functions\";\r\nimport {userHash_response_action} from \"../Actions\";\r\nimport store from \"../redux-store\";\r\nimport moment from 'moment';\r\n\r\nconst SET_CURRENT_NAV = 'SET_CURRENT_NAV';\r\nconst SET_USERHASH = 'SET_USERHASH';\r\nconst USERHASH_REQUEST = 'USERHASH_REQUEST';\r\nconst USERHASH_RESPONSE = 'USERHASH_RESPONSE';\r\nconst CHOOSE_CASE = 'CHOOSE_CASE';\r\nconst POST_CHANGES = 'POST_CHANGES';\r\nconst UNCHOOSE_CASE = 'UNCHOOSE_CASE';\r\nconst SET_SCAN_NUMBER = 'SET_SCAN_NUMBER';\r\nconst SET_SCAN_PAGES = 'SET_SCAN_PAGES';\r\nconst SET_FILTER_INDEX = 'SET_FILTER_INDEX';\r\nconst SET_FILTER_ADRESS = 'SET_FILTER_ADRESS';\r\nconst SET_FILTER_ACT = 'SET_FILTER_ACT';\r\nconst SET_FILTER_ID = 'SET_FILTER_ID';\r\nconst CHANGE_ADMIN_OPERATION = 'CHANGE_ADMIN_OPERATION';\r\nconst SET_DATE_DAY = 'SET_DATE_DAY';\r\nconst GET_CASESFORSEARCH = 'GET_CASESFORSEARCH';\r\nconst PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST = 'PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST';\r\nconst POST_ISDONE_CASES = 'POST_ISDONE_CASES';\r\nconst SET_FILTER_STITCHER = 'SET_FILTER_STITCHER';\r\nconst RESET_USERSTATS = 'RESET_USERSTATS';\r\nconst SET_FILTER_SCANER = 'SET_FILTER_SCANER';\r\nconst SET_FILTER_JOINTER = 'SET_FILTER_JOINTER';\r\nconst SET_FILTER_ISDONE = 'SET_FILTER_ISDONE';\r\nconst GET_PROJECT_STATS = 'GET_PROJECT_STATS';\r\nconst GET_USERSTATS = 'GET_USERSTATS';\r\nconst SWITCH_VIEW_MODE = 'SWITCH_VIEW_MODE';\r\nconst SET_NEWUSER_NAME = 'SET_NEWUSER_NAME';\r\nconst SET_NEWUSER_USERHASH = 'SET_NEWUSER_USERHASH';\r\nconst SET_NEWUSER_ID = 'SET_NEWUSER_ID';\r\nconst SET_NEWUSER_OPERATION = 'SET_NEWUSER_OPERATION';\r\nconst SET_NEWUSER_ISADMIN = 'SET_NEWUSER_ISADMIN';\r\nconst POST_NEWUSER = 'POST_NEWUSER';\r\nconst SET_USER_TODELETE = 'SET_USER_TODELETE';\r\nconst POST_USER_DELETE = 'POST_USER_DELETE';\r\nconst SET_CASETOGET = 'SET_CASETOGET';\r\nconst GET_CASEFROMSERVER = 'GET_CASEFROMSERVER';\r\nconst SET_HARDCHANGE_JOINTER = 'SET_HARDCHANGE_JOINTER';\r\nconst SET_HARDCHANGE_STITCHER = 'SET_HARDCHANGE_STITCHER';\r\nconst SET_HARDCHANGE_SCANER = 'SET_HARDCHANGE_SCANER';\r\nconst POST_HARDCHANGE = 'POST_HARDCHANGE';\r\nconst SWITCH_STATSOPERATION=\"SWITCH_STATSOPERATION\";\r\nconst PROJECT_STATS_SET_PAGES_VISIBLE=\"PROJECT_STATS_SET_PAGES_VISIBLE\";\r\n\r\nconst initialState = {\r\n    operator_cases: {\r\n        isFetching: false,\r\n        data: [],\r\n    },\r\n    casesForSearch: {\r\n        isFetching: false,\r\n        data: [],\r\n    },\r\n    casesForHandOver: [],\r\n    date: '',\r\n    choosen_cases: [],\r\n    filters: {\r\n        index: '',\r\n        adress: '',\r\n        act: '',\r\n        id: '',\r\n        stitcher: '',\r\n        scaner: '',\r\n        jointer: '',\r\n        isDone: '',\r\n    },\r\n    projectStats: {},\r\n    viewMode: 'total',\r\n    statsOperation:'stitcher',\r\n\r\n    currentNav: 'auth',\r\n    userhash: '',\r\n    userInfo: {\r\n        isAdmin: false,\r\n    },\r\n    newUser: {\r\n        id: '',\r\n        userhash: '',\r\n        name: '',\r\n        operation: 'jointer',\r\n        isAdmin: false,\r\n    },\r\n    userToDelete: '',\r\n    dateUsersStats:{},\r\n    hardChangeToCase: {\r\n        id: '',\r\n        index: '',\r\n        act: '',\r\n        street: '',\r\n        adress: '',\r\n        incomeDate: '',\r\n        expectedPages: '',\r\n\r\n        stitchDate: '',\r\n        stitcher: '',\r\n\r\n        scanDateStart: '',\r\n        scanDateFinish: '',\r\n        scaner: '',\r\n        pages: '',\r\n        scanNumber: '',\r\n\r\n        jointDate: '',\r\n        jointer: '',\r\n\r\n        comment: '',\r\n        isDone: '',\r\n        isDoneDate: ''\r\n    },\r\n    projectStats_pagesVisible:false,\r\n}\r\n\r\n\r\nconst main_reducer = function (state, action) {\r\n    if (state) {\r\n        switch (action.type) {\r\n\r\n            case SET_CURRENT_NAV:\r\n                state.currentNav = action.nav;  //change nav\r\n                break;\r\n\r\n            case SET_USERHASH:\r\n                state.userhash = action.userhash                 //set user-hash from first-screen input\r\n                break;\r\n\r\n            case USERHASH_REQUEST:\r\n                state.currentNav = \"work\";                                                  // request start data from server\r\n                state.operator_cases.isFetching = true;\r\n                request_operator_cases(state.userhash).then((data) => {\r\n                    state.userInfo = data.userInfo\r\n                    state.operator_cases.data = data.casesForUser.map((el) => {\r\n                        el.choosen = false\r\n                        return el\r\n                    });\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n                break;\r\n\r\n            case USERHASH_RESPONSE:\r\n                state.operator_cases.isFetching = false\r\n                state.casesForSearch.isFetching = false\r\n                break;\r\n\r\n            case CHOOSE_CASE:                                                               // отобрать дело\r\n                state.operator_cases.data.map((el) => {\r\n                    if (el.index === action.index) {\r\n                        let choosenIsExist = state.choosen_cases.find((choosen_el) => {\r\n                            return choosen_el.index === el.index\r\n                        })\r\n                        if (!choosenIsExist) {\r\n                            state.choosen_cases.push(el);\r\n                            el.choosen = true\r\n                            state.filters.index = '';\r\n                        } else {\r\n                            alert(\"Нельзя выбрать одно дело дважды\")\r\n                        }\r\n\r\n                    }\r\n                })\r\n                console.log(state.choosen_cases)\r\n                break;\r\n\r\n            case UNCHOOSE_CASE:                                                             // отменить выбранное дело.\r\n                state.operator_cases.data.map((el) => {\r\n                    if (el.index === action.index) {\r\n                        el.choosen = false\r\n                    }\r\n                })\r\n                state.choosen_cases = state.choosen_cases.filter((el) => el.index !== action.index);\r\n                console.log(state.choosen_cases)\r\n                break;\r\n\r\n            case SET_FILTER_INDEX:                                                                  //фильтры\r\n                state.filters.index = action.value\r\n                break;\r\n\r\n            case SET_FILTER_ADRESS:\r\n                state.filters.adress = action.value\r\n                break;\r\n            case SET_FILTER_ACT:\r\n                state.filters.act = action.value\r\n                break;\r\n            case SET_FILTER_ID:\r\n                state.filters.id = action.value\r\n                break;\r\n            case SET_FILTER_STITCHER:\r\n                state.filters.stitcher = action.value\r\n                break;\r\n            case SET_FILTER_SCANER:\r\n                state.filters.scaner = action.value\r\n                break;\r\n            case SET_FILTER_JOINTER:\r\n                state.filters.jointer = action.value\r\n                break;\r\n            case SET_FILTER_ISDONE:\r\n                state.filters.isDone = action.value\r\n                break;\r\n\r\n            case SET_SCAN_NUMBER:                                                               // вписать сканировочный индекс в дело\r\n                state.operator_cases.data.map((el) => {\r\n                    if (el.index === action.index) {\r\n                        el.scanNumber = action.value\r\n                    }\r\n                })\r\n                break;\r\n\r\n            case SET_SCAN_PAGES:                                                           //вписать количество страниц в дело\r\n                state.operator_cases.data.map((el) => {\r\n                    if (el.index === action.index) {\r\n                        el.pages = action.value\r\n                    }\r\n                })\r\n                break;\r\n\r\n            case SET_DATE_DAY:\r\n                if (action.value.length < 6) {\r\n                    if (action.value !== '') {\r\n                        let split = action.value.split('.')\r\n                        let day = split[0];\r\n                        let date = moment().date(day)\r\n                        if (split[1]) {\r\n                            console.log(split[1])\r\n                            date.month(Number(split[1]) - 1)\r\n                        }\r\n                        date = date.format(\"MMM Do YY\");\r\n                        console.log(date)\r\n                        state.date = date;\r\n                    } else {\r\n                        state.date = ''\r\n                    }\r\n                }\r\n                break;\r\n\r\n\r\n            case POST_CHANGES:                                                                //передать список отобраных дел на сервер\r\n                setDateToChoosen(state.choosen_cases,\r\n                    state.userInfo[\"operation\"],\r\n                    state.date);\r\n\r\n                state.operator_cases.isFetching = true;\r\n                state.operator_cases.data = [];\r\n                post_case_changes(state.userhash, state.choosen_cases).then((data) => {\r\n                    if (data.casesForUser) {\r\n                        state.operator_cases.data = data.casesForUser.map((el) => {\r\n                            el.choosen = false\r\n                            return el\r\n                        });\r\n                        state.choosen_cases = [];\r\n                    }\r\n                    state.userInfo = data.userInfo;\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n                break;\r\n\r\n\r\n            case CHANGE_ADMIN_OPERATION:\r\n                change_admin_operation(state.userhash, action.value).then((data) => {\r\n                    if (data.casesForUser) {\r\n                        state.operator_cases.data = data.casesForUser.map((el) => {\r\n                            el.choosen = false\r\n                            return el\r\n                        });\r\n                        state.choosen_cases = [];\r\n                    }\r\n                    state.userInfo = data.userInfo;\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n                break;\r\n\r\n            case GET_CASESFORSEARCH:                                                // request start data from server\r\n                state.casesForSearch.isFetching = true;\r\n                request_casesForSearch(state.userhash).then((data) => {\r\n                    state.casesForSearch.data = data.casesForSearch\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n\r\n                break;\r\n            case PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST:\r\n                state.casesForSearch.data.map((el) => {\r\n                    if (el.index === state.filters.index) {\r\n                        let choosenIsExist = state.casesForHandOver.find((existCase) => {\r\n                            return existCase.index === state.filters.index\r\n                        })\r\n                        if (!choosenIsExist) {\r\n                            state.casesForHandOver.push(el)\r\n                            state.filters.index = '';\r\n                        } else {\r\n                            alert(\"нельзя добавить в список дважды\")\r\n                        }\r\n\r\n                    }\r\n                })\r\n                console.log(state.casesForHandOver)\r\n\r\n\r\n                break;\r\n\r\n            case POST_ISDONE_CASES:\r\n                state.casesForSearch.isFetching = true;\r\n                post_done_cases(state.userhash, state.casesForHandOver).then((data) => {\r\n                    if (data.wrongCaseList) {\r\n                        state.casesForHandOver = [];\r\n                        data.wrongCaseList.forEach((el) => {\r\n                            state.casesForHandOver.push(el);\r\n                        })\r\n                    }\r\n                    state.userInfo = data.userInfo;\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n                console.log(\"post isDone_cases\");\r\n                break;\r\n\r\n            case RESET_USERSTATS:\r\n                reset_userstats(state.userhash).then((data) => {\r\n                    alert(data[0])\r\n                })\r\n                break;\r\n\r\n            case GET_PROJECT_STATS:\r\n                request_projectStats(state.userhash).then((data) => {\r\n                    state.projectStats = data;\r\n\r\n\r\n                    store.dispatch(userHash_response_action())\r\n                })\r\n                break;\r\n            case GET_USERSTATS:\r\n                request_userStats(state.userhash).then((data) => {\r\n                    state.usersStats = data;\r\n                    store.dispatch(userHash_response_action())\r\n                })\r\n                break;\r\n\r\n            case SWITCH_VIEW_MODE:\r\n                state.viewMode = action.value\r\n                break;\r\n\r\n            case SET_NEWUSER_NAME:\r\n                state.newUser.name = action.value\r\n                break;\r\n\r\n            case SET_NEWUSER_USERHASH:\r\n                state.newUser.userhash = action.value\r\n                break;\r\n\r\n            case SET_NEWUSER_ID:\r\n                state.newUser.id = action.value\r\n                break;\r\n\r\n            case SET_NEWUSER_OPERATION:\r\n                state.newUser.operation = action.value;\r\n                break;\r\n\r\n            case SET_NEWUSER_ISADMIN:\r\n                if (action.value === 'true') {\r\n                    state.newUser.isAdmin = true\r\n                } else if (action.value === 'false') {\r\n                    state.newUser.isAdmin = false\r\n                } else {\r\n                    alert(\"troubles with set_newUser_isAdmin in reducer\")\r\n                }\r\n                break;\r\n\r\n            case POST_NEWUSER:\r\n                post_new_user(state.userhash, state.newUser)\r\n                state.newUser.name = '';\r\n                state.newUser.id = '';\r\n                state.newUser.userhash = '';\r\n                break;\r\n\r\n            case SET_USER_TODELETE:\r\n                state.userToDelete = action.value;\r\n                break;\r\n\r\n            case POST_USER_DELETE:\r\n                deleteUser(state.userhash, state.userToDelete);\r\n                state.userToDelete = '';\r\n                break;\r\n\r\n            case SET_CASETOGET:\r\n                state.hardChangeToCase.id = action.value\r\n                console.log(state.hardChangeToCase);\r\n                break;\r\n\r\n            case GET_CASEFROMSERVER:\r\n                getCaseFromServer(state.userhash, state.hardChangeToCase.id).then((requestedCase) => {\r\n                        state.hardChangeToCase = requestedCase\r\n                        store.dispatch(userHash_response_action())\r\n\r\n                    }\r\n                )\r\n                break;\r\n\r\n            case  SET_HARDCHANGE_JOINTER:\r\n                state.hardChangeToCase.jointer = action.value\r\n                console.log(state.hardChangeToCase.jointer)\r\n                break;\r\n\r\n            case SET_HARDCHANGE_STITCHER:\r\n                state.hardChangeToCase.stitcher = action.value\r\n                console.log(state.hardChangeToCase.stitcher)\r\n                break;\r\n\r\n            case SET_HARDCHANGE_SCANER:\r\n                state.hardChangeToCase.scaner = action.value\r\n                console.log(state.hardChangeToCase.scaner)\r\n                break;\r\n\r\n            case POST_HARDCHANGE:\r\n                postHardChange(state.userhash, state.hardChangeToCase)\r\n                break;\r\n\r\n            case SWITCH_STATSOPERATION:\r\n                state.statsOperation=action.value;\r\n                getOperationStats(state.userhash,state.statsOperation).then((data)=>{\r\n                   state.dateUsersStats=data;\r\n                    store.dispatch(userHash_response_action())\r\n                })\r\n                break;\r\n            case PROJECT_STATS_SET_PAGES_VISIBLE:\r\n                state.projectStats_pagesVisible=!state.projectStats_pagesVisible\r\n                console.log(state.projectStats_pagesVisible)\r\n                break;\r\n\r\n        }\r\n        return state\r\n    } else\r\n        return initialState;\r\n}\r\n\r\nexport default main_reducer;","import {combineReducers, createStore} from \"redux\";\r\nimport main_reducer from \"./reducers/main_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    main: main_reducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './HeaderLink.module.css';\r\nimport {\r\n    get_casesForSearch_action,\r\n    get_projectStats_action,\r\n    get_userStats_action,\r\n    setCurrentNav_action\r\n} from \"../../../Global/Actions\";\r\n\r\n\r\n\r\nconst HeaderLink = function (props) {\r\n    let click = function () {\r\n        props.dispatch(setCurrentNav_action(props.nav))\r\n        if(props.nav===\"search\"||props.nav===\"handOver\"){\r\n            props.dispatch(get_casesForSearch_action(props.state.userhash))\r\n        }\r\n        if(props.nav===\"projectStats\"){\r\n            props.dispatch(get_projectStats_action(props.state.userhash))\r\n        }\r\n        if(props.nav===\"userStats\"){\r\n            props.dispatch(get_userStats_action(props.state.userhash))\r\n        }\r\n    }\r\n    const defineClass=function(){\r\n        let curClass='';\r\n        if(props.state.currentNav===props.nav){\r\n            curClass+=' '+s.activeLink\r\n        }else curClass+=' '+s.headerButton\r\n        if(props.onlyAdmin===true&&props.state.userInfo.isAdmin!==true){\r\n            curClass+=' '+s.invisible\r\n        }\r\n        return curClass\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.buttonWrapper}>\r\n            <button className={defineClass()}\r\n                    onClick={click}>\r\n                <b>{props.text}</b>\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default HeaderLink","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport headerIcon from \"../../img/logo.png\"\r\nimport HeaderLink from \"./HeaderLink/HeaderLink\";\r\n\r\nconst Header = function (props) {\r\n    return (\r\n        <div className={s.header_wrapper}>\r\n            <header className={s.header_container}>\r\n                <div className={s.header_leftSide}>\r\n\r\n                    <img className={`${s.icon} ${s.hoverElement}`}\r\n                         src={headerIcon}/>\r\n\r\n                    <div>\r\n                        <h4 className={`${s.headerText}`}>DIGITAL DOCS</h4>\r\n                    </div>\r\n                </div>\r\n                <div className={s.navbar}>\r\n                    <HeaderLink nav={'work'}\r\n                                text={'Обработка'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={false}/>\r\n                    <HeaderLink nav={'userStats'}\r\n                                text={'Статистика'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                    <HeaderLink nav={'projectSettings'}\r\n                                text={'Проэкт'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                    <HeaderLink nav={'search'}\r\n                                text={'Поиск'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={false}/>\r\n                    <HeaderLink nav={'handOver'}\r\n                                text={'Сдать дела'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                    <HeaderLink nav={'projectStats'}\r\n                                text={'Статистика проэкта'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                    <HeaderLink nav={'userStats2'}\r\n                                text={'STATISTIKA 2'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                </div>\r\n            </header>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Header","import React from 'react';\r\nimport s from './AddButton.module.css';\r\nimport {choose_case_action} from \"../../../Global/Actions\";\r\n\r\nconst AddButton = function (props) {\r\n    const onclick=function(event){\r\n        props.dispatch(choose_case_action(props.el.index));\r\n        console.log('click')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.square}\r\n            onClick={onclick}>\r\n                +\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default AddButton","import React from 'react';\r\nimport s from './CaseString.module.css';\r\nimport AddButton from \"../addButton/AddButton\";\r\n\r\nconst CaseString = function (props) {\r\n    let el= props.datacase;\r\n    let adminButton=function(){\r\n        if(props.user.isAdmin){\r\n        return(<div className={s.cell}>\r\n            <AddButton dispatch={props.dispatch}\r\n                       el={props.datacase}/>\r\n        </div>\r\n        )}else return(<div className={s.cell}/>)\r\n    }\r\n    let defineClass = function(){\r\n        if(el.scanDateFinish===''&&el.scanDateStart){\r\n            return s.wrapperOnScan\r\n        }else return s.wrapper\r\n    }\r\n\r\n    return (\r\n        <div className={defineClass()}>\r\n            <div className={s.cell}>{el.act}</div>\r\n            <div className={s.cell}>{el.id}</div>\r\n            <div className={s.cell}>{el.street +'  '+ el.adress}</div>\r\n            {adminButton()}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CaseString","import React from 'react';\r\nimport s from './ChoosenString.module.css';\r\nimport {set_scan_number_action, set_scan_pages_action, unchoose_case_action} from \"../../../../Global/Actions\";\r\n\r\nconst ChoosenString = function (props) {\r\n    const deleteChoosenString = function (event) {\r\n        props.dispatch(unchoose_case_action(props.el.index))\r\n    }\r\n    const set_scanNumber = function (event) {\r\n        props.dispatch(set_scan_number_action(props.el.index, event.target.value))\r\n    }\r\n    const set_scanPages = function (event) {\r\n        props.dispatch(set_scan_pages_action(props.el.index, event.target.value))\r\n    }\r\n\r\n\r\n    if (props.user[\"operation\"] === \"stitcher\") {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <div className={s.smallcell}>\r\n                    <div className={s.cancelButton}\r\n                         onClick={deleteChoosenString}>\r\n                        <div>+</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n\r\n                    {props.el.act}\r\n                </div>\r\n                <div className={s.cell}>{props.el.id}</div>\r\n            </div>\r\n        )\r\n    } else if (props.user[\"operation\"] === \"scaner\") {\r\n        if(props.el.scanDateStart===''){\r\n            return (\r\n                <div className={s.wrapper}>\r\n                    <div className={s.smallcell}>\r\n                        <div className={s.cancelButton}\r\n                             onClick={deleteChoosenString}>\r\n                            <div>+</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.cell}>\r\n                        {props.el.act}\r\n                    </div>\r\n                    <div className={s.cell}>{props.el.id}</div>\r\n\r\n                    <div className={s.cell}>\r\n                        -----\r\n                    </div>\r\n                    <div className={s.cell}>\r\n                        {props.el.stitcher}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className={s.wrapper}>\r\n                    <div className={s.smallcell}>\r\n                        <div className={s.cancelButton}\r\n                             onClick={deleteChoosenString}>\r\n                            <div>+</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.cell}>\r\n                        {props.el.act}\r\n                    </div>\r\n                    <div className={s.cell}>{props.el.id}</div>\r\n\r\n                    <div className={s.cell}>\r\n                        <input className={s.input} type={'number'}\r\n                               onChange={set_scanNumber} value={props.el.scanNumber}/>\r\n                    </div>\r\n                    <div className={s.cell}>\r\n                        {props.el.stitcher}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n\r\n    } else if (props.user[\"operation\"] === \"jointer\") {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <div className={s.smallcell}>\r\n                    <div className={s.cancelButton}\r\n                         onClick={deleteChoosenString}>\r\n                        <div>+</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    {props.el.act}\r\n                </div>\r\n                <div className={s.cell}>{props.el.id}</div>\r\n                <div className={s.cell}>\r\n                    {props.el.pages}\r\n                </div>\r\n                <div className={s.cell}>\r\n                    {props.el.scanNumber}\r\n                </div>\r\n                <div className={s.cell}>\r\n                    {props.el.scaner}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default ChoosenString","import React from 'react';\r\nimport s from './PulseNumber.module.css';\r\n\r\nconst PulseNumber = function (props) {\r\n    let value=props.value\r\n    let classDisabler=function(){\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.pulseNumber}>\r\n            {value}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default PulseNumber","import React from 'react';\r\nimport s from './Choosen.module.css';\r\nimport ChoosenString from \"./ChoosenString/ChoosenString\";\r\nimport {post_changes_action, set_date_day_action} from \"../../../Global/Actions\";\r\nimport PulseNumber from \"./PulseNumber/PulseNumber\";\r\n\r\n\r\nconst Choosen = function (props) {\r\n    let content = function () {\r\n        return props.caseList.map((el) => {\r\n            return (\r\n                <div key={el.index}>\r\n                    <ChoosenString el={el}\r\n                                   user={props.user}\r\n                                   dispatch={props.dispatch}/>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    let defineHeader = function () {\r\n        if (props.user[\"operation\"] === \"stitcher\") {\r\n            return (\r\n                <div className={s.header}>\r\n                    <div className={s.smallcell}/>\r\n                    <div className={s.cell}>Акт</div>\r\n                    <div className={s.cell}>Номер справи</div>\r\n                </div>\r\n            )\r\n        } else if (props.user[\"operation\"] === \"scaner\") {\r\n            return (\r\n                <div className={s.header}>\r\n                    <div className={s.smallcell}/>\r\n                    <div className={s.cell}>Акт</div>\r\n                    <div className={s.cell}>Номер справи</div>\r\n                    <div className={s.cell}>Індекс</div>\r\n                    <div className={s.cell}>Розшив</div>\r\n                </div>\r\n            )\r\n        } else if (props.user[\"operation\"] === \"jointer\") {\r\n            return (\r\n                <div className={s.header}>\r\n                    <div className={s.smallcell}/>\r\n                    <div className={s.cell}>Акт</div>\r\n                    <div className={s.cell}>Номер справи</div>\r\n                    <div className={s.cell}>Сторінок</div>\r\n                    <div className={s.cell}>Індекс</div>\r\n                    <div className={s.cell}>Сканувальник</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    let postChanges = function () {\r\n\r\n        let indexNotSet = props.caseList.find((el) => {\r\n            return el.scanNumber === '' && el.scanDateStart !== ''\r\n        })\r\n        if (!indexNotSet) {\r\n            props.dispatch(post_changes_action())\r\n        } else alert(\"Усі індекси мають бути заповнені\")\r\n\r\n    }\r\n    let emptyClick = function () {\r\n        alert(\"no cases to change\")\r\n    }\r\n    let set_date_day = function (event) {\r\n        props.dispatch(set_date_day_action(event.target.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {defineHeader()}\r\n            <div className={s.body}>\r\n                {content()}\r\n            </div>\r\n            <div className={s.footer}>\r\n                <div className={props.isFetching ? s.hideButton : s.postButton}\r\n                     onClick={props.caseList.length > 0 ? postChanges : emptyClick}>Відправити\r\n                </div>\r\n                <div>Справ відібрано :\r\n                    <PulseNumber className={s.pulseNumber} value={props.caseList.length} key={\"choosenCounter-pulseNumber\" + props.caseList.length}/>\r\n                </div>\r\n                <div>Дата : {props.date}\r\n                    <input\r\n                        className={s.input}\r\n                        type={'number'}\r\n                        placeholder={\"день месяца\"}\r\n                        onChange={set_date_day}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Choosen","import React from 'react';\r\nimport s from './WorkScreen.module.css';\r\nimport CaseString from \"./CaseString/CaseString\";\r\nimport Choosen from \"./Choosen/Choosen\";\r\nimport {actFilter, adressFilter, applyFilters, idFilter, indexFilter} from \"../../Global/Functions\";\r\nimport {\r\n    change_admin_operation_action, choose_case_action,\r\n    set_filter_act_action,\r\n    set_filter_adress_action,\r\n    set_filter_id_action,\r\n    set_filter_index_action\r\n} from \"../../Global/Actions\";\r\n\r\n\r\nconst WorkScreen = function (props) {\r\n\r\n    const addCaseToChoosen = function (event) {\r\n        if (event.key === \"Enter\") {\r\n            console.log(event.target.value)\r\n            props.dispatch(choose_case_action(event.target.value));\r\n        }\r\n        if (event.key === \",\") {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    let casesToView = 0;\r\n    let filtredCasesCount=0;\r\n    const setFilterIndex = function (event) {\r\n        props.dispatch(set_filter_index_action(event.target.value))\r\n    }\r\n    const setFilterAdress = function (event) {\r\n        props.dispatch(set_filter_adress_action(event.target.value))\r\n    }\r\n    const setFilterAct = function (event) {\r\n        props.dispatch(set_filter_act_action(event.target.value))\r\n    }\r\n    const setFilterId = function (event) {\r\n        props.dispatch(set_filter_id_action(event.target.value))\r\n    }\r\n    const changeAdminOperation = function (event) {\r\n        let value = event.target.getAttribute('value');\r\n        props.dispatch(change_admin_operation_action(value))\r\n    }\r\n\r\n    let adminWindow = function () {\r\n        if (props.state.userInfo.isAdmin) {\r\n            return (<div>\r\n                    <div className={s.changeOperation} value={\"stitcher\"} onClick={changeAdminOperation}>Стать\r\n                        расшивщиком\r\n                    </div>\r\n                    <div className={s.changeOperation} value={\"scaner\"} onClick={changeAdminOperation}>Стать\r\n                        сканировщиком\r\n                    </div>\r\n                    <div className={s.changeOperation} value={\"jointer\"} onClick={changeAdminOperation}>Стать\r\n                        сшивщиком\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    let content = function () {\r\n        if (props.state.operator_cases.isFetching) {\r\n            return (<div>загрузка....</div>)                           // display load screen\r\n        } else {\r\n            return (props.state.operator_cases.data.map((el, i, arr) => {\r\n\r\n                if (el.choosen === false) {                                // check for not-choosen cases (display only not-choosen)\r\n                    let filtredElement = applyFilters(props.state.filters, el);\r\n                    if (filtredElement) {\r\n                        filtredCasesCount++\r\n                        if (casesToView < 500) {\r\n                            casesToView++;\r\n                            return (\r\n                                <div key={el.index + '' + el.act}>\r\n                                    <CaseString datacase={el}\r\n                                                user={props.state.userInfo}\r\n                                                dispatch={props.dispatch}/>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }))\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <div>\r\n                    <p className={s.bigText}>Оператор : {props.state.userInfo[\"name\"]}\r\n\r\n                    </p>\r\n                    <p className={s.bigText}>\r\n                        {props.state.userInfo[\"operation\"] === \"stitcher\" ? \"Розшивка \" :\r\n                            (props.state.userInfo[\"operation\"] === \"scaner\" ? \"Сканування \" : \"Зшивка \")}\r\n                    </p>\r\n\r\n                    <p className={s.midText}>Особистий номер: {props.state.userInfo[\"id\"]}</p>\r\n                </div>\r\n                <div>\r\n                    <p className={s.midText}>Справ оброблено: {props.state.userInfo[\"cases\"]}</p>\r\n                    <p className={s.midText}>Сторінок оброблено: {props.state.userInfo[\"pages\"]}</p>\r\n                </div>\r\n                <div>{adminWindow()}</div>\r\n            </div>\r\n            <div className={s.body}>\r\n                <div className={s.caseList}>\r\n                    <div className={s.caseList_header}>\r\n                        <div className={s.topSide}>\r\n                            <div className={s.cell}>Акт</div>\r\n                            <div className={s.cell}>Номер справи</div>\r\n                            <div className={s.cell}>Адреса</div>\r\n                            <div className={s.cell}>Відібрати</div>\r\n                        </div>\r\n                        <div className={s.bottomSide}>\r\n                            {/*<div className={s.cell}>*/}\r\n                            {/*    <input className={s.searchInput}*/}\r\n                            {/*           type={'number'}*/}\r\n                            {/*           value={props.state.filters.act}*/}\r\n                            {/*           onChange={setFilterAct}/>*/}\r\n                            {/*</div>*/}\r\n                            {/*<div className={s.cell}>*/}\r\n                            {/*    <input className={s.searchInput}*/}\r\n                            {/*           type={'number'}*/}\r\n                            {/*           value={props.state.filters.id}*/}\r\n                            {/*           onChange={setFilterId}/>*/}\r\n                            {/*</div>*/}\r\n                            {/*<div className={s.cell}>*/}\r\n                            {/*    <input className={s.searchInput}*/}\r\n                            {/*           type={'text'}*/}\r\n                            {/*           value={props.state.filters.adress}*/}\r\n                            {/*           onChange={setFilterAdress}/>*/}\r\n                            {/*</div>*/}\r\n                            <div className={s.cell}>\r\n                                <input  autoFocus\r\n                                        className={s.searchInput}\r\n                                       type={'number'}\r\n                                       onChange={setFilterIndex}\r\n                                       onKeyDown={addCaseToChoosen}\r\n                                       value={props.state.filters.index}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={s.content}>{content()}</div>\r\n                    <div className={s.footer}>\r\n\r\n                        <div>Усього справ на  {props.state.userInfo[\"operation\"] === \"stitcher\" ? \"розшивці : \" :\r\n                            (props.state.userInfo[\"operation\"] === \"scaner\" ? \"скануванні : \" : \"зшивці : \")}\r\n                            {props.state.operator_cases.data.length}\r\n                        </div>\r\n                        <div>Відфільтровано : {filtredCasesCount}</div>\r\n                        <div>Відображено: {casesToView}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.choosen}>\r\n                    <Choosen\r\n                        user={props.state.userInfo}\r\n                        date={props.state.date}\r\n                        isFetching={props.state.operator_cases.isFetching}\r\n                        caseList={props.state.choosen_cases}\r\n                        dispatch={props.dispatch}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default WorkScreen","import React from 'react';\r\nimport s from './AuthScreen.module.css';\r\nimport {\r\n     set_userhash_action,\r\n    userHash_request_action\r\n} from \"../../Global/Actions\";\r\n\r\nconst AuthScreen = function (props) {\r\n\r\n    let change = function (event) {\r\n        props.dispatch(set_userhash_action(event.target.value))\r\n    }\r\n    let handleEnter = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.dispatch(userHash_request_action(props.state.user))\r\n        }\r\n        if (event.key === ',') {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.window}>\r\n                АВТОРИЗАЦІЯ\r\n                <input autoFocus\r\n                    className={s.input}\r\n                    placeholder={'відскануйте код'}\r\n                       onChange={change}\r\n                       onKeyPress={handleEnter}/>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default AuthScreen","import React from 'react';\r\nimport s from './SwitchButton.module.css';\r\nimport {switchViewMode_action} from \"../../../Global/Actions\";\r\n\r\nconst SwitchButton = function (props) {\r\n\r\nconst switchViewMode=function(){\r\n    props.dispatch(switchViewMode_action(props.value))\r\n\r\n}\r\nconst defineClass=function(){\r\n    if(props.viewMode===props.value){return s.clicked}\r\n    else{return s.active}\r\n}\r\n\r\n\r\n    return (\r\n       <div className={defineClass()}\r\n       onClick={switchViewMode}>\r\n           {props.text}\r\n       </div>\r\n    )\r\n\r\n}\r\nexport default SwitchButton","import React from 'react';\r\nimport s from './UserStatsScreen.module.css';\r\nimport SwitchButton from \"./switchButton/SwitchButton\";\r\nimport moment from 'moment'\r\nimport {getMomentFromDateString} from \"../../Global/Functions\";\r\n\r\nconst UserStatsScreen = function (props) {\r\n    let userTotal = {};\r\n    let userDays= {};\r\n\r\n\r\n    let usersStats=[];\r\n    if (props.state.userInfo.isAdmin) {\r\n        if (props.state.viewMode === 'total') {\r\n            usersStats = props.state.usersStats;\r\n            console.log(usersStats)\r\n\r\n\r\n            if(usersStats){\r\n                usersStats.forEach((el)=>{\r\n                    for(let user in el){\r\n                        if(user!=='date'){\r\n                            if(typeof(userTotal[user])===\"number\"&&typeof(userDays[user])===\"number\"){\r\n                                userTotal[user]=el[user].cases>0?userTotal[user]+=el[user].cases:userTotal[user]\r\n                                userDays[user]=el[user].cases>0?userDays[user]+1:userDays[user]\r\n                            }else{\r\n                                userTotal[user]=el[user].cases>0?el[user].cases:0\r\n                                userDays[user]=el[user].cases>0?1:0\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n        } else if (props.state.viewMode === 'this month') {\r\n            props.state.usersStats.forEach((el, i, arr) => {\r\n                let m_date = getMomentFromDateString((el.date))\r\n                if (moment().isSame(m_date, 'month')) {\r\n                    usersStats.push(el)\r\n                }\r\n            })\r\n            if(usersStats){\r\n                usersStats.forEach((el)=>{\r\n                    for(let user in el){\r\n                        if(user!=='date'){\r\n                            if(typeof(userTotal[user])===\"number\"&&typeof(userDays[user])===\"number\"){\r\n                                userTotal[user]=el[user].cases>0?userTotal[user]+=el[user].cases:userTotal[user]\r\n                                userDays[user]=el[user].cases>0?userDays[user]+1:userDays[user]\r\n                            }else{\r\n                                userTotal[user]=el[user].cases>0?el[user].cases:0\r\n                                userDays[user]=el[user].cases>0?1:0\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n    } else {\r\n        if (props.state.usersStats) {\r\n            if(props.state.viewMode === 'total'){\r\n                usersStats = props.state.usersStats.map((dateObj) => {\r\n                    let userKey = props.state.userInfo.id;\r\n                    return ({\r\n                        date: dateObj.date,\r\n                        [userKey]: dateObj[userKey],\r\n                    })\r\n                })\r\n                if(usersStats){\r\n                    usersStats.forEach((el)=>{\r\n                        for(let user in el){\r\n                            if(user!=='date'){\r\n                                if(typeof(userTotal[user])===\"number\"&&typeof(userDays[user])===\"number\"){\r\n                                    userTotal[user]=el[user].cases>0?userTotal[user]+=el[user].cases:userTotal[user]\r\n                                    userDays[user]=el[user].cases>0?userDays[user]+1:userDays[user]\r\n                                }else{\r\n                                    userTotal[user]=el[user].cases>0?el[user].cases:0\r\n                                    userDays[user]=el[user].cases>0?1:0\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }else if(props.state.viewMode === 'this month'){\r\n                let parsedUserStats= props.state.usersStats.map((dateObj) => {\r\n                    let userKey = props.state.userInfo.id;\r\n                    return ({\r\n                        date: dateObj.date,\r\n                        [userKey]: dateObj[userKey],\r\n                    })\r\n                })\r\n                parsedUserStats.forEach((el, i, arr) => {\r\n                    let m_date = getMomentFromDateString((el.date))\r\n                    if (moment().isSame(m_date, 'month')) {\r\n                        usersStats.push(el)\r\n                    }\r\n                })\r\n                if(usersStats){\r\n                    usersStats.forEach((el)=>{\r\n                        for(let user in el){\r\n                            if(user!=='date'){\r\n                                if(typeof(userTotal[user])===\"number\"&&typeof(userDays[user])===\"number\"){\r\n                                    userTotal[user]=el[user].cases>0?userTotal[user]+=el[user].cases:userTotal[user]\r\n                                    userDays[user]=el[user].cases>0?userDays[user]+1:userDays[user]\r\n                                }else{\r\n                                    userTotal[user]=el[user].cases>0?el[user].cases:0\r\n                                    userDays[user]=el[user].cases>0?1:0\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let headerClassFinder = function (operation) {\r\n        if (operation === \"stitcher\") {\r\n            return s.headerStitcher\r\n        }\r\n        if (operation === \"scaner\") {\r\n            return s.headerScaner\r\n        }\r\n        if (operation === \"jointer\") {\r\n            return s.headerJointer\r\n        }\r\n    }\r\n    let stringClassFinder = function (operation) {\r\n        if (operation === \"stitcher\") {\r\n            return s.stitcher\r\n        }\r\n        if (operation === \"scaner\") {\r\n            return s.scaner\r\n        }\r\n        if (operation === \"jointer\") {\r\n            return s.jointer\r\n        }\r\n    }\r\n    let createOperatorsString = function () {\r\n        if (usersStats) {\r\n            let operatorsString = [];\r\n            for (let user in usersStats[0]) {\r\n                if (user !== \"date\") {\r\n                    operatorsString.push((\r\n                        <td key={user}\r\n                            className={s.headerCell + ' ' + headerClassFinder(usersStats[0][user].operation)}>{user}</td>\r\n                    ))\r\n                }\r\n            }\r\n\r\n            return operatorsString\r\n        }\r\n    }\r\n    let createTotalString=function(){\r\n        let totals=[]\r\n        if(usersStats){\r\n            for(let user in userTotal){\r\n                totals.push(<td className={s.cell} key={user+userTotal[user]}>{userTotal[user]}</td>)\r\n            }\r\n        }\r\n        return totals;\r\n    }\r\n    let createAvarageString=function(){\r\n        let avarages=[];\r\n        if(usersStats){\r\n            for(let user in userTotal){\r\n                avarages.push(<td className={s.cell} key={'avarage'+user+userTotal[user]}>{(userTotal[user]/userDays[user]).toFixed(1)}</td>)\r\n            }\r\n        }\r\n        return avarages\r\n    }\r\n\r\n\r\n    let createDateStrings = function () {\r\n        if (usersStats) {\r\n            let dateStrings = [];\r\n            for (let date in usersStats) {\r\n                let usersString = [];\r\n                for (let user in usersStats[date]) {\r\n                    if (user !== \"date\") {\r\n                        usersString.push(\r\n                            <td className={s.cell + ' ' + stringClassFinder(usersStats[date][user].operation)}\r\n                                key={date + user + usersStats[date][user].cases}>\r\n                                {usersStats[date][user].cases}\r\n                            </td>)\r\n                    }\r\n\r\n                }\r\n                dateStrings.push(\r\n                    <tr className={s.usersString}\r\n                        key={date}>\r\n                        <td className={s.cell}>{usersStats[date].date}</td>\r\n                        {usersString}\r\n                    </tr>)\r\n            }\r\n            return dateStrings;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <SwitchButton text={\"Всего\"}\r\n                              value={'total'}\r\n                              dispatch={props.dispatch}\r\n                              viewMode={props.state.viewMode}/>\r\n                <SwitchButton text={\"За этот месяц\"}\r\n                              value={'this month'}\r\n                              dispatch={props.dispatch}\r\n                              viewMode={props.state.viewMode}/>\r\n            </div>\r\n            <div className={s.body}>\r\n                <table>\r\n                    <tbody>\r\n                    <tr className={s.tableHeader}>\r\n                        <td className={s.headerCell}>Дата</td>\r\n                        {createOperatorsString()}\r\n                    </tr>\r\n                    <tr className={s.tableBody}>\r\n                        {createDateStrings()}\r\n                    </tr>\r\n                    <tr className={s.tableFooter}>\r\n                        <td className={s.cell}>Всего:</td>\r\n                        {createTotalString()}\r\n                    </tr>\r\n                    <tr className={s.tableFooter}>\r\n                        <td className={s.cell}>В среднем:</td>\r\n                        {createAvarageString()}\r\n                    </tr>\r\n                    <tr className={s.tableFooter}>\r\n                        <td className={s.cell}>Страниц в среднем::</td>\r\n\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default UserStatsScreen","import React from 'react';\r\nimport s from './ProjectScreen.module.css';\r\nimport {\r\n    get_caseFromServer_action,\r\n    post_deleteUser_action, post_hardChange_action,\r\n    post_newUser_action,\r\n    reset_userStats_action,\r\n    set_caseToGet_action,\r\n    set_hardChange_jointer_action,\r\n    set_hardChange_scaner_action,\r\n    set_hardChange_stitcher_action,\r\n    set_newUser_id_action,\r\n    set_newUser_isAdmin_action,\r\n    set_newUser_name_action,\r\n    set_newUser_operation_action,\r\n    set_newUser_userhash_action,\r\n    set_userToDelete_action\r\n} from \"../../Global/Actions\";\r\n\r\nconst ProjectScreen = function (props) {\r\n    const resetUserStats = function () {\r\n        props.dispatch(reset_userStats_action())\r\n    }\r\n    const setName = function (event) {\r\n        props.dispatch(set_newUser_name_action(event.target.value))\r\n    }\r\n    const setUserhash = function (event) {\r\n        props.dispatch(set_newUser_userhash_action(event.target.value))\r\n    }\r\n    const setId = function (event) {\r\n        props.dispatch(set_newUser_id_action(event.target.value))\r\n    }\r\n    const setOperation = function (event) {\r\n        props.dispatch(set_newUser_operation_action(event.target.value))\r\n    }\r\n    const setIsAdmin = function (event) {\r\n        props.dispatch(set_newUser_isAdmin_action(event.target.value))\r\n    }\r\n    const postNewUser = function () {\r\n        props.dispatch(post_newUser_action())\r\n    }\r\n    const setUserToDelete = function (event) {\r\n        props.dispatch(set_userToDelete_action(event.target.value))\r\n    }\r\n    const deleteUser = function () {\r\n        props.dispatch(post_deleteUser_action())\r\n    }\r\n    const getCaseFromServer = function () {\r\n        props.dispatch(get_caseFromServer_action())\r\n    }\r\n    const set_caseToGet = function (event) {\r\n        props.dispatch(set_caseToGet_action(event.target.value))\r\n    }\r\n    const set_hardChange_stitcher=function(event){\r\n        props.dispatch(set_hardChange_stitcher_action(event.target.value))\r\n    }\r\n    const set_hardChange_scaner=function(event){\r\n        props.dispatch(set_hardChange_scaner_action(event.target.value))\r\n    }\r\n    const set_hardChange_jointer=function(event){\r\n        props.dispatch(set_hardChange_jointer_action(event.target.value))\r\n    }\r\n    const hardChangeCase=function(){\r\n        props.dispatch(post_hardChange_action())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <div className={s.container_header}>Создать нового пользователя</div>\r\n\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Имя пользователя</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'text'} value={props.state.newUser.name} onChange={setName}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Штрих-код</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'text'} value={props.state.newUser.userhash} onChange={setUserhash}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Номер пользователя</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'number'} value={props.state.newUser.id} onChange={setId}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Процесс</div>\r\n                    <div className={s.smallCell}>\r\n                        <select className={s.select} value={props.state.newUser.operation} name=\"operation\"\r\n                                onChange={setOperation}>\r\n                            <option value={\"stitcher\"}>Расшивщик</option>\r\n                            <option value={\"scaner\"}>Сканировщик</option>\r\n                            <option value={\"jointer\"}>Сшивщик</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Права администратора:</div>\r\n                    <div className={s.smallCell}>\r\n                        ДА<input type={'checkbox'} value={!props.state.newUser.isAdmin} name={'isAdmin'}\r\n                                 onChange={setIsAdmin}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.greenButton} onClick={postNewUser}> Добавить пользователя</div>\r\n\r\n            </div>\r\n            <div className={s.button}\r\n                 onDoubleClick={resetUserStats}>Сбросить статистику всех пользователей\r\n            </div>\r\n\r\n            <div className={s.container}>\r\n                <div className={s.container_header}> Удалить пользователя</div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Номер пользователя:</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'text'} value={props.state.userToDelete} onChange={setUserToDelete}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.button}\r\n                     onClick={deleteUser}>Удалить пользователя.\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.container}>\r\n                <div className={s.container_header}> Изменить данные в деле</div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Номер дела</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'text'} value={props.state.hardChangeToCase.id} onChange={set_caseToGet}/>\r\n                    </div>\r\n                    <div className={s.greenButton}\r\n                         onClick={getCaseFromServer}>Выбрать\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Штрих-код: {props.state.hardChangeToCase.index}</div>\r\n                    <div className={s.smallCell}>Номер акта: {props.state.hardChangeToCase.act}</div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.cell}>\r\n                        <div className={s.smallCell}>\r\n                            Адрес: {props.state.hardChangeToCase.street + ' ' + props.state.hardChangeToCase.adress}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Расшивщик:\r\n                        <input type={'number'} value={props.state.hardChangeToCase.stitcher} onChange={set_hardChange_stitcher}/>\r\n                    </div>\r\n                    <div className={s.smallCell}>Дата расшивки:<p>{props.state.hardChangeToCase.stitchDate}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Сканировщик:\r\n                        <input type={'number'} value={props.state.hardChangeToCase.scaner} onChange={set_hardChange_scaner}/>\r\n                    </div>\r\n                    <div className={s.smallCell}>Дата сканировки:<p>{props.state.hardChangeToCase.scanDateFinish}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Сшивщик:\r\n                        <input type={'number'} value={props.state.hardChangeToCase.jointer} onChange={set_hardChange_jointer}/>\r\n                    </div>\r\n                    <div className={s.smallCell}>Дата сканировки:<p>{props.state.hardChangeToCase.jointDate}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.button}\r\n                         onClick={hardChangeCase}>Внести изменения(осторожненько плис)\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProjectScreen","import React from 'react';\r\nimport s from './SearchString.module.css';\r\n\r\n\r\n\r\n\r\nconst SearchString = function (props) {\r\n    let el=props.el\r\n    let defineClassString=function(el){\r\n        if(el.stitcher===''){return s.wrapper_new}\r\n        else if(el.stitcher!==''&&el.scaner===''){return s.wraper_stitch}\r\n        else if(el.scaner!==''&&el.scanDateFinish===''){return s.wrapper_scanStart}\r\n        else if(el.scanDateFinish!==''&&el.jointer===''){return s.wrapper_scanFinish}\r\n        else if(el.jointer!==''&&el.isDoneDate===''){return s.wrapper_joined}\r\n        else if(el.isDoneDate!==''){return s.wrapper_isDone}\r\n    }\r\n    let defineClassCell=function(indexIsWrong){\r\n        if(indexIsWrong){return s.indexIsWrong}else return ''\r\n    }\r\n\r\n    return (\r\n        <div className={defineClassString(el)}>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.act}</div>\r\n                <div className={s.cell}>{el.incomeDate}</div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.id}</div>\r\n                <div className={s.cell}>{el.index}</div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>\r\n                    {el.street + '  '+ el.adress}\r\n                </div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.stitcher}</div>\r\n                <div className={s.cell}>{el.stitchDate}</div>\r\n            </div>\r\n\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.scaner}</div>\r\n                <div className={s.cell}>{el.scanDateStart}</div>\r\n                <div className={s.cell}>{el.scanDateFinish}</div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.factPages}</div>\r\n                <div className={s.cell +' '+defineClassCell(props.wrongIndex)}>{el.scanNumber}</div>\r\n            </div>\r\n\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.jointer}</div>\r\n                <div className={s.cell}>{el.jointDate}</div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                {el.isDoneDate}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default SearchString","import React from 'react';\r\nimport s from './SearchScreen.module.css';\r\nimport SearchString from \"./SearchString/SearchString\";\r\nimport {\r\n    actFilter,\r\n    adressFilter, applyFilters,\r\n    idFilter,\r\n    indexFilter, isDoneFilter,\r\n    jointerFilter,\r\n    scanerFilter,\r\n    stitcherFilter\r\n} from \"../../Global/Functions\";\r\nimport {\r\n    set_filter_act_action,\r\n    set_filter_adress_action,\r\n    set_filter_id_action,\r\n    set_filter_index_action,\r\n    set_filter_isDone_action,\r\n    set_filter_jointer_action,\r\n    set_filter_scaner_action,\r\n    set_filter_stitcher_action\r\n} from \"../../Global/Actions\";\r\n\r\nlet scanNumberInvalidChecker = function (caseToCheck, caseList) {   /// проверялка индексов\r\n    let actsWithEmptyFactPages = [];\r\n    if (caseToCheck.scanNumber === \"00000\") {\r\n        console.log(\"нулі в індексі\" + caseToCheck.id)\r\n        return true\r\n    } else if(caseToCheck.scanNumber&&!caseToCheck.factPages){\r\n        let alreadyMarkAsEmpty = actsWithEmptyFactPages.find((actNumber)=>{\r\n            return actNumber===caseToCheck.act\r\n        })\r\n        if(!alreadyMarkAsEmpty){\r\n            actsWithEmptyFactPages.push(caseToCheck.act)\r\n            console.log('не підтягнуті сторінки в ' +caseToCheck.act + ' акті' )\r\n        }\r\n        return true\r\n    }else{\r\n        if (caseToCheck.scanNumber) {\r\n            let sameScanNumberExist = caseList.find((anyCase) => {\r\n                let sameScanNumber =  (anyCase.scanNumber === caseToCheck.scanNumber\r\n                    && anyCase.scaner === caseToCheck.scaner\r\n                    && anyCase.index !== caseToCheck.index)\r\n                return sameScanNumber\r\n            })\r\n            if (sameScanNumberExist){\r\n                console.log(\"однакові індекси: \"+caseToCheck.id + \" та \" + sameScanNumberExist.id )\r\n                return true\r\n            }\r\n        }else return false\r\n    }\r\n}\r\n\r\nconst SearchScreen = function (props) {\r\n\r\n    const setFilterIndex = function (event) {\r\n        props.dispatch(set_filter_index_action(event.target.value))\r\n    }\r\n    const setFilterAdress = function (event) {\r\n        props.dispatch(set_filter_adress_action(event.target.value))\r\n    }\r\n    const setFilterAct = function (event) {\r\n        props.dispatch(set_filter_act_action(event.target.value))\r\n    }\r\n    const setFilterId = function (event) {\r\n        props.dispatch(set_filter_id_action(event.target.value))\r\n    }\r\n    const setFilterStitcher = function (event) {\r\n        props.dispatch(set_filter_stitcher_action(event.target.value))\r\n    }\r\n    const setFilterScaner = function (event) {\r\n        props.dispatch(set_filter_scaner_action(event.target.value))\r\n    }\r\n    const setFilterJointer = function (event) {\r\n        props.dispatch(set_filter_jointer_action(event.target.value))\r\n    }\r\n    const setFilterIsDone = function (event) {\r\n        props.dispatch(set_filter_isDone_action(event.target.value))\r\n    }\r\n\r\n    let maxCounter = 0;\r\n    let suitableWithFilters = 0;\r\n    let content = function (caseList) {\r\n        if (props.state.casesForSearch.isFetching) {\r\n            return (<div>LOADING ...................................</div>)\r\n        }\r\n        if (Array.isArray(caseList)) {\r\n            return caseList.map((el) => {\r\n\r\n\r\n\r\n                let filtredElement = applyFilters(props.state.filters, el)\r\n                if (filtredElement) {\r\n                    let indexIsWrong = scanNumberInvalidChecker(el,caseList)\r\n                    suitableWithFilters++\r\n                    if (maxCounter < 600) {\r\n                        maxCounter++\r\n                        return (\r\n                            <SearchString el={el}\r\n                                          key={el.index + '' + el.act}\r\n                                          wrongIndex={indexIsWrong}/>\r\n                        )\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <div className={s.side}>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Акт\r\n                            <input type={'number'} className={s.input}\r\n                                   value={props.state.filters.act} onChange={setFilterAct}/>\r\n                        </div>\r\n                        <div className={s.cell}>Дата получения\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Дело\r\n                            <input type={'number'} className={s.input}\r\n                                   value={props.state.filters.id} onChange={setFilterId}/>\r\n                        </div>\r\n                        <div className={s.cell}>Штрих-код\r\n                            <input type={'number'} className={s.input}\r\n                                   value={props.state.filters.index} onChange={setFilterIndex}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>Адрес\r\n                        <input type={'text'} className={s.input}\r\n                               value={props.state.filters.adress} onChange={setFilterAdress}/>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Расшивщик\r\n                            <input type={'number'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.stitcher}\r\n                                   onChange={setFilterStitcher}/>\r\n                        </div>\r\n                        <div className={s.cell}>дата расшивки\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Сканировщик\r\n                            <input type={'number'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.scaner}\r\n                                   onChange={setFilterScaner}/>\r\n                        </div>\r\n                        <div className={s.cell}>Дата начала\r\n                        </div>\r\n                        <div className={s.cell}>Дата окончания\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>кол-во страниц</div>\r\n\r\n                        <div className={s.cell}>индекс</div>\r\n                    </div>\r\n\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Сшивщик\r\n                            <input type={'number'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.jointer}\r\n                                   onChange={setFilterJointer}/>\r\n                        </div>\r\n                        <div className={s.cell}>Дата сшивки\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        Дата сдачи\r\n                        <input type={'number'}\r\n                               className={s.input}\r\n                               value={props.state.filters.isDone}\r\n                               onChange={setFilterIsDone}/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.body}>\r\n                {content(props.state.casesForSearch.data)}\r\n            </div>\r\n            <div className={s.footer}>\r\n                <div>Всего дел в списке: {props.state.casesForSearch.data.length}</div>\r\n                <div>Подходит под фильтры: {suitableWithFilters}</div>\r\n                <div>Отображается: {maxCounter}</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default SearchScreen","import React from 'react';\r\nimport s from './HandOverScreen.module.css';\r\nimport {actFilter, adressFilter, idFilter, indexFilter} from \"../../Global/Functions\";\r\nimport {\r\n    post_done_cases_action,\r\n    push_filtredByIndex_to_handOverCasesList_action,\r\n    set_filter_index_action\r\n} from \"../../Global/Actions\";\r\nimport SearchString from \"../SearchScreen/SearchString/SearchString\";\r\n\r\nconst HandOverScreen = function (props) {\r\n\r\n    const setFilterIndex = function (event) {\r\n        props.dispatch(set_filter_index_action(event.target.value))\r\n    }\r\n    const pushCaseToHandOverList = function (event) {\r\n        if (event.key===\"Enter\"){\r\n            props.dispatch(push_filtredByIndex_to_handOverCasesList_action())\r\n        }\r\n        if(event.key===\",\"){event.preventDefault()}\r\n    }\r\n    const post_done_cases=function(event){\r\n        props.dispatch(post_done_cases_action())\r\n    }\r\n\r\n    let handOverCaseListLength = 0;\r\n    let content = function (caseList) {\r\n        if (props.state.casesForSearch.isFetching) {\r\n            return (<div>LOADING ...................................</div>)\r\n        }\r\n        if (Array.isArray(caseList)) {\r\n            return caseList.map((el) => {\r\n                handOverCaseListLength++;\r\n                    return (\r\n                        <SearchString el={el}\r\n                                      key={el.index + '' + el.act}/>\r\n                    )\r\n            })\r\n        } else console.log(\" caseList HandOverScreen Нет дел для отображения\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <div className={s.side}>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Акт\r\n\r\n                        </div>\r\n                        <div className={s.cell}>Дата получения\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Дело\r\n                        </div>\r\n                        <div className={s.cell}>Штрих-код\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>Адрес\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Расшивщик\r\n                        </div>\r\n                        <div className={s.cell}>дата расшивки\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Сканировщик\r\n                        </div>\r\n                        <div className={s.cell}>Дата начала\r\n                        </div>\r\n                        <div className={s.cell}>Дата окончания\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>страниц отсканено</div>\r\n                        <div className={s.cell}>страниц ожидалось</div>\r\n                        <div className={s.cell}>индекс</div>\r\n                    </div>\r\n\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Сшивщик\r\n                        </div>\r\n                        <div className={s.cell}>Дата сшивки\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        Охрана отмена\r\n                    </div>\r\n                </div>\r\n                <div className={s.side}>\r\n                    <input className={s.input}\r\n                           value={props.state.filters.index}\r\n                           onChange={setFilterIndex}\r\n                           onKeyDown={pushCaseToHandOverList}/>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.body}>\r\n                {content(props.state.casesForHandOver)}\r\n            </div>\r\n            <div className={s.footer}>\r\n                <div>Всего дел на проэкте: {props.state.casesForSearch.data.length}</div>\r\n                <div>Отобрано: {handOverCaseListLength}</div>\r\n                <div className={s.handOver} onClick={post_done_cases}>Сдать в архив</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default HandOverScreen","import React from 'react';\r\nimport  { Component } from \"react\";\r\nimport s from './Cell.module.css';\r\n\r\n\r\nlet  Cell= function (props) {\r\n\r\n    if(props.visible===true){\r\n        return (<div className={s.wrapper_2floor}>\r\n                <div className={s.inner}>{props.value.cases}</div>\r\n                <div className={s.inner}>{props.value.pages}</div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>{props.value.cases}</div>\r\n            </div>\r\n\r\n    )}\r\n\r\n\r\n}\r\nexport default Cell","import React from 'react';\r\nimport {Component} from \"react\";\r\nimport s from './ProjectStatsScreen.module.css';\r\nimport {setPagesVisible_action} from \"../../Global/Actions\";\r\nimport Cell from \"./Cell/Cell\";\r\n\r\n\r\nlet ProjectStatsScreen = function (props) {\r\n\r\n    let total = [{cases: 0, pages: 0}, {cases: 0, pages: 0}, {cases: 0, pages: 0}, {cases: 0, pages: 0}, {\r\n        cases: 0,\r\n        pages: 0\r\n    }, {cases: 0, pages: 0}];\r\n    let projectStats_setPagesVisible = function () {\r\n        props.dispatch(setPagesVisible_action())\r\n    }\r\n\r\n    let actsStat = function () {\r\n        let allActs = props.state.projectStats.allActsStats\r\n        console.log(allActs)\r\n        let strings = [];\r\n        for (let actName in allActs) {\r\n            console.log(allActs[actName])\r\n            total[0].cases += Number(allActs[actName].new.cases)\r\n            total[0].pages += Number(allActs[actName].new.pages)\r\n            total[1].cases += Number(allActs[actName].stitcher.cases)\r\n            total[1].pages += Number(allActs[actName].stitcher.pages)\r\n            total[2].cases += Number(allActs[actName].onScan.cases)\r\n            total[2].pages += Number(allActs[actName].onScan.pages)\r\n            total[3].cases += Number(allActs[actName].scaner.cases)\r\n            total[3].pages += Number(allActs[actName].scaner.pages)\r\n            total[4].cases += Number(allActs[actName].jointer.cases)\r\n            total[4].pages += Number(allActs[actName].jointer.pages)\r\n            total[5].cases += Number(allActs[actName].isDone.cases)\r\n            total[5].pages += Number(allActs[actName].isDone.pages)\r\n            console.log(total)\r\n            let string = function () {\r\n                return (\r\n                    <tr className={s.actString} key={'actStatString' + actName}>\r\n                        <td className={s.stringcell}>{actName}</td>\r\n                        <td className={s.stringcell + ' ' + s.new}>{allActs[actName].startDate}</td>\r\n                        <td className={s.stringcell + ' ' + s.new}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].new}/>\r\n                        </td>\r\n\r\n                        <td className={s.stringcell + ' ' + s.stitch}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].stitcher}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.onScan}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].onScan}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.scan}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].scaner}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.joint}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].jointer}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.done}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].isDone}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.done}>{allActs[actName].finishDate}</td>\r\n                    </tr>\r\n                )\r\n            }()\r\n            strings.push(string)\r\n        }\r\n        return strings\r\n    }\r\n    let dateStat = function () {\r\n        let allDates = props.state.projectStats.allDatesStats\r\n        let strings = [];\r\n        for (let date in allDates) {\r\n            let string = function () {\r\n                return (\r\n                    <tr className={s.actString} key={'dateString' + date}>\r\n                        <td className={s.stringcell}>{date}</td>\r\n\r\n                        <td className={s.stringcell + ' ' + s.new}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].new}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.stitch}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].stitcher}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.onScan}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].onScan}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.scan}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].scaner}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.joint}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].jointer}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.done}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].isDone}/>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }()\r\n            strings.push(string)\r\n        }\r\n        return strings\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.checkbox} onClick={projectStats_setPagesVisible}>\r\n                {props.state.projectStats_pagesVisible ? \"Вимкнути сторінки\" : \"Увімкнути сторінки\"}\r\n            </div>\r\n            <div className={s.wrapper_line}>\r\n\r\n                <div className={s.actStats}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr className={s.segment_header}>\r\n                            <td className={s.cell}>Акт №</td>\r\n                            <td className={s.cell}>Дата получения</td>\r\n                            <td className={s.cell}>Получено</td>\r\n                            <td className={s.cell}>Расшито</td>\r\n                            <td className={s.cell}>На скане</td>\r\n                            <td className={s.cell}>Отскан</td>\r\n                            <td className={s.cell}>Сшито</td>\r\n                            <td className={s.cell}>Сдано</td>\r\n                            <td className={s.cell}>Дата сдачи</td>\r\n                            <td className={s.placeholder}/>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <table className={s.segment_body}>\r\n                        <tbody>\r\n                        {actsStat()}\r\n                        </tbody>\r\n                    </table>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr className={s.footer}>\r\n                            <td className={s.cell}>В наличии:</td>\r\n                            <td className={s.cell}/>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[0].cases - total[1].cases,\r\n                                          pages: total[0].pages - total[1].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[1].cases - total[2].cases,\r\n                                          pages: total[1].pages - total[2].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[2].cases - total[3].cases,\r\n                                          pages: total[2].pages - total[3].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[3].cases - total[4].cases,\r\n                                          pages: total[3].pages - total[4].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[4].cases - total[5].cases,\r\n                                          pages: total[4].pages - total[5].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>------</td>\r\n                            <td className={s.cell}/>\r\n                            <td className={s.placeholder}/>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n                <div className={s.actStats}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr className={s.segment_header}>\r\n                            <td className={s.cell}>Дата</td>\r\n                            <td className={s.cell}>Получено</td>\r\n                            <td className={s.cell}>Расшито</td>\r\n                            <td className={s.cell}>На скане</td>\r\n                            <td className={s.cell}>Отскан</td>\r\n                            <td className={s.cell}>Сшито</td>\r\n                            <td className={s.cell}>Сдано</td>\r\n                            <td className={s.placeholder}/>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <table className={s.segment_body}>\r\n                        <tbody>\r\n                        {dateStat()}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <table>\r\n                        <tbody>\r\n                        <tr className={s.footer}>\r\n                            <td className={s.cell}>Всего:</td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[0]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[1]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[2]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[3]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[4]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[5]}/>\r\n                            </td>\r\n                            <td className={s.placeholder}></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProjectStatsScreen","import React from 'react';\r\nimport s from './SwitchButton.module.css';\r\nimport {switchStatsOperation_action, switchViewMode_action} from \"../../../Global/Actions\";\r\n\r\nconst SwitchButton = function (props) {\r\n\r\nconst clickSwitchButton=function(){\r\n    if(props.field===\"view mode\"){\r\n        props.dispatch(switchViewMode_action(props.value))\r\n    }else if(props.field===\"statsOperation\"){\r\n        props.dispatch(switchStatsOperation_action(props.value))\r\n    }\r\n\r\n}\r\nconst defineClass=function(){\r\n    let classString = ''\r\n    if(props.viewMode===props.value||props.statsOperation===props.value){classString+= s.clicked}\r\n    else{classString+= s.active}\r\n\r\n    if(props.statsOperation===\"stitcher\"){classString+=' '+s.stitchColor}\r\n    if(props.statsOperation===\"scaner\"){classString+=' '+s.scaner}\r\n    if(props.statsOperation===\"jointer\"){classString+=' '+s.jointer}\r\n    return classString\r\n}\r\n\r\n\r\n    return (\r\n       <div className={defineClass()}\r\n       onClick={clickSwitchButton}>\r\n           {props.text}\r\n       </div>\r\n    )\r\n\r\n}\r\nexport default SwitchButton","import React from 'react';\r\nimport  { Component } from \"react\";\r\nimport s from './Cell.module.css';\r\n\r\n\r\nlet  Cell= function (props) {\r\n\r\n    if(props.visible===true){\r\n        return (<td className={s.wrapper_2floor}>\r\n                {props.value}\r\n            </td>\r\n        )\r\n    }else{\r\n        return(\r\n            <td className={s.displayNone}></td>\r\n\r\n    )}\r\n\r\n\r\n}\r\nexport default Cell","import React from 'react';\r\nimport s from './UserStatScreen.module.css';\r\nimport SwitchButton from \"./switchButton/SwitchButton\";\r\nimport {getCurrentMonth} from \"../../Global/Functions\";\r\nimport {setPagesVisible_action} from \"../../Global/Actions\";\r\nimport Cell from \"./Cell/Cell\";\r\nimport {switchViewMode_action} from \"../../Global/Actions\"\r\n\r\n\r\nconst UserStatScreen = function (props) {\r\n    const defineClass = function () {\r\n\r\n    }\r\n    let projectStats_setPagesVisible = function () {\r\n        props.dispatch(setPagesVisible_action())\r\n    }\r\n\r\n\r\n    let dateStats;\r\n    if (props.state.viewMode === \"total\") {\r\n        dateStats = props.state.dateUsersStats\r\n    } else {\r\n        dateStats = getCurrentMonth(props.state.dateUsersStats,props.state.viewMode)\r\n    }\r\n    \r\n    let users = [];\r\n    let content = function () {\r\n        let allUsers = [];\r\n        for (let date in dateStats) {\r\n            for (let user in dateStats[date]) {\r\n                let userIsExist = allUsers.find((existUser) => existUser.name === dateStats[date][user].name)\r\n                if (!userIsExist) {\r\n                    dateStats[date][user][\"id\"] = user\r\n                    allUsers.push(dateStats[date][user])\r\n                }\r\n            }\r\n        }\r\n        allUsers.sort()\r\n        console.log(\"all users length \" + allUsers.length)\r\n        let content_header_creator = function () {\r\n\r\n            allUsers.forEach((user) => {\r\n                users.push(\r\n                    <Cell visible={props.state.projectStats_pagesVisible}\r\n                          key={user.id + user.name}\r\n                          value={user.id}/>\r\n                )\r\n                users.push(\r\n                    <Cell visible={true}\r\n                          key={user.name}\r\n                          value={user.name}/>\r\n                )\r\n\r\n            })\r\n            return (\r\n                <tr className={s.headerString} key={\"headerString\"}>\r\n                    <td className={s.headerCell}> Дата</td>\r\n                    {users}\r\n                    <Cell visible={props.state.projectStats_pagesVisible}\r\n                          value={\"Усього за день,справ.\"}\r\n                    />\r\n                    <Cell visible={true}\r\n                          value={\"Усього за день,стор.\"}\r\n    />\r\n                </tr>\r\n\r\n            )\r\n        };\r\n        let content_header = content_header_creator();\r\n\r\n        let usersTotal = {};  //счетчик суммы для каждого пользователя\r\n\r\n        let content_body_creator = function () {\r\n            let keyCounter = 0\r\n            let allStrings = [];\r\n            for (let date in dateStats) {\r\n                let string = [];\r\n                let stringSum = {cases: 0, pages: 0};\r\n                string.push(<td className={s.headerCell} key={date}>{date}</td>)\r\n\r\n                allUsers.forEach((userObj) => {\r\n                    let user = userObj.id\r\n                    console.log('userObj')\r\n                    console.log(userObj)\r\n\r\n                    if (dateStats[date][user]) {                              //счетчик суммы для каждого пользователя\r\n                        if (usersTotal[user]) {\r\n                            usersTotal[user].cases = Number(usersTotal[user].cases) + Number(dateStats[date][user].cases)\r\n                            usersTotal[user].pages = Number(usersTotal[user].pages) + Number(dateStats[date][user].pages)\r\n                            console.log(usersTotal)\r\n                        } else {\r\n                            usersTotal[user] = {\r\n                                cases: Number(dateStats[date][user].cases),\r\n                                pages: Number(dateStats[date][user].pages)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (dateStats[date][user]) {                 //создание строки со статистикой пользователей\r\n                        stringSum.cases += Number(dateStats[date][user].cases);\r\n                        stringSum.pages += Number(dateStats[date][user].pages);\r\n                        string.push(\r\n                            <Cell visible={props.state.projectStats_pagesVisible}\r\n                                  value={dateStats[date][user].cases}/>)\r\n                        string.push(\r\n                            <Cell visible={true}\r\n                                  value={dateStats[date][user].pages}/>)\r\n\r\n\r\n\r\n                    } else {\r\n                        string.push(\r\n                            <Cell visible={props.state.projectStats_pagesVisible}\r\n                                  value={\"\"}/>)\r\n                        string.push(\r\n                            <Cell visible={true}\r\n                                  value={\"\"}/>)\r\n\r\n\r\n                    }\r\n                })\r\n                string.push(\r\n                    <Cell visible={props.state.projectStats_pagesVisible}\r\n                          value={stringSum.cases}\r\n                    />\r\n                )\r\n                string.push(\r\n                    <Cell visible={true}\r\n                          value={stringSum.pages}\r\n                          />\r\n                )\r\n\r\n                allStrings.push(<tr className={s.bodyString} key={'string' + date}>{string}</tr>)\r\n            }\r\n\r\n            return allStrings\r\n        }\r\n        let content_body = content_body_creator();\r\n\r\n        let content_footer_creator = function () {\r\n            let footerString = [];\r\n            let totalSum = {pages: 0, cases: 0}\r\n\r\n            footerString.push(<td className={s.footerCell} key={'stringTotalHeader'}>Усього</td>)\r\n            allUsers.forEach((userObj) => {\r\n                let user = userObj.id\r\n                let el = usersTotal[user];\r\n                if (el) {\r\n                    totalSum.pages += Number(el.pages);\r\n                    totalSum.cases += Number(el.cases);\r\n\r\n                    footerString.push(\r\n                        <Cell visible={props.state.projectStats_pagesVisible}\r\n                              key={el.cases+'_'+el.pages}\r\n                              value={el.cases}/>\r\n                    )\r\n                    footerString.push(\r\n                            <Cell visible={true}\r\n                                  key={el.pages+'_'+el.cases}\r\n                                  value={el.pages}/>\r\n                    )\r\n\r\n                }\r\n\r\n\r\n            })\r\n            footerString.push(\r\n                <Cell visible={props.state.projectStats_pagesVisible}\r\n                      key={\"footerTotalCases\"}\r\n                      value={totalSum.cases}/>\r\n            )\r\n            footerString.push(\r\n                    <Cell visible={true}\r\n                          key={\"footerTotalPages\"}\r\n                          value={totalSum.pages}/>\r\n            )\r\n\r\n\r\n\r\n            return <tr className={s.footerString} key={'footerString'}>{footerString}</tr>\r\n        }\r\n        let content_footer = content_footer_creator();\r\n\r\n        return (\r\n            <table className={s.bodyTable}>\r\n                <tbody>\r\n                {content_header}\r\n                {content_body}\r\n                {content_footer}\r\n                </tbody>\r\n            </table>\r\n        )\r\n\r\n    }\r\n    let setNeededMonth = function(event){\r\n        if(event.target.value===\"\"){\r\n            props.dispatch(switchViewMode_action(\"total\"))\r\n        }else{\r\n            props.dispatch(switchViewMode_action(event.target.value))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <div className={s.headerCell}>\r\n                    <input  className={s.monthInput}\r\n                            onChange={setNeededMonth}\r\n                            placeholder={\"Вкажіть потрібний місяць\"}\r\n                            type={\"options\"}\r\n                            field={\"view mode\"}/>\r\n                </div>\r\n                <div className={s.headerCell}>\r\n                    <div className={s.checkbox} onClick={projectStats_setPagesVisible}>\r\n                        {props.state.projectStats_pagesVisible ? \"Сховати кількість справ\" : \"Відображується тільки кількість сторінок (розгорнути)\"}\r\n                    </div>\r\n                </div>\r\n                <div className={s.headerCell}>\r\n                    <SwitchButton text={\"Расшивка\"}\r\n                                  field={\"statsOperation\"}\r\n                                  value={'stitcher'}\r\n                                  dispatch={props.dispatch}\r\n                                  viewMode={props.state.viewMode}\r\n                                  statsOperation={props.state.statsOperation}/>\r\n                    <SwitchButton text={\"Сканировка\"}\r\n                                  field={\"statsOperation\"}\r\n                                  value={'scaner'}\r\n                                  dispatch={props.dispatch}\r\n                                  viewMode={props.state.viewMode}\r\n                                  statsOperation={props.state.statsOperation}/>\r\n                    <SwitchButton text={\"Сшивка\"}\r\n                                  field={\"statsOperation\"}\r\n                                  value={'jointer'}\r\n                                  dispatch={props.dispatch}\r\n                                  viewMode={props.state.viewMode}\r\n                                  statsOperation={props.state.statsOperation}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className={s.body}>\r\n                {content()}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default UserStatScreen","import React from 'react';\r\nimport s from './App.module.css';\r\nimport Header from \"./Components/Header/Header\";\r\nimport WorkScreen from \"./Components/WorkScreen/WorkScreen\";\r\nimport AuthScreen from \"./Components/AuthScreen/AuthScreen\";\r\nimport UserStatsScreen from \"./Components/UserStatsScreen/UserStatsScreen\";\r\nimport ProjectScreen from \"./Components/ProjectScreen/ProjectScreen\";\r\nimport SearchScreen from \"./Components/SearchScreen/SearchScreen\";\r\nimport HandOverScreen from \"./Components/HandOverScreen/HandOverScreen\";\r\nimport ProjectStatsScreen from \"./Components/ProjectStatsScreen/ProjectStatsScreen\";\r\nimport UserStatScreen from \"./Components/UserStatScreen/UserStatScreen\";\r\n\r\n\r\nfunction App(props) {\r\n\r\n    let setCurrentNavScreen = function () {\r\n        if (props.state.currentNav === 'work') {\r\n            return (\r\n                <div>\r\n                    <WorkScreen dispatch={props.dispatch}\r\n                                  state={props.state}/>\r\n                </div>\r\n            )\r\n\r\n        } else if (props.state.currentNav === 'auth') {\r\n            return (\r\n                <div className={s.wrapper}>\r\n                    <AuthScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }else if (props.state.currentNav === 'userStats') {\r\n            return (\r\n                <div>\r\n                    <UserStatsScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }else if (props.state.currentNav === 'projectSettings') {\r\n            return (\r\n                <div>\r\n                    <ProjectScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'search') {\r\n            return (\r\n                <div>\r\n                    <SearchScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'handOver') {\r\n            return (\r\n                <div>\r\n                    <HandOverScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'projectStats') {\r\n            return (\r\n                <div>\r\n                    <ProjectStatsScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'userStats2') {\r\n            return (\r\n                <div>\r\n                    <UserStatScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.App}>\r\n            <Header dispatch={props.dispatch}\r\n                    state={props.state}\r\n            />\r\n\r\n            <div className={s.bg_image}>\r\n                {setCurrentNavScreen()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport store from \"./Global/redux-store.js\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"./App\";\r\n\r\nconst render = (state) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n                <App state={state.main}\r\n                     dispatch={store.dispatch.bind(store)}\r\n                     key={\"reactApp\"}\r\n                />\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\nlet state=store.getState();\r\nrender(state);\r\nstore.subscribe(()=>{render(store.getState())});\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}