{"version":3,"sources":["Components/ProjectStatsScreen/ProjectStatsScreen.module.css","Components/ProjectScreen/ProjectScreen.module.css","Components/SearchScreen/SearchScreen.module.css","Components/HandOverScreen/HandOverScreen.module.css","Components/SearchScreen/SearchString/SearchString.module.css","Components/WorkScreen/Choosen/ChoosenString/ChoosenString.module.css","Components/WorkScreen/WorkScreen.module.css","Components/WorkScreen/Choosen/Choosen.module.css","Components/UserStatScreen/UserStatScreen.module.css","Components/UserStatsScreen/UserStatsScreen.module.css","Components/Header/Header.module.css","Components/WorkScreen/CaseString/CaseString.module.css","Components/ProjectStatsScreen/Cell/Cell.module.css","Components/UserStatScreen/switchButton/SwitchButton.module.css","Components/Header/HeaderLink/HeaderLink.module.css","App.module.css","Components/AuthScreen/AuthScreen.module.css","Components/WorkScreen/addButton/AddButton.module.css","Components/UserStatsScreen/switchButton/SwitchButton.module.css","Components/UserStatScreen/Cell/Cell.module.css","img/logo.png","Components/WorkScreen/Choosen/PulseNumber/PulseNumber.module.css","Global/Functions.js","Global/Actions.js","Global/reducers/main_reducer.js","Global/redux-store.js","serviceWorker.js","Components/Header/HeaderLink/HeaderLink.js","Components/Header/Header.js","Components/WorkScreen/addButton/AddButton.js","Components/WorkScreen/CaseString/CaseString.js","Components/WorkScreen/Choosen/ChoosenString/ChoosenString.js","Components/WorkScreen/Choosen/PulseNumber/PulseNumber.js","Components/WorkScreen/Choosen/Choosen.js","Components/WorkScreen/WorkScreen.js","Components/AuthScreen/AuthScreen.js","Components/UserStatsScreen/UserStatsScreen.js","Components/ProjectScreen/ProjectScreen.js","Components/SearchScreen/SearchString/SearchString.js","Components/SearchScreen/SearchScreen.js","Components/HandOverScreen/HandOverScreen.js","Components/ProjectStatsScreen/Cell/Cell.js","Components/ProjectStatsScreen/ProjectStatsScreen.js","Components/UserStatScreen/switchButton/SwitchButton.js","Components/UserStatScreen/Cell/Cell.js","Components/UserStatScreen/UserStatScreen.js","Components/UserStatsByActs/UserStatsByActs.js","App.js","index.js"],"names":["module","exports","moment","require","request_operator_cases","userhash","a","fetch","method","headers","response","ok","json","requestedData","alert","status","post_case_changes","changedCases","casesWithNoCirillic","map","el","street","adress","JSON","stringify","undefined","change_admin_operation","newOperation","applyFilters","filters","filtredElement","value","index","toLowerCase","fullAdress","indexOf","adressFilter","Number","id","idFilter","act","actFilter","stitcher","scaner","jointer","stitcherFilter","stitchDate","stitchDateFilter","scanerFilter","scanDateStart","scanerDateStartFilter","scanerDateStart","scanDateFinish","scanerDateFinishFilter","scanerDateFinish","isDone","jointerFilter","jointDate","jointDateFilter","isDoneDate","isDoneFilter","request_casesForSearch","post_done_cases","caseList","reset_userstats","request_projectStats","request_userStats","request_userStatsByActs","getMomentFromDateString","dateString","splitDate","split","stringDay","day","parseInt","replace","month","year","finishDate","date","startOf","getCaseFromServer","caseToChange","getOperationStats","statsOperation","choose_case_action","type","set_filter_index_action","set_filter_adress_action","set_filter_act_action","set_filter_id_action","switchViewMode_action","initialState","operator_cases","isFetching","data","casesForSearch","casesForHandOver","choosen_cases","projectStats","viewMode","currentNav","userInfo","isAdmin","newUser","name","operation","userToDelete","dateUsersStats","hardChangeToCase","incomeDate","expectedPages","pages","scanNumber","comment","projectStats_pagesVisible","main_reducer","state","action","nav","then","casesForUser","choosen","store","dispatch","find","choosen_el","push","console","log","filter","length","format","forEach","scanDate","setDateToChoosen","existCase","wrongCaseList","usersStats","userStatsByActs","xhr","XMLHttpRequest","open","setRequestHeader","send","onload","post_new_user","deleteUser","requestedCase","hardChangeCase","postHardChange","reducers","combineReducers","main","createStore","Boolean","window","location","hostname","match","HeaderLink","props","className","s","buttonWrapper","curClass","activeLink","headerButton","onlyAdmin","invisible","defineClass","onClick","text","Header","header_wrapper","header_container","header_leftSide","icon","hoverElement","src","headerIcon","headerText","navbar","AddButton","wrapper","square","event","CaseString","datacase","wrapperOnScan","cell","user","ChoosenString","deleteChoosenString","smallcell","cancelButton","input","onChange","target","PulseNumber","pulseNumber","Choosen","header","body","key","footer","hideButton","postButton","placeholder","WorkScreen","casesToView","filtredCasesCount","changeAdminOperation","getAttribute","change_admin_operation_action","bigText","midText","changeOperation","adminWindow","caseList_header","topSide","bottomSide","autoFocus","searchInput","onKeyDown","preventDefault","content","i","arr","AuthScreen","onKeyPress","UserStatsScreen","users","fullBlock","sort","b","userCard","usersString","userCardCreator","ProjectScreen","container","container_header","smallCell","select","greenButton","button","onDoubleClick","SearchString","indexIsWrong","wrapper_new","wraper_stitch","wrapper_scanStart","wrapper_scanFinish","wrapper_joined","wrapper_isDone","defineClassString","bigcell","factPages","wrongIndex","SearchScreen","maxCounter","suitableWithFilters","side","Array","isArray","caseToCheck","actsWithEmptyFactPages","actNumber","sameScanNumberExist","anyCase","scanNumberInvalidChecker","HandOverScreen","handOverCaseListLength","handOver","Cell","visible","wrapper_2floor","inner","cases","ProjectStatsScreen","total","checkbox","wrapper_line","actStats","segment_header","segment_body","allActs","allActsStats","strings","actName","new","onScan","string","actString","stringcell","startDate","stitch","scan","joint","done","actsStat","allDates","allDatesStats","dateStat","SwitchButton","classString","clicked","active","stitchColor","field","displayNone","UserStatScreen","dateStats","neededMonth","m_neededMonth","currentMonthDates","isSame","getCurrentMonth","headerCell","monthInput","allUsers","existUser","content_header","headerString","usersTotal","content_body","allStrings","stringSum","userObj","bodyString","content_body_creator","content_footer","footerString","totalSum","footerCell","content_footer_creator","bodyTable","UserStatsByActs","App","bg_image","render","ReactDOM","StrictMode","bind","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f827effb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProjectStatsScreen_wrapper__v7RXj\",\"checkbox\":\"ProjectStatsScreen_checkbox__29CGr\",\"wrapper_line\":\"ProjectStatsScreen_wrapper_line__1Y7yn\",\"actStats\":\"ProjectStatsScreen_actStats__31tHM\",\"segment_header\":\"ProjectStatsScreen_segment_header__3KJjs\",\"cell\":\"ProjectStatsScreen_cell__1Pxqc\",\"placeholder\":\"ProjectStatsScreen_placeholder____sHY\",\"segment_body\":\"ProjectStatsScreen_segment_body__3YIIy\",\"actString\":\"ProjectStatsScreen_actString__2_Jqu\",\"stringcell\":\"ProjectStatsScreen_stringcell__3omIu\",\"new\":\"ProjectStatsScreen_new__33lMB\",\"stitch\":\"ProjectStatsScreen_stitch__Zqdo3\",\"onScan\":\"ProjectStatsScreen_onScan__2voWN\",\"scan\":\"ProjectStatsScreen_scan__PXTNT\",\"joint\":\"ProjectStatsScreen_joint__2Qlno\",\"done\":\"ProjectStatsScreen_done__3id9F\",\"footer\":\"ProjectStatsScreen_footer__Ih1Wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProjectScreen_wrapper__2JV3f\",\"button\":\"ProjectScreen_button__-MvCF\",\"container\":\"ProjectScreen_container__1XLKP\",\"container_header\":\"ProjectScreen_container_header__16via\",\"cell\":\"ProjectScreen_cell__3jnyF\",\"smallCell\":\"ProjectScreen_smallCell__3UXca\",\"greenButton\":\"ProjectScreen_greenButton__1O8a6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchScreen_wrapper__2r3zS\",\"header\":\"SearchScreen_header__15gAs\",\"side\":\"SearchScreen_side__XKzSI\",\"bigcell\":\"SearchScreen_bigcell__2tSFC\",\"cell\":\"SearchScreen_cell__3UMPB\",\"input\":\"SearchScreen_input__2dUyE\",\"body\":\"SearchScreen_body__2CO1J\",\"footer\":\"SearchScreen_footer__3TI9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HandOverScreen_wrapper__1MEcb\",\"header\":\"HandOverScreen_header__2ca4b\",\"side\":\"HandOverScreen_side__sX6rY\",\"bigcell\":\"HandOverScreen_bigcell__WiAXo\",\"cell\":\"HandOverScreen_cell__1wbEH\",\"body\":\"HandOverScreen_body__396iR\",\"footer\":\"HandOverScreen_footer__L_Y_u\",\"handOver\":\"HandOverScreen_handOver__3oFMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_new\":\"SearchString_wrapper_new__3-WFS\",\"wraper_stitch\":\"SearchString_wraper_stitch__KREQW\",\"wrapper_scanStart\":\"SearchString_wrapper_scanStart__1dCeE\",\"wrapper_scanFinish\":\"SearchString_wrapper_scanFinish__1oLo4\",\"wrapper_joined\":\"SearchString_wrapper_joined__2qBWS\",\"wrapper_isDone\":\"SearchString_wrapper_isDone__3z3xS\",\"bigcell\":\"SearchString_bigcell__30sLd\",\"visualize\":\"SearchString_visualize__3i1CM\",\"cell\":\"SearchString_cell__2ssUJ\",\"indexIsWrong\":\"SearchString_indexIsWrong__JJcZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChoosenString_wrapper__U0xCf\",\"visualize\":\"ChoosenString_visualize__2XeBL\",\"cell\":\"ChoosenString_cell__3zbgB\",\"smallcell\":\"ChoosenString_smallcell__1_lYx\",\"cancelButton\":\"ChoosenString_cancelButton__38qqj\",\"input\":\"ChoosenString_input__2UotN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WorkScreen_wrapper__QPO5A\",\"header\":\"WorkScreen_header__VRcwm\",\"bigText\":\"WorkScreen_bigText__17g7L\",\"midText\":\"WorkScreen_midText__2K1YO\",\"body\":\"WorkScreen_body__2Zt4G\",\"caseList\":\"WorkScreen_caseList__30lrf\",\"caseList_header\":\"WorkScreen_caseList_header___Bv4b\",\"topSide\":\"WorkScreen_topSide__5IgxE\",\"searchInput\":\"WorkScreen_searchInput__bAZDK\",\"bottomSide\":\"WorkScreen_bottomSide__2avjT\",\"cell\":\"WorkScreen_cell__17XZj\",\"content\":\"WorkScreen_content__1gDeb\",\"footer\":\"WorkScreen_footer__3yODp\",\"choosen\":\"WorkScreen_choosen__S_zQF\",\"changeOperation\":\"WorkScreen_changeOperation__1sKIW\",\"IndexInput\":\"WorkScreen_IndexInput__2BL-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Choosen_wrapper__3dgCa\",\"header\":\"Choosen_header__2RL_J\",\"body\":\"Choosen_body__2wagS\",\"smallcell\":\"Choosen_smallcell__3vmgi\",\"cell\":\"Choosen_cell__ppDDM\",\"footer\":\"Choosen_footer__nMIgL\",\"input\":\"Choosen_input__8p_H5\",\"postButton\":\"Choosen_postButton__2TCRo\",\"hideButton\":\"Choosen_hideButton__11Rq_\",\"none\":\"Choosen_none__2W3Nq\",\"pulseNumber\":\"Choosen_pulseNumber__2f3d_\",\"pulsing\":\"Choosen_pulsing__VR1jc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserStatScreen_wrapper__2SVGQ\",\"header\":\"UserStatScreen_header__OP0Lc\",\"button\":\"UserStatScreen_button__3Muvv\",\"body\":\"UserStatScreen_body__1B3Wc\",\"tableHeader\":\"UserStatScreen_tableHeader__3o2KV\",\"headerString\":\"UserStatScreen_headerString__1j-cA\",\"headerCell\":\"UserStatScreen_headerCell__35mF9\",\"bodyString\":\"UserStatScreen_bodyString__3Geyw\",\"cell\":\"UserStatScreen_cell__1W2ds\",\"footerCell\":\"UserStatScreen_footerCell__3LXd3\",\"footerString\":\"UserStatScreen_footerString__3pli-\",\"totalCell\":\"UserStatScreen_totalCell__30idT\",\"incell\":\"UserStatScreen_incell__YI-zU\",\"checkbox\":\"UserStatScreen_checkbox__3JQnK\",\"bodyTable\":\"UserStatScreen_bodyTable__2DxSW\",\"monthInput\":\"UserStatScreen_monthInput__RFx8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserStatsScreen_wrapper__3U-TT\",\"header\":\"UserStatsScreen_header__21nXi\",\"button\":\"UserStatsScreen_button__1YhKq\",\"body\":\"UserStatsScreen_body__d5tF9\",\"tableHeader\":\"UserStatsScreen_tableHeader__18UHw\",\"headerCell\":\"UserStatsScreen_headerCell__3WWks\",\"headerStitcher\":\"UserStatsScreen_headerStitcher__26mS-\",\"headerScaner\":\"UserStatsScreen_headerScaner__2mnCN\",\"headerJointer\":\"UserStatsScreen_headerJointer__3EeZZ\",\"tableBody\":\"UserStatsScreen_tableBody__2rcna\",\"usersString\":\"UserStatsScreen_usersString__3MFcd\",\"cell\":\"UserStatsScreen_cell__80hY6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrapper\":\"Header_header_wrapper__1wfMg\",\"header_container\":\"Header_header_container__rwffk\",\"header_leftSide\":\"Header_header_leftSide__2roA-\",\"icon\":\"Header_icon__1OpK5\",\"headerText\":\"Header_headerText__e8nYw\",\"text\":\"Header_text__1fvw-\",\"hoverElement\":\"Header_hoverElement__221wf\",\"navbar\":\"Header_navbar__2Qn7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CaseString_wrapper__1xeRB\",\"visualize\":\"CaseString_visualize__3bZsH\",\"wrapperOnScan\":\"CaseString_wrapperOnScan__1y20V\",\"cell\":\"CaseString_cell__j5uB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_2floor\":\"Cell_wrapper_2floor__pNvhm\",\"wrapper\":\"Cell_wrapper__3W2Vs\",\"inner\":\"Cell_inner__3JncX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clicked\":\"SwitchButton_clicked__E8KU9\",\"active\":\"SwitchButton_active__3daUy\",\"stitcher\":\"SwitchButton_stitcher__2SZXr\",\"scaner\":\"SwitchButton_scaner__385Ks\",\"jointer\":\"SwitchButton_jointer__15Ebf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"HeaderLink_buttonWrapper__On1Ar\",\"headerButton\":\"HeaderLink_headerButton__2slyd\",\"activeLink\":\"HeaderLink_activeLink__2fudc\",\"invisible\":\"HeaderLink_invisible__3_J6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3jLxJ\",\"wrapper\":\"App_wrapper__3V8Zx\",\"bg_image\":\"App_bg_image__z3AnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AuthScreen_wrapper__FCst_\",\"window\":\"AuthScreen_window__37Nyq\",\"input\":\"AuthScreen_input__1ySJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddButton_wrapper__54AaM\",\"square\":\"AddButton_square__DqGpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clicked\":\"SwitchButton_clicked__2h4t6\",\"active\":\"SwitchButton_active__3BIvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_2floor\":\"Cell_wrapper_2floor__1UXBN\",\"wrapper\":\"Cell_wrapper__1XqXU\",\"displayNone\":\"Cell_displayNone__1viPt\",\"inner\":\"Cell_inner__3bMaL\"};","module.exports = __webpack_public_path__ + \"static/media/logo.99e7c92e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pulseNumber\":\"PulseNumber_pulseNumber__1hDtQ\",\"pulsing\":\"PulseNumber_pulsing___IM9V\"};","const serverURL = '';                      //'http://localhost:3001/'          //switch to empty string to build\r\nconst moment = require(\"moment\");\r\nexport const request_operator_cases = async function (userhash) {\r\n\r\n    let response = await fetch(`${serverURL}getCases`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\n\r\nexport const post_case_changes = async function (userhash, changedCases) {\r\n    let casesWithNoCirillic = changedCases.map((el) => {\r\n        delete el.street;\r\n        delete el.adress;\r\n        return el;\r\n    })\r\n    let response = await fetch(`${serverURL}postChangedCases`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-Type': 'charset=utf-8',\r\n            \"userhash\": userhash,\r\n            \"changedCases\": JSON.stringify(casesWithNoCirillic),\r\n        },\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status + 'не удалось отправить данные на сервер')\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const change_admin_operation = async function (userhash, newOperation) {\r\n    let response = await fetch(`${serverURL}changeAdminOperation`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-Type': 'charset=utf-8',\r\n            \"userhash\": userhash,\r\n            \"newOperation\": newOperation,\r\n        },\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status + 'не удалось отправить данные на сервер')\r\n        return undefined\r\n    }\r\n}\r\n\r\n\r\nexport const indexFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === el.index) {\r\n        return el\r\n    }\r\n}\r\nexport const adressFilter = function (value, el) {\r\n    if (el) {\r\n        value = value.toLowerCase();\r\n        let fullAdress = (el.street + ' ' + el.adress).toLowerCase()\r\n        if (value === '') {\r\n            return el\r\n        } else if (fullAdress.indexOf(value) !== -1) {\r\n            return el\r\n        }\r\n    }\r\n}\r\nexport const actFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && Number(value) === Number(el.act)) {\r\n        return el\r\n    }\r\n}\r\nexport const idFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && Number(value) === Number(el.id)) {\r\n        return el\r\n    }\r\n}\r\nexport const stitcherFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === el.stitcher) {\r\n        return el\r\n    } else if (el && value === '0' && el.stitcher && el.scaner === '' && el.jointer === '') {\r\n        return el\r\n    } else if (el && value === '-1' && el.stitcher === '') {\r\n        return el\r\n    }\r\n}\r\nexport const stitchDateFilter = function (value,el){\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && el.stitchDate.indexOf(value)!==-1) {\r\n        return el\r\n    }\r\n}\r\nexport const scanerFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === el.scaner) {\r\n        return el\r\n    } else if (el && value === '0' && el.scaner && el.jointer === '') {\r\n        return el\r\n    } else if (el && value === '-1' && el.scaner === '') {\r\n        return el\r\n    }\r\n}\r\nexport const scanerDateStartFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && el.scanDateStart.indexOf(value)!==-1) {\r\n        return el\r\n    }\r\n}\r\nexport const scanerDateFinishFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && el.scanDateFinish.indexOf(value)!==-1) {\r\n        return el\r\n    }\r\n}\r\nexport const jointerFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === el.jointer) {\r\n        return el\r\n    } else if (el && value === '0' && el.jointer !== ''&&el.isDone===false) {\r\n        return el\r\n    } else if (el && value === '-1' && el.jointer === '') {\r\n        return el\r\n    }\r\n}\r\nexport const jointDateFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && el.jointDate.indexOf(value)!==-1) {\r\n        return el\r\n    }\r\n}\r\nexport const isDoneFilter = function (value, el) {\r\n    if (el && value === '') {\r\n        return el\r\n    } else if (el && value === '0' && el.isDone) {\r\n        return el\r\n    } else if (el && value === '-1' && el.isDone === false) {\r\n        return el\r\n    }  else if (el && el.isDoneDate.indexOf(value)!==-1) {\r\n        return el\r\n    }\r\n}\r\n\r\nexport const applyFilters = function (filters, filtredElement) {\r\n    filtredElement = indexFilter(filters.index, filtredElement);\r\n    filtredElement = adressFilter(filters.adress, filtredElement);\r\n    filtredElement = idFilter(filters.id, filtredElement);\r\n    filtredElement = actFilter(filters.act, filtredElement);\r\n    filtredElement = stitcherFilter(filters.stitcher, filtredElement);\r\n    filtredElement = stitchDateFilter(filters.stitchDate,filtredElement)\r\n    filtredElement = scanerFilter(filters.scaner, filtredElement);\r\n    filtredElement = scanerDateStartFilter(filters.scanerDateStart,filtredElement)\r\n    filtredElement = scanerDateFinishFilter(filters.scanerDateFinish,filtredElement)\r\n    filtredElement = jointerFilter(filters.jointer, filtredElement);\r\n    filtredElement = jointDateFilter(filters.jointDate,filtredElement)\r\n    filtredElement = isDoneFilter(filters.isDone, filtredElement);\r\n    return filtredElement\r\n}\r\nexport const setDateToChoosen = function (choosen_cases, operation, date) {\r\n    choosen_cases.forEach((el) => {\r\n        if (operation === \"stitcher\") {\r\n            el.stitchDate = date;\r\n        } else if (operation === \"scaner\") {\r\n            el.scanDate = date;\r\n        } else if (operation === \"jointer\") {\r\n            el.jointDate = date;\r\n        }\r\n    })\r\n}\r\nexport const request_casesForSearch = async function (userhash) {\r\n\r\n    let response = await fetch(`${serverURL}casesForSearch`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\nexport const post_done_cases = async function (userhash, caseList) {\r\n    let casesWithNoCirillic = caseList.map((el) => {\r\n        delete el.street;\r\n        delete el.adress;\r\n        return el;\r\n    })\r\n    let response = await fetch(`${serverURL}handOverCases`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n            \"changedCases\": JSON.stringify(casesWithNoCirillic),\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        return await response.json()\r\n    } else {\r\n        alert(response.status + 'не удалось отправить данные на сервер')\r\n        return undefined\r\n    }\r\n}\r\nexport const reset_userstats = async function (userhash) {\r\n    let response = await fetch(`${serverURL}resetUserStats`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        },\r\n    });\r\n    if (response.ok) {\r\n        return response.json()\r\n    } else {\r\n        alert(response.status + 'не удалось отправить данные на сервер')\r\n    }\r\n}\r\n\r\nexport const request_projectStats = async function (userhash) {\r\n\r\n    let response = await fetch(`${serverURL}projectStats`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\nexport const request_userStats = async function (userhash) {\r\n\r\n    let response = await fetch(`${serverURL}getUsersStats`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\nexport const request_userStatsByActs = async function(userhash){\r\n    let response = await fetch(`${serverURL}getUsersStatsByActs`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n            \"statsOperation\":\"stitcher\"\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\nexport const getMomentFromDateString = function (dateString) {\r\n    let splitDate = dateString.split(' ')\r\n    let stringDay = splitDate[1];\r\n    let day = parseInt(stringDay.replace(/[^\\d]/g, ''))\r\n    let month = splitDate[0]\r\n    let year = splitDate[2]\r\n    let finishDate = moment().date(day)\r\n    finishDate.month(month)\r\n    finishDate.year(Number(20 + '' + year));\r\n    finishDate.startOf(\"day\");\r\n    return finishDate\r\n}\r\nexport const post_new_user = function (userhash, newUser) {\r\n    if (newUser.id !== '' && newUser.userhash !== '' && newUser.name !== '') {\r\n        let xhr = new XMLHttpRequest(); // 2. Настраиваем его: GET-запрос по URL /article/.../load\r\n\r\n        xhr.open('POST', `${serverURL}createNewUser`, true);\r\n        xhr.setRequestHeader(\"userhash\", userhash);\r\n        xhr.setRequestHeader('Content-type', 'application/json');\r\n        xhr.send(JSON.stringify(newUser))\r\n        xhr.onload = function() {\r\n            alert(`ОТВЕТ:  ${xhr.response}`);\r\n        };\r\n    } else {\r\n        alert(\"заполните все необходимые поля\")\r\n    }\r\n}\r\nexport const deleteUser=  function(userhash,userToDelete){\r\n    if (userToDelete!== '' ) {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('GET', `${serverURL}deleteUser`, true);\r\n        xhr.setRequestHeader(\"userhash\", userhash);\r\n        xhr.setRequestHeader(\"userToDelete\",userToDelete);\r\n        xhr.send();\r\n        xhr.onload = function() {\r\n            alert(`ОТВЕТ:  ${xhr.response}`);\r\n        };\r\n    } else {\r\n        alert(\"заполните все необходимые поля\")\r\n    }\r\n}\r\nexport const getCaseFromServer=async function(userhash,caseToChange){\r\n\r\n    let response = await fetch(`${serverURL}getCaseToHardChange`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n            \"caseToChange\":caseToChange,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\n\r\nexport const postHardChange = function (userhash, hardChangeCase) {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('POST', `${serverURL}postHardChangeCase`, true);\r\n    xhr.setRequestHeader(\"userhash\", userhash);\r\n    xhr.setRequestHeader('Content-type', 'application/json');\r\n    xhr.send(JSON.stringify(hardChangeCase))\r\n    xhr.onload = function () {\r\n        alert(`ОТВЕТ:  ${xhr.response}`);\r\n    };\r\n}\r\nexport const getOperationStats=async function(userhash,statsOperation){\r\n    let response = await fetch(`${serverURL}getUsersStats2`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"userhash\": userhash,\r\n            \"statsOperation\":statsOperation,\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        let requestedData = await response.json()\r\n        return requestedData\r\n    } else {\r\n        alert(response.status)\r\n    }\r\n}\r\n\r\nexport const getCurrentMonth = function (dateStats,neededMonth){\r\n    let m_neededMonth = moment().month(Number(neededMonth)-1);\r\n\r\n    let currentMonthDates = {};\r\n    for (let day in dateStats) {\r\n        let date = getMomentFromDateString(day)\r\n        if(m_neededMonth.isSame(date, 'month')){\r\n            currentMonthDates[day]=dateStats[day]\r\n        }\r\n    }\r\n    return currentMonthDates\r\n}\r\n","const SET_CURRENT_NAV = 'SET_CURRENT_NAV';\r\nconst SET_USERHASH = 'SET_USERHASH';\r\nconst USERHASH_REQUEST = \"USERHASH_REQUEST\";\r\nconst USERHASH_RESPONSE = 'USERHASH_RESPONSE';\r\nconst CHOOSE_CASE = 'CHOOSE_CASE';\r\nconst POST_CHANGES = 'POST_CHANGES';\r\nconst UNCHOOSE_CASE = 'UNCHOOSE_CASE';\r\nconst SET_SCAN_NUMBER = 'SET_SCAN_NUMBER';\r\nconst SET_SCAN_PAGES = 'SET_SCAN_PAGES';\r\nconst SET_FILTER_INDEX = 'SET_FILTER_INDEX';\r\nconst SET_FILTER_ADRESS = 'SET_FILTER_ADRESS';\r\nconst SET_FILTER_ACT = 'SET_FILTER_ACT';\r\nconst SET_FILTER_ID = 'SET_FILTER_ID';\r\nconst CHANGE_ADMIN_OPERATION = 'CHANGE_ADMIN_OPERATION';\r\nconst SET_DATE_DAY = 'SET_DATE_DAY';\r\nconst GET_CASESFORSEARCH = 'GET_CASESFORSEARCH';\r\nconst PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST = 'PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST';\r\nconst POST_ISDONE_CASES = 'POST_ISDONE_CASES';\r\nconst SET_FILTER_STITCHER = 'SET_FILTER_STITCHER';\r\nconst SET_FILTER_STITCHDATE='SET_FILTER_STITCHDATE';\r\nconst SET_FILTER_SCANER = 'SET_FILTER_SCANER';\r\nconst SET_FILTER_SCANERSTARTDATE = 'SET_FILTER_SCANERSTARTDATE';\r\nconst SET_FILTER_SCANERFINISHDATE = 'SET_FILTER_SCANERFINISHDATE';\r\nconst SET_FILTER_JOINTER = 'SET_FILTER_JOINTER';\r\nconst SET_FILTER_JOINTDATE = 'SET_FILTER_JOINTDATE';\r\nconst RESET_USERSTATS = 'RESET_USERSTATS';\r\nconst SET_FILTER_ISDONE='SET_FILTER_ISDONE';\r\nconst GET_PROJECT_STATS='GET_PROJECT_STATS';\r\nconst GET_USERSTATS = 'GET_USERSTATS';\r\nconst SWITCH_VIEW_MODE='SWITCH_VIEW_MODE';\r\nconst SET_NEWUSER_NAME='SET_NEWUSER_NAME';\r\nconst SET_NEWUSER_USERHASH='SET_NEWUSER_USERHASH';\r\nconst SET_NEWUSER_ID='SET_NEWUSER_ID';\r\nconst SET_NEWUSER_OPERATION='SET_NEWUSER_OPERATION';\r\nconst SET_NEWUSER_ISADMIN='SET_NEWUSER_ISADMIN';\r\nconst POST_NEWUSER='POST_NEWUSER';\r\nconst SET_USER_TODELETE='SET_USER_TODELETE';\r\nconst POST_USER_DELETE='POST_USER_DELETE';\r\nconst GET_CASEFROMSERVER='GET_CASEFROMSERVER';\r\nconst SET_CASETOGET='SET_CASETOGET';\r\nconst SET_HARDCHANGE_JOINTER='SET_HARDCHANGE_JOINTER';\r\nconst SET_HARDCHANGE_STITCHER='SET_HARDCHANGE_STITCHER';\r\nconst SET_HARDCHANGE_SCANER='SET_HARDCHANGE_SCANER';\r\nconst POST_HARDCHANGE='POST_HARDCHANGE';\r\nconst GET_USERSTATS2='GET_USERSTATS2';\r\nconst SWITCH_STATSOPERATION='SWITCH_STATSOPERATION';\r\nconst PROJECT_STATS_SET_PAGES_VISIBLE='PROJECT_STATS_SET_PAGES_VISIBLE';\r\nconst GET_USERSTATS_BYACTS = 'GET_USERSTATS_BYACTS';\r\n\r\n\r\nexport const setCurrentNav_action = (button_nav) => ({\r\n    type: SET_CURRENT_NAV,\r\n    nav: button_nav,\r\n})\r\nexport const set_userhash_action = (userhash) => ({\r\n    type: SET_USERHASH,\r\n    userhash: userhash,\r\n})\r\nexport const userHash_request_action = () => ({\r\n    type: USERHASH_REQUEST,\r\n})\r\nexport const userHash_response_action = () => ({\r\n    type: USERHASH_RESPONSE,\r\n})\r\nexport const choose_case_action = (index) => ({\r\n    type: CHOOSE_CASE,\r\n    index: index,\r\n})\r\nexport const unchoose_case_action = (index) => ({\r\n    type: UNCHOOSE_CASE,\r\n    index: index,\r\n})\r\nexport const post_changes_action = () => ({\r\n    type: POST_CHANGES,\r\n})\r\nexport const set_scan_number_action = (index, value) => ({\r\n    type: SET_SCAN_NUMBER,\r\n    value: value,\r\n    index: index,\r\n})\r\nexport const set_scan_pages_action = (index, value) => ({\r\n    type: SET_SCAN_PAGES,\r\n    value: value,\r\n    index: index,\r\n})\r\nexport const set_filter_index_action = (value) => ({\r\n    type: SET_FILTER_INDEX,\r\n    value: value,\r\n})\r\nexport const set_filter_adress_action = (value) => ({\r\n    type: SET_FILTER_ADRESS,\r\n    value: value,\r\n})\r\nexport const set_filter_act_action = (value) => ({\r\n    type: SET_FILTER_ACT,\r\n    value: value,\r\n})\r\nexport const set_filter_id_action = (value) => ({\r\n    type: SET_FILTER_ID,\r\n    value: value,\r\n})\r\nexport const set_filter_stitcher_action=(value)=>({\r\n    type:SET_FILTER_STITCHER,\r\n    value:value,\r\n})\r\nexport const set_filter_stitchDate_action=(value)=>({\r\n    type: SET_FILTER_STITCHDATE,\r\n    value:value,\r\n})\r\nexport const set_filter_scaner_action=(value)=>({\r\n    type:SET_FILTER_SCANER,\r\n    value:value,\r\n})\r\nexport const set_filter_scanerStartDate_action = (value)=>({\r\n    type: SET_FILTER_SCANERSTARTDATE,\r\n    value:value,\r\n})\r\nexport const set_filter_scanerFinishDate_action =(value)=>({\r\n    type:SET_FILTER_SCANERFINISHDATE,\r\n    value:value,\r\n})\r\nexport const set_filter_jointer_action=(value)=>({\r\n    type:SET_FILTER_JOINTER,\r\n    value:value,\r\n})\r\nexport const set_filter_jointDate_action=(value)=>({\r\n    type:SET_FILTER_JOINTDATE,\r\n    value:value,\r\n})\r\nexport const set_filter_isDone_action=(value)=>({\r\n    type: SET_FILTER_ISDONE,\r\n    value:value,\r\n})\r\nexport const change_admin_operation_action=(value)=>({\r\n    type: CHANGE_ADMIN_OPERATION,\r\n    value:value,\r\n})\r\nexport const set_date_day_action=(value)=>({\r\n    type: SET_DATE_DAY,\r\n    value:value,\r\n})\r\nexport const get_casesForSearch_action=()=>({\r\n    type: GET_CASESFORSEARCH,\r\n});\r\nexport const push_filtredByIndex_to_handOverCasesList_action=()=>({\r\n    type: PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST,\r\n})\r\nexport const post_done_cases_action=()=>({\r\n    type:POST_ISDONE_CASES,\r\n})\r\nexport const reset_userStats_action=()=>({\r\n    type: RESET_USERSTATS,\r\n})\r\nexport const get_projectStats_action=()=>({\r\n   type: GET_PROJECT_STATS,\r\n});\r\nexport const get_userStats_action=()=>({\r\n    type: GET_USERSTATS,\r\n})\r\nexport const get_userStatsByActs_action=()=>({\r\n    type: GET_USERSTATS_BYACTS,\r\n})\r\nexport const switchViewMode_action=(value)=>({\r\n    type: SWITCH_VIEW_MODE,\r\n    value: value,\r\n})\r\nexport const set_newUser_name_action=(value)=>({\r\n    type: SET_NEWUSER_NAME,\r\n    value: value,\r\n\r\n})\r\nexport const set_newUser_userhash_action=(value)=>({\r\n    type: SET_NEWUSER_USERHASH,\r\n    value:value,\r\n})\r\nexport const set_newUser_id_action=(value)=>({\r\n    type: SET_NEWUSER_ID,\r\n    value:value,\r\n})\r\nexport const set_newUser_operation_action=(value)=>({\r\n    type: SET_NEWUSER_OPERATION,\r\n    value: value,\r\n})\r\nexport const set_newUser_isAdmin_action=(value)=>({\r\n    type: SET_NEWUSER_ISADMIN,\r\n    value:value,\r\n})\r\nexport const post_newUser_action=()=>({\r\n    type: POST_NEWUSER,\r\n})\r\nexport const set_userToDelete_action=(value)=>({\r\n    type: SET_USER_TODELETE,\r\n    value: value\r\n})\r\nexport const post_deleteUser_action=()=>({\r\n    type: POST_USER_DELETE,\r\n})\r\nexport const get_caseFromServer_action=()=>({\r\n    type: GET_CASEFROMSERVER,\r\n})\r\nexport const set_caseToGet_action=(value)=>({\r\n    type: SET_CASETOGET,\r\n    value:value,\r\n})\r\nexport const set_hardChange_scaner_action=(value)=>({\r\n    type: SET_HARDCHANGE_SCANER,\r\n    value:value,\r\n})\r\nexport const set_hardChange_stitcher_action=(value)=>({\r\n    type: SET_HARDCHANGE_STITCHER,\r\n    value:value,\r\n})\r\nexport const set_hardChange_jointer_action=(value)=>({\r\n    type: SET_HARDCHANGE_JOINTER,\r\n    value:value,\r\n})\r\nexport const post_hardChange_action=()=>({\r\n    type: POST_HARDCHANGE,\r\n})\r\nexport const get_userStats2_action=(value)=>({\r\n    type: GET_USERSTATS2,\r\n    value: value,\r\n})\r\nexport const switchStatsOperation_action=(value)=>({\r\n    type: SWITCH_STATSOPERATION,\r\n    value: value\r\n})\r\nexport const setPagesVisible_action=()=>({\r\n    type: PROJECT_STATS_SET_PAGES_VISIBLE\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    change_admin_operation,\r\n    dayJoiner, deleteUser, getCaseFromServer, getOperationStats,\r\n    post_case_changes, post_done_cases, post_new_user, postHardChange, request_casesForSearch,\r\n    request_operator_cases, request_projectStats, request_userStats, request_userStatsByActs, reset_userstats,\r\n    setDateToChoosen\r\n} from \"../Functions\";\r\nimport {userHash_response_action} from \"../Actions\";\r\nimport store from \"../redux-store\";\r\nimport moment from 'moment';\r\n\r\nconst SET_CURRENT_NAV = 'SET_CURRENT_NAV';\r\nconst SET_USERHASH = 'SET_USERHASH';\r\nconst USERHASH_REQUEST = 'USERHASH_REQUEST';\r\nconst USERHASH_RESPONSE = 'USERHASH_RESPONSE';\r\nconst CHOOSE_CASE = 'CHOOSE_CASE';\r\nconst POST_CHANGES = 'POST_CHANGES';\r\nconst UNCHOOSE_CASE = 'UNCHOOSE_CASE';\r\nconst SET_SCAN_NUMBER = 'SET_SCAN_NUMBER';\r\nconst SET_SCAN_PAGES = 'SET_SCAN_PAGES';\r\nconst SET_FILTER_INDEX = 'SET_FILTER_INDEX';\r\nconst SET_FILTER_ADRESS = 'SET_FILTER_ADRESS';\r\nconst SET_FILTER_ACT = 'SET_FILTER_ACT';\r\nconst SET_FILTER_ID = 'SET_FILTER_ID';\r\nconst CHANGE_ADMIN_OPERATION = 'CHANGE_ADMIN_OPERATION';\r\nconst SET_DATE_DAY = 'SET_DATE_DAY';\r\nconst GET_CASESFORSEARCH = 'GET_CASESFORSEARCH';\r\nconst PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST = 'PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST';\r\nconst POST_ISDONE_CASES = 'POST_ISDONE_CASES';\r\nconst SET_FILTER_STITCHER = 'SET_FILTER_STITCHER';\r\nconst SET_FILTER_STITCHDATE='SET_FILTER_STITCHDATE';\r\nconst RESET_USERSTATS = 'RESET_USERSTATS';\r\nconst SET_FILTER_SCANER = 'SET_FILTER_SCANER';\r\nconst SET_FILTER_SCANERSTARTDATE = 'SET_FILTER_SCANERSTARTDATE';\r\nconst SET_FILTER_SCANERFINISHDATE = 'SET_FILTER_SCANERFINISHDATE';\r\nconst SET_FILTER_JOINTER = 'SET_FILTER_JOINTER';\r\nconst SET_FILTER_JOINTDATE = 'SET_FILTER_JOINTDATE';\r\nconst SET_FILTER_ISDONE = 'SET_FILTER_ISDONE';\r\nconst GET_PROJECT_STATS = 'GET_PROJECT_STATS';\r\nconst GET_USERSTATS = 'GET_USERSTATS';\r\nconst SWITCH_VIEW_MODE = 'SWITCH_VIEW_MODE';\r\nconst SET_NEWUSER_NAME = 'SET_NEWUSER_NAME';\r\nconst SET_NEWUSER_USERHASH = 'SET_NEWUSER_USERHASH';\r\nconst SET_NEWUSER_ID = 'SET_NEWUSER_ID';\r\nconst SET_NEWUSER_OPERATION = 'SET_NEWUSER_OPERATION';\r\nconst SET_NEWUSER_ISADMIN = 'SET_NEWUSER_ISADMIN';\r\nconst POST_NEWUSER = 'POST_NEWUSER';\r\nconst SET_USER_TODELETE = 'SET_USER_TODELETE';\r\nconst POST_USER_DELETE = 'POST_USER_DELETE';\r\nconst SET_CASETOGET = 'SET_CASETOGET';\r\nconst GET_CASEFROMSERVER = 'GET_CASEFROMSERVER';\r\nconst SET_HARDCHANGE_JOINTER = 'SET_HARDCHANGE_JOINTER';\r\nconst SET_HARDCHANGE_STITCHER = 'SET_HARDCHANGE_STITCHER';\r\nconst SET_HARDCHANGE_SCANER = 'SET_HARDCHANGE_SCANER';\r\nconst POST_HARDCHANGE = 'POST_HARDCHANGE';\r\nconst SWITCH_STATSOPERATION=\"SWITCH_STATSOPERATION\";\r\nconst PROJECT_STATS_SET_PAGES_VISIBLE=\"PROJECT_STATS_SET_PAGES_VISIBLE\";\r\nconst GET_USERSTATS_BYACTS='GET_USERSTATS_BYACTS';\r\n\r\nconst initialState = {\r\n    operator_cases: {\r\n        isFetching: false,\r\n        data: [],\r\n    },\r\n    casesForSearch: {\r\n        isFetching: false,\r\n        data: [],\r\n    },\r\n    casesForHandOver: [],\r\n    date: '',\r\n    choosen_cases: [],\r\n    filters: {\r\n        index: '',\r\n        adress: '',\r\n        act: '',\r\n        id: '',\r\n        stitcher: '',\r\n        stitchDate:'',\r\n        scaner: '',\r\n        scanerDateStart:'',\r\n        scanerDateFinish:'',\r\n        jointer: '',\r\n        jointDate:'',\r\n        isDone: '',\r\n    },\r\n    projectStats: {},\r\n    viewMode: 'total',\r\n    statsOperation:'stitcher',\r\n\r\n    currentNav: 'auth',\r\n    userhash: '',\r\n    userInfo: {\r\n        isAdmin: false,\r\n    },\r\n    newUser: {\r\n        id: '',\r\n        userhash: '',\r\n        name: '',\r\n        operation: 'jointer',\r\n        isAdmin: false,\r\n    },\r\n    userToDelete: '',\r\n    dateUsersStats:{},\r\n    hardChangeToCase: {\r\n        id: '',\r\n        index: '',\r\n        act: '',\r\n        street: '',\r\n        adress: '',\r\n        incomeDate: '',\r\n        expectedPages: '',\r\n\r\n        stitchDate: '',\r\n        stitcher: '',\r\n\r\n        scanDateStart: '',\r\n        scanDateFinish: '',\r\n        scaner: '',\r\n        pages: '',\r\n        scanNumber: '',\r\n\r\n        jointDate: '',\r\n        jointer: '',\r\n\r\n        comment: '',\r\n        isDone: '',\r\n        isDoneDate: ''\r\n    },\r\n    projectStats_pagesVisible:false,\r\n}\r\n\r\n\r\nconst main_reducer = function (state, action) {\r\n    if (state) {\r\n        switch (action.type) {\r\n\r\n            case SET_CURRENT_NAV:\r\n                state.currentNav = action.nav;  //change nav\r\n                break;\r\n\r\n            case SET_USERHASH:\r\n                state.userhash = action.userhash                 //set user-hash from first-screen input\r\n                break;\r\n\r\n            case USERHASH_REQUEST:\r\n                state.currentNav = \"work\";                                                  // request start data from server\r\n                state.operator_cases.isFetching = true;\r\n                request_operator_cases(state.userhash).then((data) => {\r\n                    state.userInfo = data.userInfo\r\n                    state.operator_cases.data = data.casesForUser.map((el) => {\r\n                        el.choosen = false\r\n                        return el\r\n                    });\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n                break;\r\n\r\n            case USERHASH_RESPONSE:\r\n                state.operator_cases.isFetching = false\r\n                state.casesForSearch.isFetching = false\r\n                break;\r\n\r\n            case CHOOSE_CASE:                                                               // отобрать дело\r\n                state.operator_cases.data.map((el) => {\r\n                    if (el.index === action.index) {\r\n                        let choosenIsExist = state.choosen_cases.find((choosen_el) => {\r\n                            return choosen_el.index === el.index\r\n                        })\r\n                        if (!choosenIsExist) {\r\n                            state.choosen_cases.push(el);\r\n                            el.choosen = true\r\n                            state.filters.index = '';\r\n                        } else {\r\n                            alert(\"Нельзя выбрать одно дело дважды\")\r\n                        }\r\n\r\n                    }\r\n                })\r\n                console.log(state.choosen_cases)\r\n                break;\r\n\r\n            case UNCHOOSE_CASE:                                                             // отменить выбранное дело.\r\n                state.operator_cases.data.map((el) => {\r\n                    if (el.index === action.index) {\r\n                        el.choosen = false\r\n                    }\r\n                })\r\n                state.choosen_cases = state.choosen_cases.filter((el) => el.index !== action.index);\r\n                console.log(state.choosen_cases)\r\n                break;\r\n\r\n            case SET_FILTER_INDEX:                                                                  //фильтры\r\n                state.filters.index = action.value\r\n                break;\r\n\r\n            case SET_FILTER_ADRESS:\r\n                state.filters.adress = action.value\r\n                break;\r\n            case SET_FILTER_ACT:\r\n                state.filters.act = action.value\r\n                break;\r\n            case SET_FILTER_ID:\r\n                state.filters.id = action.value\r\n                break;\r\n            case SET_FILTER_STITCHER:\r\n                state.filters.stitcher = action.value\r\n                break;\r\n            case SET_FILTER_STITCHDATE:\r\n                state.filters.stitchDate=action.value\r\n                break;\r\n            case SET_FILTER_SCANER:\r\n                state.filters.scaner = action.value\r\n                break;\r\n            case SET_FILTER_SCANERSTARTDATE:\r\n                state.filters.scanerDateStart = action.value\r\n                break;\r\n            case SET_FILTER_SCANERFINISHDATE:\r\n                state.filters.scanerDateFinish = action.value\r\n                break;\r\n            case SET_FILTER_JOINTER:\r\n                state.filters.jointer = action.value\r\n                break;\r\n            case SET_FILTER_JOINTDATE:\r\n                state.filters.jointDate = action.value\r\n                break;\r\n            case SET_FILTER_ISDONE:\r\n                state.filters.isDone = action.value\r\n                break;\r\n\r\n            case SET_SCAN_NUMBER:                                                               // вписать сканировочный индекс в дело\r\n                state.operator_cases.data.map((el) => {\r\n                    if (el.index === action.index) {\r\n                        el.scanNumber = action.value\r\n                    }\r\n                })\r\n                break;\r\n\r\n            case SET_SCAN_PAGES:                                                           //вписать количество страниц в дело\r\n                state.operator_cases.data.map((el) => {\r\n                    if (el.index === action.index) {\r\n                        el.pages = action.value\r\n                    }\r\n                })\r\n                break;\r\n\r\n            case SET_DATE_DAY:\r\n                if (action.value.length < 6) {\r\n                    if (action.value !== '') {\r\n                        let split = action.value.split('.')\r\n                        let day = split[0];\r\n                        let date = moment().date(day)\r\n                        if (split[1]) {\r\n                            console.log(split[1])\r\n                            date.month(Number(split[1]) - 1)\r\n                        }\r\n                        date = date.format(\"MMM Do YY\");\r\n                        console.log(date)\r\n                        state.date = date;\r\n                    } else {\r\n                        state.date = ''\r\n                    }\r\n                }\r\n                break;\r\n\r\n\r\n            case POST_CHANGES:                                                                //передать список отобраных дел на сервер\r\n                setDateToChoosen(state.choosen_cases,\r\n                    state.userInfo[\"operation\"],\r\n                    state.date);\r\n\r\n                state.operator_cases.isFetching = true;\r\n                state.operator_cases.data = [];\r\n                post_case_changes(state.userhash, state.choosen_cases).then((data) => {\r\n                    if (data.casesForUser) {\r\n                        state.operator_cases.data = data.casesForUser.map((el) => {\r\n                            el.choosen = false\r\n                            return el\r\n                        });\r\n                        state.choosen_cases = [];\r\n                    }\r\n                    state.userInfo = data.userInfo;\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n                break;\r\n\r\n\r\n            case CHANGE_ADMIN_OPERATION:\r\n                change_admin_operation(state.userhash, action.value).then((data) => {\r\n                    if (data.casesForUser) {\r\n                        state.operator_cases.data = data.casesForUser.map((el) => {\r\n                            el.choosen = false\r\n                            return el\r\n                        });\r\n                        state.choosen_cases = [];\r\n                    }\r\n                    state.userInfo = data.userInfo;\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n                break;\r\n\r\n            case GET_CASESFORSEARCH:                                                // request start data from server\r\n                state.casesForSearch.isFetching = true;\r\n                request_casesForSearch(state.userhash).then((data) => {\r\n                    state.casesForSearch.data = data.casesForSearch\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n\r\n                break;\r\n            case PUSH_FILTREDBYINDEX_TO_HANDOVERCASESLIST:\r\n                state.casesForSearch.data.map((el) => {\r\n                    if (el.index === state.filters.index) {\r\n                        let choosenIsExist = state.casesForHandOver.find((existCase) => {\r\n                            return existCase.index === state.filters.index\r\n                        })\r\n                        if (!choosenIsExist) {\r\n                            state.casesForHandOver.push(el)\r\n                            state.filters.index = '';\r\n                        } else {\r\n                            alert(\"нельзя добавить в список дважды\")\r\n                        }\r\n\r\n                    }\r\n                })\r\n                console.log(state.casesForHandOver)\r\n\r\n\r\n                break;\r\n\r\n            case POST_ISDONE_CASES:\r\n                state.casesForSearch.isFetching = true;\r\n                post_done_cases(state.userhash, state.casesForHandOver).then((data) => {\r\n                    if (data.wrongCaseList) {\r\n                        state.casesForHandOver = [];\r\n                        data.wrongCaseList.forEach((el) => {\r\n                            state.casesForHandOver.push(el);\r\n                        })\r\n                    }\r\n                    state.userInfo = data.userInfo;\r\n                    store.dispatch(userHash_response_action())\r\n                });\r\n                console.log(\"post isDone_cases\");\r\n                break;\r\n\r\n            case RESET_USERSTATS:\r\n                reset_userstats(state.userhash).then((data) => {\r\n                    alert(data[0])\r\n                })\r\n                break;\r\n\r\n            case GET_PROJECT_STATS:\r\n                request_projectStats(state.userhash).then((data) => {\r\n                    state.projectStats = data;\r\n\r\n\r\n                    store.dispatch(userHash_response_action())\r\n                })\r\n                break;\r\n            case GET_USERSTATS:\r\n                request_userStats(state.userhash).then((data) => {\r\n                    state.usersStats = data;\r\n                    store.dispatch(userHash_response_action())\r\n                })\r\n                break;\r\n            case GET_USERSTATS_BYACTS:\r\n                request_userStatsByActs(state.userhash).then((data)=>{\r\n                    state.userStatsByActs=data\r\n                    alert(data);\r\n                    store.dispatch(userHash_response_action())\r\n                })\r\n\r\n            case SWITCH_VIEW_MODE:\r\n                state.viewMode = action.value\r\n                break;\r\n\r\n            case SET_NEWUSER_NAME:\r\n                state.newUser.name = action.value\r\n                break;\r\n\r\n            case SET_NEWUSER_USERHASH:\r\n                state.newUser.userhash = action.value\r\n                break;\r\n\r\n            case SET_NEWUSER_ID:\r\n                state.newUser.id = action.value\r\n                break;\r\n\r\n            case SET_NEWUSER_OPERATION:\r\n                state.newUser.operation = action.value;\r\n                break;\r\n\r\n            case SET_NEWUSER_ISADMIN:\r\n                if (action.value === 'true') {\r\n                    state.newUser.isAdmin = true\r\n                } else if (action.value === 'false') {\r\n                    state.newUser.isAdmin = false\r\n                } else {\r\n                    alert(\"troubles with set_newUser_isAdmin in reducer\")\r\n                }\r\n                break;\r\n\r\n            case POST_NEWUSER:\r\n                post_new_user(state.userhash, state.newUser)\r\n                state.newUser.name = '';\r\n                state.newUser.id = '';\r\n                state.newUser.userhash = '';\r\n                break;\r\n\r\n            case SET_USER_TODELETE:\r\n                state.userToDelete = action.value;\r\n                break;\r\n\r\n            case POST_USER_DELETE:\r\n                deleteUser(state.userhash, state.userToDelete);\r\n                state.userToDelete = '';\r\n                break;\r\n\r\n            case SET_CASETOGET:\r\n                state.hardChangeToCase.id = action.value\r\n                console.log(state.hardChangeToCase);\r\n                break;\r\n\r\n            case GET_CASEFROMSERVER:\r\n                getCaseFromServer(state.userhash, state.hardChangeToCase.id).then((requestedCase) => {\r\n                        state.hardChangeToCase = requestedCase\r\n                        store.dispatch(userHash_response_action())\r\n\r\n                    }\r\n                )\r\n                break;\r\n\r\n            case  SET_HARDCHANGE_JOINTER:\r\n                state.hardChangeToCase.jointer = action.value\r\n                console.log(state.hardChangeToCase.jointer)\r\n                break;\r\n\r\n            case SET_HARDCHANGE_STITCHER:\r\n                state.hardChangeToCase.stitcher = action.value\r\n                console.log(state.hardChangeToCase.stitcher)\r\n                break;\r\n\r\n            case SET_HARDCHANGE_SCANER:\r\n                state.hardChangeToCase.scaner = action.value\r\n                console.log(state.hardChangeToCase.scaner)\r\n                break;\r\n\r\n            case POST_HARDCHANGE:\r\n                postHardChange(state.userhash, state.hardChangeToCase)\r\n                break;\r\n\r\n            case SWITCH_STATSOPERATION:\r\n                state.statsOperation=action.value;\r\n                getOperationStats(state.userhash,state.statsOperation).then((data)=>{\r\n                   state.dateUsersStats=data;\r\n                    store.dispatch(userHash_response_action())\r\n                })\r\n                break;\r\n            case PROJECT_STATS_SET_PAGES_VISIBLE:\r\n                state.projectStats_pagesVisible=!state.projectStats_pagesVisible\r\n                console.log(state.projectStats_pagesVisible)\r\n                break;\r\n\r\n        }\r\n        return state\r\n    } else\r\n        return initialState;\r\n}\r\n\r\nexport default main_reducer;","import {combineReducers, createStore} from \"redux\";\r\nimport main_reducer from \"./reducers/main_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    main: main_reducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './HeaderLink.module.css';\r\nimport {\r\n    get_casesForSearch_action,\r\n    get_projectStats_action,\r\n    get_userStats_action, get_userStatsByActs_action,\r\n    setCurrentNav_action\r\n} from \"../../../Global/Actions\";\r\n\r\n\r\n\r\nconst HeaderLink = function (props) {\r\n    let click = function () {\r\n        props.dispatch(setCurrentNav_action(props.nav))\r\n        if(props.nav===\"search\"||props.nav===\"handOver\"){\r\n            props.dispatch(get_casesForSearch_action(props.state.userhash))\r\n        }\r\n        if(props.nav===\"projectStats\"){\r\n            props.dispatch(get_projectStats_action(props.state.userhash))\r\n        }\r\n        if(props.nav===\"userStats\"){\r\n            props.dispatch(get_userStats_action(props.state.userhash))\r\n        }\r\n        if(props.nav===\"userStatsByActs\"){\r\n            props.dispatch(get_userStatsByActs_action(props.state.userhash))\r\n        }\r\n    }\r\n    const defineClass=function(){\r\n        let curClass='';\r\n        if(props.state.currentNav===props.nav){\r\n            curClass+=' '+s.activeLink\r\n        }else curClass+=' '+s.headerButton\r\n        if(props.onlyAdmin===true&&props.state.userInfo.isAdmin!==true){\r\n            curClass+=' '+s.invisible\r\n        }\r\n        return curClass\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.buttonWrapper}>\r\n            <button className={defineClass()}\r\n                    onClick={click}>\r\n                <b>{props.text}</b>\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default HeaderLink","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport headerIcon from \"../../img/logo.png\"\r\nimport HeaderLink from \"./HeaderLink/HeaderLink\";\r\n\r\nconst Header = function (props) {\r\n    return (\r\n        <div className={s.header_wrapper}>\r\n            <header className={s.header_container}>\r\n                <div className={s.header_leftSide}>\r\n\r\n                    <img className={`${s.icon} ${s.hoverElement}`}\r\n                         src={headerIcon}/>\r\n\r\n                    <div>\r\n                        <h4 className={`${s.headerText}`}>DIGITAL DOCS</h4>\r\n                    </div>\r\n                </div>\r\n                <div className={s.navbar}>\r\n                    <HeaderLink nav={'work'}\r\n                                text={'Обробка'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={false}/>\r\n                    <HeaderLink nav={'userStats'}\r\n                                text={'Користувачі'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                    <HeaderLink nav={'projectSettings'}\r\n                                text={'Проєкт'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                    <HeaderLink nav={'search'}\r\n                                text={'Пошук'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={false}/>\r\n                    <HeaderLink nav={'handOver'}\r\n                                text={'Сдати справи'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                    <HeaderLink nav={'projectStats'}\r\n                                text={'Статистика проєкту'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                    <HeaderLink nav={'userStats2'}\r\n                                text={'Статистика користувачів по дням'}\r\n                                dispatch={props.dispatch}\r\n                                state={props.state}\r\n                                onlyAdmin={true}/>\r\n                </div>\r\n            </header>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Header","import React from 'react';\r\nimport s from './AddButton.module.css';\r\nimport {choose_case_action} from \"../../../Global/Actions\";\r\n\r\nconst AddButton = function (props) {\r\n    const onclick=function(event){\r\n        props.dispatch(choose_case_action(props.el.index));\r\n        console.log('click')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.square}\r\n            onClick={onclick}>\r\n                +\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default AddButton","import React from 'react';\r\nimport s from './CaseString.module.css';\r\nimport AddButton from \"../addButton/AddButton\";\r\n\r\nconst CaseString = function (props) {\r\n    let el= props.datacase;\r\n    let adminButton=function(){\r\n        if(props.user.isAdmin){\r\n        return(<div className={s.cell}>\r\n            <AddButton dispatch={props.dispatch}\r\n                       el={props.datacase}/>\r\n        </div>\r\n        )}else return(<div className={s.cell}/>)\r\n    }\r\n    let defineClass = function(){\r\n        if(el.scanDateFinish===''&&el.scanDateStart){\r\n            return s.wrapperOnScan\r\n        }else return s.wrapper\r\n    }\r\n\r\n    return (\r\n        <div className={defineClass()}>\r\n            <div className={s.cell}>{el.act}</div>\r\n            <div className={s.cell}>{el.id}</div>\r\n            <div className={s.cell}>{el.street +'  '+ el.adress}</div>\r\n            {adminButton()}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CaseString","import React from 'react';\r\nimport s from './ChoosenString.module.css';\r\nimport {set_scan_number_action, set_scan_pages_action, unchoose_case_action} from \"../../../../Global/Actions\";\r\n\r\nconst ChoosenString = function (props) {\r\n    const deleteChoosenString = function (event) {\r\n        props.dispatch(unchoose_case_action(props.el.index))\r\n    }\r\n    const set_scanNumber = function (event) {\r\n        props.dispatch(set_scan_number_action(props.el.index, event.target.value))\r\n    }\r\n    const set_scanPages = function (event) {\r\n        props.dispatch(set_scan_pages_action(props.el.index, event.target.value))\r\n    }\r\n\r\n\r\n    if (props.user[\"operation\"] === \"stitcher\") {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <div className={s.smallcell}>\r\n                    <div className={s.cancelButton}\r\n                         onClick={deleteChoosenString}>\r\n                        <div>+</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n\r\n                    {props.el.act}\r\n                </div>\r\n                <div className={s.cell}>{props.el.id}</div>\r\n            </div>\r\n        )\r\n    } else if (props.user[\"operation\"] === \"scaner\") {\r\n        if(props.el.scanDateStart===''){\r\n            return (\r\n                <div className={s.wrapper}>\r\n                    <div className={s.smallcell}>\r\n                        <div className={s.cancelButton}\r\n                             onClick={deleteChoosenString}>\r\n                            <div>+</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.cell}>\r\n                        {props.el.act}\r\n                    </div>\r\n                    <div className={s.cell}>{props.el.id}</div>\r\n\r\n                    <div className={s.cell}>\r\n                        -----\r\n                    </div>\r\n                    <div className={s.cell}>\r\n                        {props.el.stitcher}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className={s.wrapper}>\r\n                    <div className={s.smallcell}>\r\n                        <div className={s.cancelButton}\r\n                             onClick={deleteChoosenString}>\r\n                            <div>+</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.cell}>\r\n                        {props.el.act}\r\n                    </div>\r\n                    <div className={s.cell}>{props.el.id}</div>\r\n\r\n                    <div className={s.cell}>\r\n                        <input className={s.input} type={'number'}\r\n                               onChange={set_scanNumber} value={props.el.scanNumber}/>\r\n                    </div>\r\n                    <div className={s.cell}>\r\n                        {props.el.stitcher}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n\r\n    } else if (props.user[\"operation\"] === \"jointer\") {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <div className={s.smallcell}>\r\n                    <div className={s.cancelButton}\r\n                         onClick={deleteChoosenString}>\r\n                        <div>+</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    {props.el.act}\r\n                </div>\r\n                <div className={s.cell}>{props.el.id}</div>\r\n                <div className={s.cell}>\r\n                    {props.el.pages}\r\n                </div>\r\n                <div className={s.cell}>\r\n                    {props.el.scanNumber}\r\n                </div>\r\n                <div className={s.cell}>\r\n                    {props.el.scaner}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default ChoosenString","import React from 'react';\r\nimport s from './PulseNumber.module.css';\r\n\r\nconst PulseNumber = function (props) {\r\n    let value=props.value\r\n    let classDisabler=function(){\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.pulseNumber}>\r\n            {value}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default PulseNumber","import React from 'react';\r\nimport s from './Choosen.module.css';\r\nimport ChoosenString from \"./ChoosenString/ChoosenString\";\r\nimport {post_changes_action, set_date_day_action} from \"../../../Global/Actions\";\r\nimport PulseNumber from \"./PulseNumber/PulseNumber\";\r\n\r\n\r\nconst Choosen = function (props) {\r\n    let content = function () {\r\n        return props.caseList.map((el) => {\r\n            return (\r\n                <div key={el.index}>\r\n                    <ChoosenString el={el}\r\n                                   user={props.user}\r\n                                   dispatch={props.dispatch}/>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    let defineHeader = function () {\r\n        if (props.user[\"operation\"] === \"stitcher\") {\r\n            return (\r\n                <div className={s.header}>\r\n                    <div className={s.smallcell}/>\r\n                    <div className={s.cell}>Акт</div>\r\n                    <div className={s.cell}>Номер справи</div>\r\n                </div>\r\n            )\r\n        } else if (props.user[\"operation\"] === \"scaner\") {\r\n            return (\r\n                <div className={s.header}>\r\n                    <div className={s.smallcell}/>\r\n                    <div className={s.cell}>Акт</div>\r\n                    <div className={s.cell}>Номер справи</div>\r\n                    <div className={s.cell}>Індекс</div>\r\n                    <div className={s.cell}>Розшив</div>\r\n                </div>\r\n            )\r\n        } else if (props.user[\"operation\"] === \"jointer\") {\r\n            return (\r\n                <div className={s.header}>\r\n                    <div className={s.smallcell}/>\r\n                    <div className={s.cell}>Акт</div>\r\n                    <div className={s.cell}>Номер справи</div>\r\n                    <div className={s.cell}>Сторінок</div>\r\n                    <div className={s.cell}>Індекс</div>\r\n                    <div className={s.cell}>Сканувальник</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    let postChanges = function () {\r\n\r\n        let indexNotSet = props.caseList.find((el) => {\r\n            return el.scanNumber === '' && el.scanDateStart !== ''\r\n        })\r\n        if (!indexNotSet) {\r\n            props.dispatch(post_changes_action())\r\n        } else alert(\"Усі індекси мають бути заповнені\")\r\n\r\n    }\r\n    let emptyClick = function () {\r\n        alert(\"no cases to change\")\r\n    }\r\n    let set_date_day = function (event) {\r\n        props.dispatch(set_date_day_action(event.target.value))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {defineHeader()}\r\n            <div className={s.body}>\r\n                {content()}\r\n            </div>\r\n            <div className={s.footer}>\r\n                <div className={props.isFetching ? s.hideButton : s.postButton}\r\n                     onClick={props.caseList.length > 0 ? postChanges : emptyClick}>Відправити\r\n                </div>\r\n                <div>Справ відібрано :\r\n                    <PulseNumber className={s.pulseNumber} value={props.caseList.length} key={\"choosenCounter-pulseNumber\" + props.caseList.length}/>\r\n                </div>\r\n                <div>Дата : {props.date}\r\n                    <input\r\n\r\n                        className={s.input}\r\n                        type={'number'}\r\n                        placeholder={\"день месяца\"}\r\n                        onChange={set_date_day}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Choosen","import React from 'react';\r\nimport s from './WorkScreen.module.css';\r\nimport CaseString from \"./CaseString/CaseString\";\r\nimport Choosen from \"./Choosen/Choosen\";\r\nimport {actFilter, adressFilter, applyFilters, idFilter, indexFilter} from \"../../Global/Functions\";\r\nimport {\r\n    change_admin_operation_action, choose_case_action,\r\n    set_filter_act_action,\r\n    set_filter_adress_action,\r\n    set_filter_id_action,\r\n    set_filter_index_action\r\n} from \"../../Global/Actions\";\r\n\r\n\r\nconst WorkScreen = function (props) {\r\n\r\n    const addCaseToChoosen = function (event) {\r\n        if (event.key === \"Enter\") {\r\n            console.log(event.target.value)\r\n            props.dispatch(choose_case_action(event.target.value));\r\n        }\r\n        if (event.key === \",\") {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    let casesToView = 0;\r\n    let filtredCasesCount=0;\r\n    const setFilterIndex = function (event) {\r\n        props.dispatch(set_filter_index_action(event.target.value))\r\n    }\r\n    const setFilterAdress = function (event) {\r\n        props.dispatch(set_filter_adress_action(event.target.value))\r\n    }\r\n    const setFilterAct = function (event) {\r\n        props.dispatch(set_filter_act_action(event.target.value))\r\n    }\r\n    const setFilterId = function (event) {\r\n        props.dispatch(set_filter_id_action(event.target.value))\r\n    }\r\n    const changeAdminOperation = function (event) {\r\n        let value = event.target.getAttribute('value');\r\n        props.dispatch(change_admin_operation_action(value))\r\n    }\r\n\r\n    let adminWindow = function () {\r\n        if (props.state.userInfo.isAdmin) {\r\n            return (<div>\r\n                    <div className={s.changeOperation} value={\"stitcher\"} onClick={changeAdminOperation}>Стать\r\n                        расшивщиком\r\n                    </div>\r\n                    <div className={s.changeOperation} value={\"scaner\"} onClick={changeAdminOperation}>Стать\r\n                        сканировщиком\r\n                    </div>\r\n                    <div className={s.changeOperation} value={\"jointer\"} onClick={changeAdminOperation}>Стать\r\n                        сшивщиком\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    let content = function () {\r\n        if (props.state.operator_cases.isFetching) {\r\n            return (<div>загрузка....</div>)                           // display load screen\r\n        } else {\r\n            return (props.state.operator_cases.data.map((el, i, arr) => {\r\n\r\n                if (el.choosen === false) {                                // check for not-choosen cases (display only not-choosen)\r\n                    let filtredElement = applyFilters(props.state.filters, el);\r\n                    if (filtredElement) {\r\n                        filtredCasesCount++\r\n                        if (casesToView < 500) {\r\n                            casesToView++;\r\n                            return (\r\n                                <div key={el.index + '' + el.act}>\r\n                                    <CaseString datacase={el}\r\n                                                user={props.state.userInfo}\r\n                                                dispatch={props.dispatch}/>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }))\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <div>\r\n                    <p className={s.bigText}>Оператор : {props.state.userInfo[\"name\"]}\r\n\r\n                    </p>\r\n                    <p className={s.bigText}>\r\n                        {props.state.userInfo[\"operation\"] === \"stitcher\" ? \"Розшивка \" :\r\n                            (props.state.userInfo[\"operation\"] === \"scaner\" ? \"Сканування \" : \"Зшивка \")}\r\n                    </p>\r\n\r\n                    <p className={s.midText}>Особистий номер: {props.state.userInfo[\"id\"]}</p>\r\n                </div>\r\n                <div>\r\n                    <p className={s.midText}>Справ оброблено: {props.state.userInfo[\"cases\"]}</p>\r\n                    <p className={s.midText}>Сторінок оброблено: {props.state.userInfo[\"pages\"]}</p>\r\n                </div>\r\n                <div>{adminWindow()}</div>\r\n            </div>\r\n            <div className={s.body}>\r\n                <div className={s.caseList}>\r\n                    <div className={s.caseList_header}>\r\n                        <div className={s.topSide}>\r\n                            <div className={s.cell}>Акт</div>\r\n                            <div className={s.cell}>Номер справи</div>\r\n                            <div className={s.cell}>Адреса</div>\r\n                            <div className={s.cell}>Відібрати</div>\r\n                        </div>\r\n                        <div className={s.bottomSide}>\r\n                            {/*<div className={s.cell}>*/}\r\n                            {/*    <input className={s.searchInput}*/}\r\n                            {/*           type={'number'}*/}\r\n                            {/*           value={props.state.filters.act}*/}\r\n                            {/*           onChange={setFilterAct}/>*/}\r\n                            {/*</div>*/}\r\n                            {/*<div className={s.cell}>*/}\r\n                            {/*    <input className={s.searchInput}*/}\r\n                            {/*           type={'number'}*/}\r\n                            {/*           value={props.state.filters.id}*/}\r\n                            {/*           onChange={setFilterId}/>*/}\r\n                            {/*</div>*/}\r\n                            {/*<div className={s.cell}>*/}\r\n                            {/*    <input className={s.searchInput}*/}\r\n                            {/*           type={'text'}*/}\r\n                            {/*           value={props.state.filters.adress}*/}\r\n                            {/*           onChange={setFilterAdress}/>*/}\r\n                            {/*</div>*/}\r\n                            <div className={s.cell}>\r\n                                <input  autoFocus\r\n                                        className={s.searchInput}\r\n                                       type={'number'}\r\n                                       onChange={setFilterIndex}\r\n                                       onKeyDown={addCaseToChoosen}\r\n                                       value={props.state.filters.index}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={s.content}>{content()}</div>\r\n                    <div className={s.footer}>\r\n\r\n                        <div>Усього справ на  {props.state.userInfo[\"operation\"] === \"stitcher\" ? \"розшивці : \" :\r\n                            (props.state.userInfo[\"operation\"] === \"scaner\" ? \"скануванні : \" : \"зшивці : \")}\r\n                            {props.state.operator_cases.data.length}\r\n                        </div>\r\n                        <div>Відфільтровано : {filtredCasesCount}</div>\r\n                        <div>Відображено: {casesToView}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.choosen}>\r\n                    <Choosen\r\n                        user={props.state.userInfo}\r\n                        date={props.state.date}\r\n                        isFetching={props.state.operator_cases.isFetching}\r\n                        caseList={props.state.choosen_cases}\r\n                        dispatch={props.dispatch}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default WorkScreen","import React from 'react';\r\nimport s from './AuthScreen.module.css';\r\nimport {\r\n     set_userhash_action,\r\n    userHash_request_action\r\n} from \"../../Global/Actions\";\r\n\r\nconst AuthScreen = function (props) {\r\n\r\n    let change = function (event) {\r\n        props.dispatch(set_userhash_action(event.target.value))\r\n    }\r\n    let handleEnter = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.dispatch(userHash_request_action(props.state.user))\r\n        }\r\n        if (event.key === ',') {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.window}>\r\n                АВТОРИЗАЦІЯ\r\n                <input autoFocus\r\n                    className={s.input}\r\n                    placeholder={'відскануйте код'}\r\n                       onChange={change}\r\n                       onKeyPress={handleEnter}/>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default AuthScreen","import React from 'react';\r\nimport s from './UserStatsScreen.module.css';\r\nimport SwitchButton from \"./switchButton/SwitchButton\";\r\nimport moment from 'moment'\r\nimport {getMomentFromDateString} from \"../../Global/Functions\";\r\n\r\nconst UserStatsScreen = function (props) {\r\n    let users = props.state.usersStats\r\n    let fullBlock = [];\r\n    console.log(users)\r\n\r\n\r\n    if (props.state.userInfo.isAdmin) {\r\n        if(users){\r\n            users.sort((a,b)=>Number(a.id)<Number(b.id)?-1:1)\r\n            let userCardCreator = function(userCard){\r\n                return(\r\n                    <div className={s.usersString}>\r\n                        <div className={s.cell}>{userCard.id}</div>\r\n                        <div className={s.cell}>{userCard.name}</div>\r\n                        <div className={s.cell}>{userCard.operation}</div>\r\n                        <div className={s.cell}>{userCard.userhash}</div>\r\n                        <div className={s.cell}>{userCard.isAdmin?'+':''}</div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            users.forEach((userCard)=>fullBlock.push(userCardCreator(userCard)))\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.body}>\r\n                <div className={s.usersString}>\r\n                    <div className={s.cell}>Ідентифікатор</div>\r\n                    <div className={s.cell}>Ім'я користувача</div>\r\n                    <div className={s.cell}>Професія</div>\r\n                    <div className={s.cell}>Пароль</div>\r\n                    <div className={s.cell}>Права адміністратора</div>\r\n                </div>\r\n                {fullBlock}\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default UserStatsScreen\r\n\r\n\r\n// cases: 20\r\n// id: \"100\"\r\n// isAdmin: true\r\n// name: \"Катерина Маркелова\"\r\n// operation: \"stitcher\"\r\n// pages: 8060\r\n// userhash: \"100\"","import React from 'react';\r\nimport s from './ProjectScreen.module.css';\r\nimport {\r\n    get_caseFromServer_action,\r\n    post_deleteUser_action, post_hardChange_action,\r\n    post_newUser_action,\r\n    reset_userStats_action,\r\n    set_caseToGet_action,\r\n    set_hardChange_jointer_action,\r\n    set_hardChange_scaner_action,\r\n    set_hardChange_stitcher_action,\r\n    set_newUser_id_action,\r\n    set_newUser_isAdmin_action,\r\n    set_newUser_name_action,\r\n    set_newUser_operation_action,\r\n    set_newUser_userhash_action,\r\n    set_userToDelete_action\r\n} from \"../../Global/Actions\";\r\n\r\nconst ProjectScreen = function (props) {\r\n    const resetUserStats = function () {\r\n        props.dispatch(reset_userStats_action())\r\n    }\r\n    const setName = function (event) {\r\n        props.dispatch(set_newUser_name_action(event.target.value))\r\n    }\r\n    const setUserhash = function (event) {\r\n        props.dispatch(set_newUser_userhash_action(event.target.value))\r\n    }\r\n    const setId = function (event) {\r\n        props.dispatch(set_newUser_id_action(event.target.value))\r\n    }\r\n    const setOperation = function (event) {\r\n        props.dispatch(set_newUser_operation_action(event.target.value))\r\n    }\r\n    const setIsAdmin = function (event) {\r\n        props.dispatch(set_newUser_isAdmin_action(event.target.value))\r\n    }\r\n    const postNewUser = function () {\r\n        props.dispatch(post_newUser_action())\r\n    }\r\n    const setUserToDelete = function (event) {\r\n        props.dispatch(set_userToDelete_action(event.target.value))\r\n    }\r\n    const deleteUser = function () {\r\n        props.dispatch(post_deleteUser_action())\r\n    }\r\n    const getCaseFromServer = function () {\r\n        props.dispatch(get_caseFromServer_action())\r\n    }\r\n    const set_caseToGet = function (event) {\r\n        props.dispatch(set_caseToGet_action(event.target.value))\r\n    }\r\n    const set_hardChange_stitcher=function(event){\r\n        props.dispatch(set_hardChange_stitcher_action(event.target.value))\r\n    }\r\n    const set_hardChange_scaner=function(event){\r\n        props.dispatch(set_hardChange_scaner_action(event.target.value))\r\n    }\r\n    const set_hardChange_jointer=function(event){\r\n        props.dispatch(set_hardChange_jointer_action(event.target.value))\r\n    }\r\n    const hardChangeCase=function(){\r\n        props.dispatch(post_hardChange_action())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <div className={s.container_header}>Создать нового пользователя</div>\r\n\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Имя пользователя</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'text'} value={props.state.newUser.name} onChange={setName}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Штрих-код</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'text'} value={props.state.newUser.userhash} onChange={setUserhash}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Номер пользователя</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'number'} value={props.state.newUser.id} onChange={setId}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Процесс</div>\r\n                    <div className={s.smallCell}>\r\n                        <select className={s.select} value={props.state.newUser.operation} name=\"operation\"\r\n                                onChange={setOperation}>\r\n                            <option value={\"stitcher\"}>Расшивщик</option>\r\n                            <option value={\"scaner\"}>Сканировщик</option>\r\n                            <option value={\"jointer\"}>Сшивщик</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Права администратора:</div>\r\n                    <div className={s.smallCell}>\r\n                        ДА<input type={'checkbox'} value={!props.state.newUser.isAdmin} name={'isAdmin'}\r\n                                 onChange={setIsAdmin}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.greenButton} onClick={postNewUser}> Добавить пользователя</div>\r\n\r\n            </div>\r\n            <div className={s.button}\r\n                 onDoubleClick={resetUserStats}>Сбросить статистику всех пользователей\r\n            </div>\r\n\r\n            <div className={s.container}>\r\n                <div className={s.container_header}> Удалить пользователя</div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Номер пользователя:</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'text'} value={props.state.userToDelete} onChange={setUserToDelete}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.button}\r\n                     onClick={deleteUser}>Удалить пользователя.\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.container}>\r\n                <div className={s.container_header}> Изменить данные в деле</div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Номер дела</div>\r\n                    <div className={s.smallCell}>\r\n                        <input type={'text'} value={props.state.hardChangeToCase.id} onChange={set_caseToGet}/>\r\n                    </div>\r\n                    <div className={s.greenButton}\r\n                         onClick={getCaseFromServer}>Выбрать\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}> Штрих-код: {props.state.hardChangeToCase.index}</div>\r\n                    <div className={s.smallCell}>Номер акта: {props.state.hardChangeToCase.act}</div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.cell}>\r\n                        <div className={s.smallCell}>\r\n                            Адрес: {props.state.hardChangeToCase.street + ' ' + props.state.hardChangeToCase.adress}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Расшивщик:\r\n                        <input type={'number'} value={props.state.hardChangeToCase.stitcher} onChange={set_hardChange_stitcher}/>\r\n                    </div>\r\n                    <div className={s.smallCell}>Дата расшивки:<p>{props.state.hardChangeToCase.stitchDate}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Сканировщик:\r\n                        <input type={'number'} value={props.state.hardChangeToCase.scaner} onChange={set_hardChange_scaner}/>\r\n                    </div>\r\n                    <div className={s.smallCell}>Дата сканировки:<p>{props.state.hardChangeToCase.scanDateFinish}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.smallCell}>Сшивщик:\r\n                        <input type={'number'} value={props.state.hardChangeToCase.jointer} onChange={set_hardChange_jointer}/>\r\n                    </div>\r\n                    <div className={s.smallCell}>Дата сканировки:<p>{props.state.hardChangeToCase.jointDate}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={s.cell}>\r\n                    <div className={s.button}\r\n                         onClick={hardChangeCase}>Внести изменения(осторожненько плис)\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProjectScreen","import React from 'react';\r\nimport s from './SearchString.module.css';\r\n\r\n\r\n\r\n\r\nconst SearchString = function (props) {\r\n    let el=props.el\r\n    let defineClassString=function(el){\r\n        if(el.stitcher===''){return s.wrapper_new}\r\n        else if(el.stitcher!==''&&el.scaner===''){return s.wraper_stitch}\r\n        else if(el.scaner!==''&&el.scanDateFinish===''){return s.wrapper_scanStart}\r\n        else if(el.scanDateFinish!==''&&el.jointer===''){return s.wrapper_scanFinish}\r\n        else if(el.jointer!==''&&el.isDoneDate===''){return s.wrapper_joined}\r\n        else if(el.isDoneDate!==''){return s.wrapper_isDone}\r\n    }\r\n    let defineClassCell=function(indexIsWrong){\r\n        if(indexIsWrong){return s.indexIsWrong}else return ''\r\n    }\r\n\r\n    return (\r\n        <div className={defineClassString(el)}>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.act}</div>\r\n                <div className={s.cell}>{el.incomeDate}</div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.id}</div>\r\n                <div className={s.cell}>{el.index}</div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>\r\n                    {el.street + '  '+ el.adress}\r\n                </div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.stitcher}</div>\r\n                <div className={s.cell}>{el.stitchDate}</div>\r\n            </div>\r\n\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.scaner}</div>\r\n                <div className={s.cell}>{el.scanDateStart}</div>\r\n                <div className={s.cell}>{el.scanDateFinish}</div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.factPages}</div>\r\n                <div className={s.cell +' '+defineClassCell(props.wrongIndex)}>{el.scanNumber}</div>\r\n            </div>\r\n\r\n            <div className={s.bigcell}>\r\n                <div className={s.cell}>{el.jointer}</div>\r\n                <div className={s.cell}>{el.jointDate}</div>\r\n            </div>\r\n            <div className={s.bigcell}>\r\n                {el.isDoneDate}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default SearchString","import React from 'react';\r\nimport s from './SearchScreen.module.css';\r\nimport SearchString from \"./SearchString/SearchString\";\r\nimport {\r\n    actFilter,\r\n    adressFilter, applyFilters,\r\n    idFilter,\r\n    indexFilter, isDoneFilter,\r\n    jointerFilter,\r\n    scanerFilter,\r\n    stitcherFilter\r\n} from \"../../Global/Functions\";\r\nimport {\r\n    set_filter_act_action,\r\n    set_filter_adress_action,\r\n    set_filter_id_action,\r\n    set_filter_index_action,\r\n    set_filter_isDone_action, set_filter_jointDate_action,\r\n    set_filter_jointer_action,\r\n    set_filter_scaner_action, set_filter_scanerFinishDate_action, set_filter_scanerStartDate_action,\r\n    set_filter_stitchDate_action,\r\n    set_filter_stitcher_action\r\n} from \"../../Global/Actions\";\r\n\r\nlet scanNumberInvalidChecker = function (caseToCheck, caseList) {   /// проверялка индексов\r\n    let actsWithEmptyFactPages = [];\r\n    if (caseToCheck.scanNumber === \"00000\") {\r\n        console.log(\"нулі в індексі\" + caseToCheck.id)\r\n        return true\r\n    } else if(caseToCheck.scanNumber&&!caseToCheck.factPages){\r\n        let alreadyMarkAsEmpty = actsWithEmptyFactPages.find((actNumber)=>{\r\n            return actNumber===caseToCheck.act\r\n        })\r\n        if(!alreadyMarkAsEmpty){\r\n            actsWithEmptyFactPages.push(caseToCheck.act)\r\n            console.log('не підтягнуті сторінки в ' +caseToCheck.act + ' акті' )\r\n        }\r\n        return true\r\n    }else{\r\n        if (caseToCheck.scanNumber) {\r\n            let sameScanNumberExist = caseList.find((anyCase) => {\r\n                let sameScanNumber =  (anyCase.scanNumber === caseToCheck.scanNumber\r\n                    && anyCase.scaner === caseToCheck.scaner\r\n                    && anyCase.index !== caseToCheck.index)\r\n                return sameScanNumber\r\n            })\r\n            if (sameScanNumberExist){\r\n                console.log(\"однакові індекси: \"+caseToCheck.id + \" та \" + sameScanNumberExist.id )\r\n                return true\r\n            }\r\n        }else return false\r\n    }\r\n}\r\n\r\nconst SearchScreen = function (props) {\r\n\r\n    const setFilterIndex = function (event) {\r\n        props.dispatch(set_filter_index_action(event.target.value))\r\n    }\r\n    const setFilterAdress = function (event) {\r\n        props.dispatch(set_filter_adress_action(event.target.value))\r\n    }\r\n    const setFilterAct = function (event) {\r\n        props.dispatch(set_filter_act_action(event.target.value))\r\n    }\r\n    const setFilterId = function (event) {\r\n        props.dispatch(set_filter_id_action(event.target.value))\r\n    }\r\n    const setFilterStitcher = function (event) {\r\n        props.dispatch(set_filter_stitcher_action(event.target.value))\r\n    }\r\n    const setFilterStitchDate = function(event){\r\n        props.dispatch(set_filter_stitchDate_action(event.target.value))\r\n    }\r\n    const setFilterScaner = function (event) {\r\n        props.dispatch(set_filter_scaner_action(event.target.value))\r\n    }\r\n    const setFilterScanerDateStart = function(event){\r\n        props.dispatch(set_filter_scanerStartDate_action(event.target.value))\r\n    }\r\n    const setFilterScanerDateFinish = function(event){\r\n        props.dispatch(set_filter_scanerFinishDate_action(event.target.value))\r\n    }\r\n    const setFilterJointer = function (event) {\r\n        props.dispatch(set_filter_jointer_action(event.target.value))\r\n    }\r\n    const setFilterJointDate = function(event){\r\n        props.dispatch(set_filter_jointDate_action(event.target.value))\r\n    }\r\n    const setFilterIsDone = function (event) {\r\n        props.dispatch(set_filter_isDone_action(event.target.value))\r\n    }\r\n\r\n    let maxCounter = 0;\r\n    let suitableWithFilters = 0;\r\n    let content = function (caseList) {\r\n        if (props.state.casesForSearch.isFetching) {\r\n            return (<div>LOADING ...................................</div>)\r\n        }\r\n        if (Array.isArray(caseList)) {\r\n            return caseList.map((el) => {\r\n\r\n\r\n\r\n                let filtredElement = applyFilters(props.state.filters, el)\r\n                if (filtredElement) {\r\n                    let indexIsWrong = scanNumberInvalidChecker(el,caseList)\r\n                    suitableWithFilters++\r\n                    if (maxCounter < 600) {\r\n                        maxCounter++\r\n                        return (\r\n                            <SearchString el={el}\r\n                                          key={el.index + '' + el.act}\r\n                                          wrongIndex={indexIsWrong}/>\r\n                        )\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <div className={s.side}>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Акт\r\n                            <input type={'number'} className={s.input}\r\n                                   value={props.state.filters.act} onChange={setFilterAct}/>\r\n                        </div>\r\n                        <div className={s.cell}>Дата отримання\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Справа №\r\n                            <input type={'number'} className={s.input}\r\n                                   value={props.state.filters.id} onChange={setFilterId}/>\r\n                        </div>\r\n                        <div className={s.cell}>Баркод\r\n                            <input type={'number'} className={s.input}\r\n                                   value={props.state.filters.index} onChange={setFilterIndex}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>Адреса\r\n                        <input type={'text'} className={s.input}\r\n                               value={props.state.filters.adress} onChange={setFilterAdress}/>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Розшивщик\r\n                            <input type={'number'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.stitcher}\r\n                                   onChange={setFilterStitcher}/>\r\n                        </div>\r\n                        <div className={s.cell}>Дата розшивки\r\n                            <input type={'text'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.stitchDate}\r\n                                   onChange={setFilterStitchDate}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Сканувальник\r\n                            <input type={'number'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.scaner}\r\n                                   onChange={setFilterScaner}/>\r\n                        </div>\r\n                        <div className={s.cell}>Дата початку\r\n                            <input type={'text'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.scanerDateStart}\r\n                                   onChange={setFilterScanerDateStart}/>\r\n                        </div>\r\n                        <div className={s.cell}>Дата закінчення\r\n                            <input type={'text'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.scanerDateFinish}\r\n                                   onChange={setFilterScanerDateFinish}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>сторінок</div>\r\n\r\n                        <div className={s.cell}>індекс</div>\r\n                    </div>\r\n\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Зшивщик\r\n                            <input type={'number'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.jointer}\r\n                                   onChange={setFilterJointer}/>\r\n                        </div>\r\n                        <div className={s.cell}>Дата зшивки\r\n                            <input type={'text'}\r\n                                   className={s.input}\r\n                                   value={props.state.filters.jointDate}\r\n                                   onChange={setFilterJointDate}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        Дата здачі в архів\r\n                        <input type={'text'}\r\n                               className={s.input}\r\n                               value={props.state.filters.isDone}\r\n                               onChange={setFilterIsDone}/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.body}>\r\n                {content(props.state.casesForSearch.data)}\r\n            </div>\r\n            <div className={s.footer}>\r\n                <div>Усього справ у списку: {props.state.casesForSearch.data.length}</div>\r\n                <div>Підходить під фільтри: {suitableWithFilters}</div>\r\n                <div>Відображується: {maxCounter}</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default SearchScreen","import React from 'react';\r\nimport s from './HandOverScreen.module.css';\r\nimport {actFilter, adressFilter, idFilter, indexFilter} from \"../../Global/Functions\";\r\nimport {\r\n    post_done_cases_action,\r\n    push_filtredByIndex_to_handOverCasesList_action,\r\n    set_filter_index_action\r\n} from \"../../Global/Actions\";\r\nimport SearchString from \"../SearchScreen/SearchString/SearchString\";\r\n\r\nconst HandOverScreen = function (props) {\r\n\r\n    const setFilterIndex = function (event) {\r\n        props.dispatch(set_filter_index_action(event.target.value))\r\n    }\r\n    const pushCaseToHandOverList = function (event) {\r\n        if (event.key===\"Enter\"){\r\n            props.dispatch(push_filtredByIndex_to_handOverCasesList_action())\r\n        }\r\n        if(event.key===\",\"){event.preventDefault()}\r\n    }\r\n    const post_done_cases=function(event){\r\n        props.dispatch(post_done_cases_action())\r\n    }\r\n\r\n    let handOverCaseListLength = 0;\r\n    let content = function (caseList) {\r\n        if (props.state.casesForSearch.isFetching) {\r\n            return (<div>LOADING ...................................</div>)\r\n        }\r\n        if (Array.isArray(caseList)) {\r\n            return caseList.map((el) => {\r\n                handOverCaseListLength++;\r\n                    return (\r\n                        <SearchString el={el}\r\n                                      key={el.index + '' + el.act}/>\r\n                    )\r\n            })\r\n        } else console.log(\" caseList HandOverScreen Нет дел для отображения\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <div className={s.side}>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Акт\r\n\r\n                        </div>\r\n                        <div className={s.cell}>Дата получения\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Дело\r\n                        </div>\r\n                        <div className={s.cell}>Штрих-код\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>Адрес\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Расшивщик\r\n                        </div>\r\n                        <div className={s.cell}>дата расшивки\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Сканировщик\r\n                        </div>\r\n                        <div className={s.cell}>Дата начала\r\n                        </div>\r\n                        <div className={s.cell}>Дата окончания\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>страниц отсканено</div>\r\n                        <div className={s.cell}>страниц ожидалось</div>\r\n                        <div className={s.cell}>индекс</div>\r\n                    </div>\r\n\r\n                    <div className={s.bigcell}>\r\n                        <div className={s.cell}>Сшивщик\r\n                        </div>\r\n                        <div className={s.cell}>Дата сшивки\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.bigcell}>\r\n                        Охрана отмена\r\n                    </div>\r\n                </div>\r\n                <div className={s.side}>\r\n                    <input className={s.input}\r\n                           value={props.state.filters.index}\r\n                           onChange={setFilterIndex}\r\n                           onKeyDown={pushCaseToHandOverList}/>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.body}>\r\n                {content(props.state.casesForHandOver)}\r\n            </div>\r\n            <div className={s.footer}>\r\n                <div>Всего дел на проэкте: {props.state.casesForSearch.data.length}</div>\r\n                <div>Отобрано: {handOverCaseListLength}</div>\r\n                <div className={s.handOver} onClick={post_done_cases}>Сдать в архив</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default HandOverScreen","import React from 'react';\r\nimport  { Component } from \"react\";\r\nimport s from './Cell.module.css';\r\n\r\n\r\nlet  Cell= function (props) {\r\n\r\n    if(props.visible===true){\r\n        return (<div className={s.wrapper_2floor}>\r\n                <div className={s.inner}>{props.value.cases}</div>\r\n                <div className={s.inner}>{props.value.pages}</div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>{props.value.cases}</div>\r\n            </div>\r\n\r\n    )}\r\n\r\n\r\n}\r\nexport default Cell","import React from 'react';\r\nimport {Component} from \"react\";\r\nimport s from './ProjectStatsScreen.module.css';\r\nimport {setPagesVisible_action} from \"../../Global/Actions\";\r\nimport Cell from \"./Cell/Cell\";\r\n\r\n\r\nlet ProjectStatsScreen = function (props) {\r\n\r\n    let total = [{cases: 0, pages: 0}, {cases: 0, pages: 0}, {cases: 0, pages: 0}, {cases: 0, pages: 0}, {\r\n        cases: 0,\r\n        pages: 0\r\n    }, {cases: 0, pages: 0}];\r\n    let projectStats_setPagesVisible = function () {\r\n        props.dispatch(setPagesVisible_action())\r\n    }\r\n\r\n    let actsStat = function () {\r\n        let allActs = props.state.projectStats.allActsStats\r\n        console.log(allActs)\r\n        let strings = [];\r\n        for (let actName in allActs) {\r\n            console.log(allActs[actName])\r\n            total[0].cases += Number(allActs[actName].new.cases)\r\n            total[0].pages += Number(allActs[actName].new.pages)\r\n            total[1].cases += Number(allActs[actName].stitcher.cases)\r\n            total[1].pages += Number(allActs[actName].stitcher.pages)\r\n            total[2].cases += Number(allActs[actName].onScan.cases)\r\n            total[2].pages += Number(allActs[actName].onScan.pages)\r\n            total[3].cases += Number(allActs[actName].scaner.cases)\r\n            total[3].pages += Number(allActs[actName].scaner.pages)\r\n            total[4].cases += Number(allActs[actName].jointer.cases)\r\n            total[4].pages += Number(allActs[actName].jointer.pages)\r\n            total[5].cases += Number(allActs[actName].isDone.cases)\r\n            total[5].pages += Number(allActs[actName].isDone.pages)\r\n            console.log(total)\r\n            let string = function () {\r\n                return (\r\n                    <tr className={s.actString} key={'actStatString' + actName}>\r\n                        <td className={s.stringcell}>{actName}</td>\r\n                        <td className={s.stringcell + ' ' + s.new}>{allActs[actName].startDate}</td>\r\n                        <td className={s.stringcell + ' ' + s.new}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].new}/>\r\n                        </td>\r\n\r\n                        <td className={s.stringcell + ' ' + s.stitch}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].stitcher}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.onScan}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].onScan}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.scan}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].scaner}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.joint}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].jointer}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.done}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allActs[actName].isDone}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.done}>{allActs[actName].finishDate}</td>\r\n                    </tr>\r\n                )\r\n            }()\r\n            strings.push(string)\r\n        }\r\n        return strings\r\n    }\r\n    let dateStat = function () {\r\n        let allDates = props.state.projectStats.allDatesStats\r\n        let strings = [];\r\n        for (let date in allDates) {\r\n            let string = function () {\r\n                return (\r\n                    <tr className={s.actString} key={'dateString' + date}>\r\n                        <td className={s.stringcell}>{date}</td>\r\n\r\n                        <td className={s.stringcell + ' ' + s.new}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].new}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.stitch}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].stitcher}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.onScan}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].onScan}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.scan}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].scaner}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.joint}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].jointer}/>\r\n                        </td>\r\n                        <td className={s.stringcell + ' ' + s.done}>\r\n                            <Cell visible={props.state.projectStats_pagesVisible} value={allDates[date].isDone}/>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }()\r\n            strings.push(string)\r\n        }\r\n        return strings\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.checkbox} onClick={projectStats_setPagesVisible}>\r\n                {props.state.projectStats_pagesVisible ? \"Вимкнути сторінки\" : \"Увімкнути сторінки\"}\r\n            </div>\r\n            <div className={s.wrapper_line}>\r\n\r\n                <div className={s.actStats}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr className={s.segment_header}>\r\n                            <td className={s.cell}>Акт №</td>\r\n                            <td className={s.cell}>Дата получения</td>\r\n                            <td className={s.cell}>Получено</td>\r\n                            <td className={s.cell}>Расшито</td>\r\n                            <td className={s.cell}>На скане</td>\r\n                            <td className={s.cell}>Отскан</td>\r\n                            <td className={s.cell}>Сшито</td>\r\n                            <td className={s.cell}>Сдано</td>\r\n                            <td className={s.cell}>Дата сдачи</td>\r\n                            <td className={s.placeholder}/>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <table className={s.segment_body}>\r\n                        <tbody>\r\n                        {actsStat()}\r\n                        </tbody>\r\n                    </table>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr className={s.footer}>\r\n                            <td className={s.cell}>В наличии:</td>\r\n                            <td className={s.cell}/>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[0].cases - total[1].cases,\r\n                                          pages: total[0].pages - total[1].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[1].cases - total[2].cases,\r\n                                          pages: total[1].pages - total[2].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[2].cases - total[3].cases,\r\n                                          pages: total[2].pages - total[3].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[3].cases - total[4].cases,\r\n                                          pages: total[3].pages - total[4].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={{\r\n                                          cases: total[4].cases - total[5].cases,\r\n                                          pages: total[4].pages - total[5].pages\r\n                                      }}/>\r\n                            </td>\r\n                            <td className={s.cell}>------</td>\r\n                            <td className={s.cell}/>\r\n                            <td className={s.placeholder}/>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n                <div className={s.actStats}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr className={s.segment_header}>\r\n                            <td className={s.cell}>Дата</td>\r\n                            <td className={s.cell}>Получено</td>\r\n                            <td className={s.cell}>Расшито</td>\r\n                            <td className={s.cell}>На скане</td>\r\n                            <td className={s.cell}>Отскан</td>\r\n                            <td className={s.cell}>Сшито</td>\r\n                            <td className={s.cell}>Сдано</td>\r\n                            <td className={s.placeholder}/>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <table className={s.segment_body}>\r\n                        <tbody>\r\n                        {dateStat()}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <table>\r\n                        <tbody>\r\n                        <tr className={s.footer}>\r\n                            <td className={s.cell}>Всего:</td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[0]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[1]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[2]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[3]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[4]}/>\r\n                            </td>\r\n                            <td className={s.cell}>\r\n                                <Cell visible={props.state.projectStats_pagesVisible}\r\n                                      value={total[5]}/>\r\n                            </td>\r\n                            <td className={s.placeholder}></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProjectStatsScreen","import React from 'react';\r\nimport s from './SwitchButton.module.css';\r\nimport {switchStatsOperation_action, switchViewMode_action} from \"../../../Global/Actions\";\r\n\r\nconst SwitchButton = function (props) {\r\n\r\nconst clickSwitchButton=function(){\r\n    if(props.field===\"view mode\"){\r\n        props.dispatch(switchViewMode_action(props.value))\r\n    }else if(props.field===\"statsOperation\"){\r\n        props.dispatch(switchStatsOperation_action(props.value))\r\n    }\r\n\r\n}\r\nconst defineClass=function(){\r\n    let classString = ''\r\n    if(props.viewMode===props.value||props.statsOperation===props.value){classString+= s.clicked}\r\n    else{classString+= s.active}\r\n\r\n    if(props.statsOperation===\"stitcher\"){classString+=' '+s.stitchColor}\r\n    if(props.statsOperation===\"scaner\"){classString+=' '+s.scaner}\r\n    if(props.statsOperation===\"jointer\"){classString+=' '+s.jointer}\r\n    return classString\r\n}\r\n\r\n\r\n    return (\r\n       <div className={defineClass()}\r\n       onClick={clickSwitchButton}>\r\n           {props.text}\r\n       </div>\r\n    )\r\n\r\n}\r\nexport default SwitchButton","import React from 'react';\r\nimport  { Component } from \"react\";\r\nimport s from './Cell.module.css';\r\n\r\n\r\nlet  Cell= function (props) {\r\n\r\n    if(props.visible===true){\r\n        return (<td className={s.wrapper_2floor}>\r\n                {props.value}\r\n            </td>\r\n        )\r\n    }else{\r\n        return(\r\n            <td className={s.displayNone}></td>\r\n\r\n    )}\r\n\r\n\r\n}\r\nexport default Cell","import React from 'react';\r\nimport s from './UserStatScreen.module.css';\r\nimport SwitchButton from \"./switchButton/SwitchButton\";\r\nimport {getCurrentMonth} from \"../../Global/Functions\";\r\nimport {setPagesVisible_action} from \"../../Global/Actions\";\r\nimport Cell from \"./Cell/Cell\";\r\nimport {switchViewMode_action} from \"../../Global/Actions\"\r\n\r\n\r\nconst UserStatScreen = function (props) {\r\n    const defineClass = function () {\r\n\r\n    }\r\n    let projectStats_setPagesVisible = function () {\r\n        props.dispatch(setPagesVisible_action())\r\n    }\r\n\r\n\r\n    let dateStats;\r\n    if (props.state.viewMode === \"total\") {\r\n        dateStats = props.state.dateUsersStats\r\n    } else {\r\n        dateStats = getCurrentMonth(props.state.dateUsersStats,props.state.viewMode)\r\n    }\r\n    \r\n    let users = [];\r\n    let content = function () {\r\n        let allUsers = [];\r\n        for (let date in dateStats) {\r\n            for (let user in dateStats[date]) {\r\n                let userIsExist = allUsers.find((existUser) => existUser.name === dateStats[date][user].name)\r\n                if (!userIsExist) {\r\n                    dateStats[date][user][\"id\"] = user\r\n                    allUsers.push(dateStats[date][user])\r\n                }\r\n            }\r\n        }\r\n        allUsers.sort()\r\n        console.log(\"all users length \" + allUsers.length)\r\n        let content_header_creator = function () {\r\n\r\n            allUsers.forEach((user) => {\r\n                users.push(\r\n                    <Cell visible={props.state.projectStats_pagesVisible}\r\n                          key={user.id + user.name}\r\n                          value={user.id}/>\r\n                )\r\n                users.push(\r\n                    <Cell visible={true}\r\n                          key={user.name}\r\n                          value={user.name}/>\r\n                )\r\n\r\n            })\r\n            return (\r\n                <tr className={s.headerString} key={\"headerString\"}>\r\n                    <td className={s.headerCell}> Дата</td>\r\n                    {users}\r\n                    <Cell visible={props.state.projectStats_pagesVisible}\r\n                          value={\"Усього за день,справ.\"}\r\n                    />\r\n                    <Cell visible={true}\r\n                          value={\"Усього за день,стор.\"}\r\n    />\r\n                </tr>\r\n\r\n            )\r\n        };\r\n        let content_header = content_header_creator();\r\n\r\n        let usersTotal = {};  //счетчик суммы для каждого пользователя\r\n\r\n        let content_body_creator = function () {\r\n            let keyCounter = 0\r\n            let allStrings = [];\r\n            for (let date in dateStats) {\r\n                let string = [];\r\n                let stringSum = {cases: 0, pages: 0};\r\n                string.push(<td className={s.headerCell} key={date}>{date}</td>)\r\n\r\n                allUsers.forEach((userObj) => {\r\n                    let user = userObj.id\r\n                    console.log('userObj')\r\n                    console.log(userObj)\r\n\r\n                    if (dateStats[date][user]) {                              //счетчик суммы для каждого пользователя\r\n                        if (usersTotal[user]) {\r\n                            usersTotal[user].cases = Number(usersTotal[user].cases) + Number(dateStats[date][user].cases)\r\n                            usersTotal[user].pages = Number(usersTotal[user].pages) + Number(dateStats[date][user].pages)\r\n                            console.log(usersTotal)\r\n                        } else {\r\n                            usersTotal[user] = {\r\n                                cases: Number(dateStats[date][user].cases),\r\n                                pages: Number(dateStats[date][user].pages)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (dateStats[date][user]) {                 //создание строки со статистикой пользователей\r\n                        stringSum.cases += Number(dateStats[date][user].cases);\r\n                        stringSum.pages += Number(dateStats[date][user].pages);\r\n                        string.push(\r\n                            <Cell visible={props.state.projectStats_pagesVisible}\r\n                                  value={dateStats[date][user].cases}/>)\r\n                        string.push(\r\n                            <Cell visible={true}\r\n                                  value={dateStats[date][user].pages}/>)\r\n\r\n\r\n\r\n                    } else {\r\n                        string.push(\r\n                            <Cell visible={props.state.projectStats_pagesVisible}\r\n                                  value={\"\"}/>)\r\n                        string.push(\r\n                            <Cell visible={true}\r\n                                  value={\"\"}/>)\r\n\r\n\r\n                    }\r\n                })\r\n                string.push(\r\n                    <Cell visible={props.state.projectStats_pagesVisible}\r\n                          value={stringSum.cases}\r\n                    />\r\n                )\r\n                string.push(\r\n                    <Cell visible={true}\r\n                          value={stringSum.pages}\r\n                          />\r\n                )\r\n\r\n                allStrings.push(<tr className={s.bodyString} key={'string' + date}>{string}</tr>)\r\n            }\r\n\r\n            return allStrings\r\n        }\r\n        let content_body = content_body_creator();\r\n\r\n        let content_footer_creator = function () {\r\n            let footerString = [];\r\n            let totalSum = {pages: 0, cases: 0}\r\n\r\n            footerString.push(<td className={s.footerCell} key={'stringTotalHeader'}>Усього</td>)\r\n            allUsers.forEach((userObj) => {\r\n                let user = userObj.id\r\n                let el = usersTotal[user];\r\n                if (el) {\r\n                    totalSum.pages += Number(el.pages);\r\n                    totalSum.cases += Number(el.cases);\r\n\r\n                    footerString.push(\r\n                        <Cell visible={props.state.projectStats_pagesVisible}\r\n                              key={el.cases+'_'+el.pages}\r\n                              value={el.cases}/>\r\n                    )\r\n                    footerString.push(\r\n                            <Cell visible={true}\r\n                                  key={el.pages+'_'+el.cases}\r\n                                  value={el.pages}/>\r\n                    )\r\n\r\n                }\r\n\r\n\r\n            })\r\n            footerString.push(\r\n                <Cell visible={props.state.projectStats_pagesVisible}\r\n                      key={\"footerTotalCases\"}\r\n                      value={totalSum.cases}/>\r\n            )\r\n            footerString.push(\r\n                    <Cell visible={true}\r\n                          key={\"footerTotalPages\"}\r\n                          value={totalSum.pages}/>\r\n            )\r\n\r\n\r\n\r\n            return <tr className={s.footerString} key={'footerString'}>{footerString}</tr>\r\n        }\r\n        let content_footer = content_footer_creator();\r\n\r\n        return (\r\n            <table className={s.bodyTable}>\r\n                <tbody>\r\n                {content_header}\r\n                {content_body}\r\n                {content_footer}\r\n                </tbody>\r\n            </table>\r\n        )\r\n\r\n    }\r\n    let setNeededMonth = function(event){\r\n        if(event.target.value===\"\"){\r\n            props.dispatch(switchViewMode_action(\"total\"))\r\n        }else{\r\n            props.dispatch(switchViewMode_action(event.target.value))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.header}>\r\n                <div className={s.headerCell}>\r\n                    <input  className={s.monthInput}\r\n                            onChange={setNeededMonth}\r\n                            placeholder={\"Вкажіть потрібний місяць\"}\r\n                            type={\"options\"}\r\n                            field={\"view mode\"}/>\r\n                </div>\r\n                <div className={s.headerCell}>\r\n                    <div className={s.checkbox} onClick={projectStats_setPagesVisible}>\r\n                        {props.state.projectStats_pagesVisible ? \"Сховати кількість справ\" : \"Відображується тільки кількість сторінок (розгорнути)\"}\r\n                    </div>\r\n                </div>\r\n                <div className={s.headerCell}>\r\n                    <SwitchButton text={\"Расшивка\"}\r\n                                  field={\"statsOperation\"}\r\n                                  value={'stitcher'}\r\n                                  dispatch={props.dispatch}\r\n                                  viewMode={props.state.viewMode}\r\n                                  statsOperation={props.state.statsOperation}/>\r\n                    <SwitchButton text={\"Сканировка\"}\r\n                                  field={\"statsOperation\"}\r\n                                  value={'scaner'}\r\n                                  dispatch={props.dispatch}\r\n                                  viewMode={props.state.viewMode}\r\n                                  statsOperation={props.state.statsOperation}/>\r\n                    <SwitchButton text={\"Сшивка\"}\r\n                                  field={\"statsOperation\"}\r\n                                  value={'jointer'}\r\n                                  dispatch={props.dispatch}\r\n                                  viewMode={props.state.viewMode}\r\n                                  statsOperation={props.state.statsOperation}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className={s.body}>\r\n                {content()}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default UserStatScreen","import React from 'react';\r\n\r\n\r\n\r\nconst UserStatsByActs = function (props) {\r\n\r\n\r\n    return (\r\n       <div>UserStatsByActs</div>\r\n    )\r\n\r\n}\r\nexport default UserStatsByActs","import React from 'react';\r\nimport s from './App.module.css';\r\nimport Header from \"./Components/Header/Header\";\r\nimport WorkScreen from \"./Components/WorkScreen/WorkScreen\";\r\nimport AuthScreen from \"./Components/AuthScreen/AuthScreen\";\r\nimport UserStatsScreen from \"./Components/UserStatsScreen/UserStatsScreen\";\r\nimport ProjectScreen from \"./Components/ProjectScreen/ProjectScreen\";\r\nimport SearchScreen from \"./Components/SearchScreen/SearchScreen\";\r\nimport HandOverScreen from \"./Components/HandOverScreen/HandOverScreen\";\r\nimport ProjectStatsScreen from \"./Components/ProjectStatsScreen/ProjectStatsScreen\";\r\nimport UserStatScreen from \"./Components/UserStatScreen/UserStatScreen\";\r\nimport UserStatByActs from \"./Components/UserStatsByActs/UserStatsByActs\";\r\n\r\n\r\nfunction App(props) {\r\n\r\n    let setCurrentNavScreen = function () {\r\n        if (props.state.currentNav === 'work') {\r\n            return (\r\n                <div>\r\n                    <WorkScreen dispatch={props.dispatch}\r\n                                  state={props.state}/>\r\n                </div>\r\n            )\r\n\r\n        } else if (props.state.currentNav === 'auth') {\r\n            return (\r\n                <div className={s.wrapper}>\r\n                    <AuthScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }else if (props.state.currentNav === 'userStats') {\r\n            return (\r\n                <div>\r\n                    <UserStatsScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }else if (props.state.currentNav === 'projectSettings') {\r\n            return (\r\n                <div>\r\n                    <ProjectScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'search') {\r\n            return (\r\n                <div>\r\n                    <SearchScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'handOver') {\r\n            return (\r\n                <div>\r\n                    <HandOverScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'projectStats') {\r\n            return (\r\n                <div>\r\n                    <ProjectStatsScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'userStats2') {\r\n            return (\r\n                <div>\r\n                    <UserStatScreen\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.state.currentNav === 'userStatsByActs') {\r\n            return (\r\n                <div>\r\n                    <UserStatByActs\r\n                        dispatch={props.dispatch}\r\n                        state={props.state}/>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.App}>\r\n            <Header dispatch={props.dispatch}\r\n                    state={props.state}\r\n            />\r\n\r\n            <div className={s.bg_image}>\r\n                {setCurrentNavScreen()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport store from \"./Global/redux-store.js\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"./App\";\r\n\r\nconst render = (state) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n                <App state={state.main}\r\n                     dispatch={store.dispatch.bind(store)}\r\n                     key={\"reactApp\"}\r\n                />\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\nlet state=store.getState();\r\nrender(state);\r\nstore.subscribe(()=>{render(store.getState())});\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}